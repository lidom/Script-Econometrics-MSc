[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Econometrics M.Sc.",
    "section": "",
    "text": "Day \n    Time (UTC+2) \n    Lecture Hall \n  \n \n\n  \n    Monday \n    14:15-15:45 \n    Jur / Hörsaal F \n  \n  \n    Thursday \n    16:15-17:45 \n    Jur / Hörsaal F \n  \n\n\n\n\n\n\n\n\n\neWhiteboard for lecture notes\neWhiteboard for exercises\nThis online script\n\nThe above links can also be found at eCampus.\nFor students not yet in Bonn, I’ll stream the lectures via Zoom (Meeting-ID: 992 8328 7705, Pwd: 708587) during the first lecture weeks.\n\n\n\nIt’s not must, but you can read any of the usual econometrics textbooks additionally to this script. I can recommend the following ones, but there are many other good books:\n\nProbability and Statistics for Economists, by Bruce E. Hansen\nEconometrics, by Bruce E. Hansen\nEconometrics, by F. Hayashi \nIntroduction to econometrics, by J. Stock and M.W. Watson\n\nE-Book: https://bonnus.ulb.uni-bonn.de/SummonRecord/FETCH-bonn_catalog_45089983\n\nEconometric theory and methods, by R. Davidson and J.G. MacKinnon"
  },
  {
    "objectID": "01-Introduction-to-R.html",
    "href": "01-Introduction-to-R.html",
    "title": "1  Introduction to R",
    "section": "",
    "text": "This tutorial aims to serve as an introduction to the software package R. Other very good and much more exhaustive tutorials and useful reference-cards can be found at the following links:\nWhy R?"
  },
  {
    "objectID": "01-Introduction-to-R.html#short-glossary",
    "href": "01-Introduction-to-R.html#short-glossary",
    "title": "1  Introduction to R",
    "section": "1.1 Short Glossary",
    "text": "1.1 Short Glossary\nLets start the tutorial with a (very) short glossary:\n\nConsole: The thing with the > sign at the beginning.\nScript file: An ordinary text file with suffix .R. For instance, yourFavoritFileName.R.\nWorking directory: The file-directory you are working in. Useful commands: with getwd() you get the location of your current working directory and setwd() allows you to set a new location for it.\nWorkspace: This is a hidden file (stored in the working directory), where all objects you use (e.g., data, matrices, vectors, variables, functions, etc.) are stored. Useful commands: ls() shows all elements in our current workspace and rm(list=ls()) deletes all elements in our current workspace."
  },
  {
    "objectID": "01-Introduction-to-R.html#first-steps",
    "href": "01-Introduction-to-R.html#first-steps",
    "title": "1  Introduction to R",
    "section": "1.2 First Steps",
    "text": "1.2 First Steps\nA good idea is to use a script file such as yourFavoritFileName.R in order to store your R commands. You can send single lines or marked regions of your R-code to the console by pressing the keys STRG+ENTER.\nTo begin with baby steps, do some simple computations:\n\n2+2 # and all the others: *,/,-,^2,^3,... \n\n[1] 4\n\n\nNote: Everything that is written after the #-sign is ignored by R, which is very useful to comment your code.\nThe assignment operator will be your most often used tool. Here an example to create a scalar variable:\n\nx <- 4 \nx\n\n[1] 4\n\n4 -> x # possible but unusual\nx\n\n[1] 4\n\n\nNote: The R community loves the <- assignment operator, which is a very unusual syntax. Alternatively, you can use the = operator.\nAnd now a more interesting object - a vector:\n\ny <- c(2,7,4,1)\ny\n\n[1] 2 7 4 1\n\n\nThe command ls() shows the total content of your current workspace, and the command rm(list=ls()) deletes all elements of your current workspace:\n\nls()[1:5] # only the first 5 elements\n\n[1] \"x\" \"y\" NA  NA  NA \n\nrm(list=ls())\nls()\n\ncharacter(0)\n\n\nNote: RStudio’s Environment pane also lists all the elements in your current workspace. That is, the command ls() becomes a bit obsolete when working with RStudio.\nLet’s try how we can compute with vectors and scalars in R.\n\nx <- 4\ny <- c(2,7,4,1)\n\nx*y # each element in y (vector) is multiplied by x (scalar).\n\n[1]  8 28 16  4\n\ny*y # this is a term by term product of the elements in y\n\n[1]  4 49 16  1\n\n\nPerforming vector multiplications as you might expect from your last math-course, e.g., an outer product: \\(y\\,y^\\top\\):\n\ny %*% t(y)\n\n     [,1] [,2] [,3] [,4]\n[1,]    4   14    8    2\n[2,]   14   49   28    7\n[3,]    8   28   16    4\n[4,]    2    7    4    1\n\n\nOr an inner product \\(y^\\top y\\):\n\nt(y) %*% y\n\n     [,1]\n[1,]   70\n\n\nNote: Sometimes, R’s treatment of vectors can be annoying. The product y %*% y is treated as the product t(y) %*% y.\nThe term-by-term execution as in the above example, y*y, is actually a central strength of R. We can conduct many operations vector-wisely:\n\ny^2\n\n[1]  4 49 16  1\n\nlog(y)\n\n[1] 0.6931472 1.9459101 1.3862944 0.0000000\n\nexp(y)\n\n[1]    7.389056 1096.633158   54.598150    2.718282\n\ny-mean(y)\n\n[1] -1.5  3.5  0.5 -2.5\n\n(y-mean(y))/sd(y) # standardization \n\n[1] -0.5669467  1.3228757  0.1889822 -0.9449112\n\n\nThis is a central characteristic of so called matrix based languages like R (or Matlab). Other programming languages often have to use loops instead:\n\nN <- length(y)\n1:N\n\ny.sq <- numeric(N)\ny.sq\n\nfor(i in 1:N){\n  y.sq[i] <- y[i]^2\n  if(i == N){\n    print(y.sq)\n  }\n}\n\nThe for()-loop is the most common loop. But there is also a while()-loop and a repeat()-loop. However, loops in R can be rather slow, therefore, try to avoid them!\n\nUseful commands to produce sequences of numbers:\n\n1:10\n-10:10\n?seq # Help for the seq()-function\nseq(from=1, to=100, by=7)\n\nUsing the sequence command 1:16, we can go for our first matrix:\n\n?matrix\nA <- matrix(data=1:16, nrow=4, ncol=4)\nA\n\n     [,1] [,2] [,3] [,4]\n[1,]    1    5    9   13\n[2,]    2    6   10   14\n[3,]    3    7   11   15\n[4,]    4    8   12   16\n\nA <- matrix(1:16, 4, 4)\n\nNote that a matrix has always two dimensions, but a vector has only one dimension:\n\ndim(A)    # Dimension of matrix A?\n\n[1] 4 4\n\ndim(y)    # dim() does not operate on vectors.\n\nNULL\n\nlength(y) # Length of vector y?\n\n[1] 4\n\n\nLets play a bit with the matrix A and the vector y. As we have seen in the loop above, the []-operator selects elements of vectors and matrices:\n\nA[,1]\nA[4,4]\ny[c(1,4)]\n\nThis can be done on a more logical basis, too. For example, if you want to know which elements in the first column of matrix A are strictly greater than 2:\n\nA[,1][A[,1]>2]\n\n[1] 3 4\n\n# Note that this give you a boolean vector:\nA[,1]>2\n\n[1] FALSE FALSE  TRUE  TRUE\n\n# And you can use it in a non-sense relation, too:\ny[A[,1]>2]\n\n[1] 4 1\n\n\nNote: Logical operations return so-called boolean objects, i.e., either a TRUE or a FALSE. For instance, if we ask R whether 1>2 we get the answer FALSE."
  },
  {
    "objectID": "01-Introduction-to-R.html#further-data-objects",
    "href": "01-Introduction-to-R.html#further-data-objects",
    "title": "1  Introduction to R",
    "section": "1.3 Further Data Objects",
    "text": "1.3 Further Data Objects\nBesides classical data objects such as scalars, vectors, and matrices there are three further data objects in R:\n\n1. The array: As a matrix but with more dimensions. Here is an example of a \\(2\\times 2\\times 2\\)-dimensional array:\n\nmyFirst.Array <- array(c(1:8), dim=c(2,2,2)) # Take a look at it!\n\n\n\n2. The list: In lists you can organize different kinds of data. E.g., consider the following example:\n\nmyFirst.List <- list(\n  \"Some_Numbers\" = c(66, 76, 55, 12, 4, 66, 8, 99), \n  \"Animals\"      = c(\"Rabbit\", \"Cat\", \"Elefant\"),\n  \"My_Series\"    = c(30:1)\n) \n\nA very useful function to find specific values and entries within lists is the str()-function:\n\nstr(myFirst.List)\n\nList of 3\n $ Some_Numbers: num [1:8] 66 76 55 12 4 66 8 99\n $ Animals     : chr [1:3] \"Rabbit\" \"Cat\" \"Elefant\"\n $ My_Series   : int [1:30] 30 29 28 27 26 25 24 23 22 21 ...\n\n\n\n\n3. The data frame: A data.frame is a list-object but with some more formal restrictions (e.g., equal number of rows for all columns). As indicated by its name, a data.frame-object is designed to store data:\n\nmyFirst.Dataframe <- data.frame(\n  \"Credit_Default\"   = c( 0, 0, 1, 0, 1, 1), \n  \"Age\"              = c(35,41,55,36,44,26), \n  \"Loan_in_1000_EUR\" = c(55,65,23,12,98,76)\n) \n# Take a look at it!"
  },
  {
    "objectID": "01-Introduction-to-R.html#simple-regression-analysis-using-r",
    "href": "01-Introduction-to-R.html#simple-regression-analysis-using-r",
    "title": "1  Introduction to R",
    "section": "1.4 Simple Regression Analysis using R",
    "text": "1.4 Simple Regression Analysis using R\nAlright, let’s do some statistics with real data. You can download the data HERE. Save it on your computer, at a place where you can find it, and give the path (e.g. \"C:\\textbackslash path\\textbackslash autodata.csv\", which references to the data, to the file-argument of the function read.csv():\n\n# ATTENTION! YOU HAVE TO CHANGE \"\\\" TO \"/\":\nauto.data <- read.csv(file   = \"C:/your_path/autodata.csv\", \n                      header = TRUE)\nhead(auto.data)\n\n\n\nIf you have problems to read the data into R, go on with these commands. (For this you need a working internet connection!):\n\n# install.packages(\"readr\")\nlibrary(\"readr\")\nauto.data <- suppressMessages(\n  read_csv(\n  file = \"https://cdn.rawgit.com/lidom/Teaching_Repo/bc692b56/autodata.csv\",\n  col_names = TRUE)\n)\n# head(auto.data)\n\n\n\nYou can select specific variables of the auto.data using the $-operator:\n\ngasolin.consumption      <- auto.data$MPG.city\ncar.weight               <- auto.data$Weight\n## Take a look at the first elements of these vectors:\nhead(cbind(gasolin.consumption,car.weight))\n\n     gasolin.consumption car.weight\n[1,]                  25       2705\n[2,]                  18       3560\n[3,]                  20       3375\n[4,]                  19       3405\n[5,]                  22       3640\n[6,]                  22       2880\n\n\n\n\nThis is how you can produce your first plot:\n\n## Plot the data:\nplot(y=gasolin.consumption, x=car.weight, \n     xlab=\"Car-Weight (US-Pounds)\", \n     ylab=\"Consumption (Miles/Gallon)\", \n     main=\"Buy Light-Weight Cars!\")\n\n\n\n\nFigure 1.1: ?(caption)\n\n\n\n\n\n\nAs a first step, we might assume a simple kind of linear relationship between the variables gasolin.consumption and car.weight. Let us assume that the data was generated by the following simple regression model: \\[\ny_i=\\alpha+\\beta_1 x_i+\\varepsilon_i,\\quad i=1,\\dots,n\n\\] where \\(y_i\\) denotes the gasoline-consumption, \\(x_i\\) the weight of car \\(i\\), and \\(\\varepsilon_i\\) is a mean zero constant variance noise term. (This is clearly a non-sense model!)\nThe command lm() computes the estimates of this linear regression model. The command (in fact it’s a method) summary() computes further quantities of general interest from the object that was returned from the lm() function.\n\nlm.result   <- lm(gasolin.consumption~car.weight)\nlm.summary  <- summary(lm.result)\nlm.summary\n\n\nCall:\nlm(formula = gasolin.consumption ~ car.weight)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-6.7946 -1.9711  0.0249  1.1855 13.8278 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 47.048353   1.679912   28.01   <2e-16 ***\ncar.weight  -0.008032   0.000537  -14.96   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 3.038 on 91 degrees of freedom\nMultiple R-squared:  0.7109,    Adjusted R-squared:  0.7077 \nF-statistic: 223.8 on 1 and 91 DF,  p-value: < 2.2e-16\n\n\n\n\nOf course, we want to have a possibility to access all the quantities computed so far, e.g., in order to plot the results. This can be done as following:\n\n## Accessing the computed quantities\nnames(lm.summary) ## Alternatively: str(lm.summary)\n\n [1] \"call\"          \"terms\"         \"residuals\"     \"coefficients\" \n [5] \"aliased\"       \"sigma\"         \"df\"            \"r.squared\"    \n [9] \"adj.r.squared\" \"fstatistic\"    \"cov.unscaled\" \n\nalpha <- lm.summary$coefficients[1]\nbeta  <- lm.summary$coefficients[2]\n\n## Plot all:\nplot(y=gasolin.consumption, x=car.weight, \n     xlab=\"Car-Weight (US-Pounds)\", \n     ylab=\"Consumption (Miles/Gallon)\", \n     main=\"Buy light-weight Cars!\")\nabline(a=alpha, \n       b=beta, col=\"red\")"
  },
  {
    "objectID": "01-Introduction-to-R.html#programming-in-r",
    "href": "01-Introduction-to-R.html#programming-in-r",
    "title": "1  Introduction to R",
    "section": "1.5 Programming in R",
    "text": "1.5 Programming in R\nLet’s write, i.e., program our own R-function for estimating linear regression models. In order to be able to validate our function, we start with simulating data for which we then know all true parameters. Simulating data is like being the “Data-God”: For instance, we generate realizations of the error term \\(\\varepsilon_i\\), i.e., something which we never observe in real data.\n\n\nLet us consider the following multiple regression model:\n\\[y_i=\\beta_1 +\\beta_2 x_{2i}+\\beta_3 x_{3i}+\\varepsilon_{i},\\quad i=1,\\dots,n,\\] where \\(\\varepsilon_{i}\\) is a heteroscedastic error term \\[\\varepsilon_{i}\\sim N(0,\\sigma_i^2),\\quad \\sigma_i=|x_{3i}|,\\]\nand where for all \\(i=1,\\dots,n=50\\):\n\n\\(x_{2i}\\sim N(10,1.5^2)\\)\n\\(x_{3i}\\) comes from a t-distribution with 5 degrees of freedom and non-centrality parameter 2\n\n\nset.seed(109) # Sets the \"seed\" of the random number generators:\nn   <- 50     # Number of observations\n\n## Generate two explanatory variables plus an intercept-variable:\nX.1 <- rep(1, n)                 # Intercept\nX.2 <- rnorm(n, mean=10, sd=1.5) # Draw realizations form a normal distr.\nX.3 <- rt(n, df=5, ncp=2)        # Draw realizations form a t-distr.\nX   <- cbind(X.1, X.2, X.3)      # Save as a Nx3-dimensional data matrix.\n\nOK, we have regressors, i.e., data that we also have in real data sets.\nNow we define the elements of the \\(\\beta\\)-vector. Be aware of the difference: In real data sets we do not know the true \\(\\beta\\)-vector, but try to estimate it. However, when simulating data, we determine (as “Data-Gods”) the true \\(\\beta\\)-vector and can compare our estimate \\(\\hat{\\beta}\\) with the true \\(\\beta\\):\n\n## Define the slope-coefficients\nbeta.vec  <- c(1,-5,5)\n\n\nWe still need to simulate realizations of the dependent variable \\(y_i\\). Remember that \\(y_i=\\beta_1 x_{1i}+\\beta_1 x_{2i}+\\beta_3 x_{3i}+\\varepsilon_{i}\\). That is, we only need realizations from the error terms \\(\\varepsilon_i\\) in order to compute the realizations from \\(y_i\\). This is how you can simulate realizations from the heteroscedastic error terms \\(\\varepsilon_i\\):\n\n## Generate realizations from the heteroscadastic error term\neps       <- abs(X.3) * rnorm(n, mean=0, sd=1)\n\nTake a look at the heteroscedasticity in the error term:\n\nplot(y=eps, x=X.3, \n     main=\"Realizations of the \\nHeteroscedastic Error Term\")\n\n\n\n\nWith the (pseudo-random) realizations from \\(\\varepsilon_i\\), we can finally generate realizations from the dependent variable \\(y_i\\):\n\n## Dependent variable:\ny   <- X %*% beta.vec + eps\n\nLet’s take a look at the data:\n\nmydata    <- data.frame(\"Y\"=y, \"X.1\"=X.1, \"X.2\"=X.2, \"X.3\"=X.3)\npairs(mydata[,-2]) # The '-2' removes the intercept variable \"X.1\"\n\n\n\n\n\n\n\n\n\n\nOnce we have data, we can compute the OLS estimate of the true \\(\\beta\\) vector. Remember the formula: \\[\\hat{\\beta}=(X^\\top X)^{-1}X^\\top y\\] In R-Code this is: \\((X^\\top X)^{-1}=\\)solve(t(X) %*% X), i.e.:\n\n## Computation of the beta-Vector:\nbeta.hat <- solve(t(X) %*% X) %*% t(X) %*% y\nbeta.hat\n\n         [,1]\nX.1 -2.609634\nX.2 -4.692735\nX.3  5.078342\n\n\n\n\nWell done. Using the above lines of code we can easily program our own myOLSFun() function!\n\nmyOLSFun <- function(y, x, add.intercept=FALSE){\n  \n  ## Number of Observations:\n  n         <- length(y)\n  \n  ## Add an intercept to x:\n  if(add.intercept){\n    Intercept <- rep(1, n)\n    x         <- cbind(Intercept, x)\n  }\n  \n  ## Estimation of the slope-parameters:\n  beta.hat.vec <- solve(t(x) %*% x) %*% t(x) %*% y\n  \n  ## Return the result:\n  return(beta.hat.vec)\n}\n\n## Run the function:\nmyOLSFun(y=y, x=X)\n\n         [,1]\nX.1 -2.609634\nX.2 -4.692735\nX.3  5.078342\n\n\n\n\nCan you extend the function for the computation of the covariance matrix of the slope-estimates, several measures of fits (R\\(^2\\), adj.-R\\(^2\\), etc.), t-tests, …?"
  },
  {
    "objectID": "01-Introduction-to-R.html#r-packages",
    "href": "01-Introduction-to-R.html#r-packages",
    "title": "1  Introduction to R",
    "section": "1.6 R-packages",
    "text": "1.6 R-packages\nOne of the best features in R are its contributed packages. The list of all packages on CRAN is impressive! Take a look at it HERE\nFor instance, nice plots can be produced using the R-package is ggplot2. You can find an intro do this package HERE.\n\n# install.packages(\"ggplot2\")\nlibrary(\"ggplot2\")\n\nqplot(Sepal.Length, Petal.Length, data = iris, color = Species)\n\n\n\n\n\n\n\n\n\n\nOf course, ggplot2 concerns “only” plotting, but you’ll find R-packages for almost any statistical method out there."
  },
  {
    "objectID": "01-Introduction-to-R.html#tidyverse",
    "href": "01-Introduction-to-R.html#tidyverse",
    "title": "1  Introduction to R",
    "section": "1.7 Tidyverse",
    "text": "1.7 Tidyverse\nThe tidyverse package is a collection of packages that lets you import, manipulate, explore, visualize and model data in a harmonized and consistent way which helps you to be more productive.\nInstalling the tidyverse package:\n\ninstall.packages(\"tidyverse\")\n\nTo use the tidyverse package load it using the library() function:\n\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.0 ──\n\n\n✔ tibble  3.1.7      ✔ dplyr   1.0.10\n✔ tidyr   1.1.2      ✔ stringr 1.4.0 \n✔ purrr   0.3.4      ✔ forcats 0.5.1 \n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\n\nChick Weight Data\nR comes with many datasets installed. We will use the ChickWeight dataset to learn about the tidyverse. The help system gives a basic summary of the experiment from which the data was collect:\n\n“The body weights of the chicks were measured at birth and every second day thereafter until day 20. They were also measured on day 21. There were four groups of chicks on different protein diets.”\n\nYou can get more information, including references by typing:\n\nhelp(\"ChickWeight\")\n\nThe Data:  There are 578 observations (rows) and 4 variables:\n\nChick – unique ID for each chick.\nDiet – one of four protein diets.\nTime – number of days since birth.\nweight – body weight of chick in grams.\n\nNote: weight has a lower case w (recall R is case sensitive).\nStore the data locally:\n\nChickWeight %>%\n  select(Chick, Diet, Time, weight) %>% \n  arrange(Chick, Diet, Time) %>% \n  write_csv(\"ChickWeight.csv\")\n\nFirst we will import the data from a file called ChickWeight.csv using the read_csv() function from the readr package (part of the tidyverse). The first thing to do, outside of R, is to open the file ChickWeight.csv to check what it contains and that it makes sense. Now we can import the data as follows:\n\nCW <- read_csv(\"ChickWeight.csv\")\n\nRows: 578 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (4): Chick, Diet, Time, weight\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nIf all goes well then the data is now stored in an R object called CW. If you get the following error message then you need to change the working directory to where the data is stored.\nError: 'ChickWeight.csv' does not exist in current\nworking directory ...\nChanging the working directory: In RStudio you can use the menu bar (“Session - Set Working Directory - Choose Directory…”). Alternatively, you can use the function setwd().\n\n\nLooking at the Dataset: To look at the data type just type the object (dataset) name:\n\nCW\n\n# A tibble: 578 × 4\n   Chick  Diet  Time weight\n   <dbl> <dbl> <dbl>  <dbl>\n 1    18     1     0     39\n 2    18     1     2     35\n 3    16     1     0     41\n 4    16     1     2     45\n 5    16     1     4     49\n 6    16     1     6     51\n 7    16     1     8     57\n 8    16     1    10     51\n 9    16     1    12     54\n10    15     1     0     41\n# … with 568 more rows\n\n\nIf there are too many variables then not all them may be printed. To overcome this issue we can use the glimpse() function which makes it possible to see every column in your dataset (called a “data frame” in R speak).\n\nglimpse(CW)\n\nRows: 578\nColumns: 4\n$ Chick  <dbl> 18, 18, 16, 16, 16, 16, 16, 16, 16, 15, 15, 15, 15, 15, 15, 15,…\n$ Diet   <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ Time   <dbl> 0, 2, 0, 2, 4, 6, 8, 10, 12, 0, 2, 4, 6, 8, 10, 12, 14, 0, 2, 4…\n$ weight <dbl> 39, 35, 41, 45, 49, 51, 57, 51, 54, 41, 49, 56, 64, 68, 68, 67,…\n\n\nThe function View() allows for a spread-sheet type of view on the data:\n\nView(CW)\n\n\n1.7.1 Tidyverse: Plotting Basics\nTo visualise the chick weight data, we will use the ggplot2 package (part of the tidyverse). Our interest is in seeing how the weight changes over time for the chicks by diet. For the moment don’t worry too much about the details just try to build your own understanding and logic. To learn more try different things even if you get an error messages.\nLet’s plot the weight data (vertical axis) over time (horizontal axis).\n\n# An empty plot (the plot on the left)\nggplot(CW, aes(Time, weight))  \n# With data (the plot on the right)\nggplot(CW, aes(Time, weight)) + geom_point() \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAdd color for Diet. The graph above does not differentiate between the diets. Let’s use a different color for each diet.\n\n# Adding colour for diet\nggplot(CW,aes(Time,weight,colour=factor(Diet))) +\n  geom_point() \n\n\n\n\nIt is difficult to conclude anything from this graph as the points are printed on top of one another (with diet 1 underneath and diet 4 at the top).\nFactor Variables: Before we continue, we have to make an important change to the CW dataset by making Diet and Time factor variables. This means that R will treat them as categorical variables (see the <fct> variables below) instead of continuous variables. It will simplify our coding. The next section will explain the mutate() function.\n\nCW <- mutate(CW, Diet = factor(Diet))\nCW <- mutate(CW, Time = factor(Time))\nglimpse(CW)\n\nRows: 578\nColumns: 4\n$ Chick  <dbl> 18, 18, 16, 16, 16, 16, 16, 16, 16, 15, 15, 15, 15, 15, 15, 15,…\n$ Diet   <fct> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ Time   <fct> 0, 2, 0, 2, 4, 6, 8, 10, 12, 0, 2, 4, 6, 8, 10, 12, 14, 0, 2, 4…\n$ weight <dbl> 39, 35, 41, 45, 49, 51, 57, 51, 54, 41, 49, 56, 64, 68, 68, 67,…\n\n\nThe facet_wrap() function: To plot each diet separately in a grid using facet_wrap():\n\n# Adding jitter to the points\nggplot(CW, aes(Time, weight, colour=Diet)) +\n  geom_point() +\n  facet_wrap(~Diet) +\n  theme(legend.position = \"bottom\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInterpretation: Diet 4 has the least variability but we can’t really say anything about the mean effect of each diet although diet 3 seems to have the highest.\nNext we will plot the mean changes over time for each diet using the stat_summary() function:\n\nggplot(CW, aes(Time, weight, \n               group=Diet, colour=Diet)) +\n  stat_summary(fun=\"mean\", geom=\"line\") \n\n\n\n\nInterpretation: We can see that diet 3 has the highest mean weight gains by the end of the experiment. However, we don’t have any information about the variation (uncertainty) in the data.\nTo see variation between the different diets we use geom_boxplot to plot a box-whisker plot. A note of caution is that the number of chicks per diet is relatively low to produce this plot.\n\nggplot(CW, aes(Time, weight, colour=Diet)) +\n  facet_wrap(~Diet) +\n  geom_boxplot() +\n  theme(legend.position = \"none\") +\n  ggtitle(\"Chick Weight over Time by Diet\")\n\n\n\n\nInterpretation: Diet 3 seems to have the highest “average” weight gain but it has more variation than diet 4 which is consistent with our findings so far.\nLet’s finish with a plot that you might include in a publication.\n\nggplot(CW, aes(Time, weight, group=Diet, \n                             colour=Diet)) +\n  facet_wrap(~Diet) +\n  geom_point() +\n  # geom_jitter() +\n  stat_summary(fun=\"mean\", geom=\"line\",\n               colour=\"black\") +\n  theme(legend.position = \"none\") +\n  ggtitle(\"Chick Weight over Time by Diet\") + \n  xlab(\"Time (days)\") +\n  ylab(\"Weight (grams)\")\n\n\n\n\n\n\n1.7.2 Tidyverse: Data Wrangling Basics\n\n\n\nIn this section we will learn how to wrangle (manipulate) datasets using the tidyverse package. Let’s start with the mutate(), select(), rename(), filter() and arrange() functions.\n\n\nmutate(): Adds a new variable (column) or modifies an existing one. We already used this above to create factor variables.\n\n# Added a column\nCWm1 <- mutate(CW, weightKg = weight/1000)\nCWm1\n\n# A tibble: 578 × 5\n  Chick Diet  Time  weight weightKg\n  <dbl> <fct> <fct>  <dbl>    <dbl>\n1    18 1     0         39    0.039\n2    18 1     2         35    0.035\n3    16 1     0         41    0.041\n# … with 575 more rows\n\n# Modify an existing column\nCWm2 <- mutate(CW, Diet = str_c(\"Diet \", Diet))\nCWm2\n\n# A tibble: 578 × 4\n  Chick Diet   Time  weight\n  <dbl> <chr>  <fct>  <dbl>\n1    18 Diet 1 0         39\n2    18 Diet 1 2         35\n3    16 Diet 1 0         41\n# … with 575 more rows\n\n\n\n\nselect(): Keeps, drops or reorders variables.\n\n# Drop the weight variable from CWm1 using minus\nselect(CWm1, -weight)\n\n# A tibble: 578 × 4\n  Chick Diet  Time  weightKg\n  <dbl> <fct> <fct>    <dbl>\n1    18 1     0        0.039\n2    18 1     2        0.035\n3    16 1     0        0.041\n# … with 575 more rows\n\n# Keep variables Time, Diet and weightKg\nselect(CWm1, Chick, Time, Diet, weightKg)\n\n# A tibble: 578 × 4\n  Chick Time  Diet  weightKg\n  <dbl> <fct> <fct>    <dbl>\n1    18 0     1        0.039\n2    18 2     1        0.035\n3    16 0     1        0.041\n# … with 575 more rows\n\n\n\n\nrename(): Renames variables whilst keeping all variables.\n\nrename(CW, Group = Diet, Weight = weight)\n\n# A tibble: 578 × 4\n  Chick Group Time  Weight\n  <dbl> <fct> <fct>  <dbl>\n1    18 1     0         39\n2    18 1     2         35\n3    16 1     0         41\n# … with 575 more rows\n\n\n\n\nfilter(): Keeps or drops observations (rows).\n\nfilter(CW, Time==21 & weight>300)\n\n# A tibble: 8 × 4\n  Chick Diet  Time  weight\n  <dbl> <fct> <fct>  <dbl>\n1     7 1     21       305\n2    29 2     21       309\n3    21 2     21       331\n# … with 5 more rows\n\n\nFor comparing values in vectors use: < (less than), > (greater than), <= (less than and equal to), >= (greater than and equal to), == (equal to) and != (not equal to). These can be combined logically using & (and) and | (or).\n\n\narrange(): Changes the order of the observations.\n\narrange(CW, Chick, Time)\n\n# A tibble: 578 × 4\n  Chick Diet  Time  weight\n  <dbl> <fct> <fct>  <dbl>\n1     1 1     0         42\n2     1 1     2         51\n3     1 1     4         59\n# … with 575 more rows\n\narrange(CW, desc(weight))\n\n# A tibble: 578 × 4\n  Chick Diet  Time  weight\n  <dbl> <fct> <fct>  <dbl>\n1    35 3     21       373\n2    35 3     20       361\n3    34 3     21       341\n# … with 575 more rows\n\n\nWhat does the desc() do? Try using desc(Time).\n\n\n1.7.3 The pipe operator %>%\nIn reality you will end up doing multiple data wrangling steps that you want to save. The pipe operator %>% makes your code nice and readable:\n\nCW21 <- CW %>% \n  filter(Time %in% c(0, 21)) %>% \n  rename(Weight = weight) %>% \n  mutate(Group = factor(str_c(\"Diet \", Diet))) %>% \n  select(Chick, Group, Time, Weight) %>% \n  arrange(Chick, Time) \nCW21\n\n# A tibble: 95 × 4\n  Chick Group  Time  Weight\n  <dbl> <fct>  <fct>  <dbl>\n1     1 Diet 1 0         42\n2     1 Diet 1 21       205\n3     2 Diet 1 0         40\n# … with 92 more rows\n\n\nHint: To understand the code above we should read the pipe operator %>% as “then”.\n\nCreate a new dataset (object) called CW21 using dataset CW then keep the data for days 0 and 21 then rename variable weight to Weight then create a variable called Group then keep variables Chick, Group, Time and Weight and then finally arrange the data by variables Chick and Time.\n\nThis is the same code:\n\nCW21 <- CW %>% \n  filter(., Time %in% c(0, 21)) %>% \n  rename(., Weight = weight) %>% \n  mutate(., Group=factor(str_c(\"Diet \",Diet))) %>% \n  select(., Chick, Group, Time, Weight) %>% \n  arrange(., Chick, Time) \n\nThe pipe operator, %>%, replaces the dots (.) with whatever is returned from code preceding it. For example, the dot in filter(., Time %in% c(0, 21)) is replaced by CW. The output of the filter(...) then replaces the dot in rename(., Weight = weight) and so on. Think of it as a data assembly line with each function doing its thing and passing it to the next.\n\n\n1.7.4 The group_by() function\nFrom the data visualizations above we concluded that the diet 3 has the highest mean and diet 4 the least variation. In this section, we will quantify the effects of the diets using summmary statistics. We start by looking at the number of observations and the mean by diet and time.\n\nmnsdCW <- CW %>% \n  group_by(Diet, Time) %>% \n  summarise(N = n(), Mean = mean(weight)) %>% \n  arrange(Diet, Time)\n\n`summarise()` has grouped output by 'Diet'. You can override using the\n`.groups` argument.\n\nmnsdCW\n\n# A tibble: 48 × 4\n# Groups:   Diet [4]\n  Diet  Time      N  Mean\n  <fct> <fct> <int> <dbl>\n1 1     0        20  41.4\n2 1     2        20  47.2\n3 1     4        19  56.5\n# … with 45 more rows\n\n\nFor each distinct combination of Diet and Time, the chick weight data is summarized into the number of observations (N) and the mean (Mean) of weight.\nFurther summaries: Let’s also calculate the standard deviation, median, minimum and maximum values but only at days 0 and 21.\n\nsumCW <-  CW %>% \n  filter(Time %in% c(0, 21)) %>% \n  group_by(Diet, Time) %>% \n  summarise(N = n(),\n            Mean = mean(weight),\n            SD = sd(weight),\n            Median = median(weight),\n            Min = min(weight),\n            Max = max(weight)) %>% \n  arrange(Diet, Time)\n\n`summarise()` has grouped output by 'Diet'. You can override using the\n`.groups` argument.\n\nsumCW\n\n# A tibble: 8 × 8\n# Groups:   Diet [4]\n  Diet  Time      N  Mean     SD Median   Min   Max\n  <fct> <fct> <int> <dbl>  <dbl>  <dbl> <dbl> <dbl>\n1 1     0        20  41.4  0.995   41      39    43\n2 1     21       16 178.  58.7    166      96   305\n3 2     0        10  40.7  1.49    40.5    39    43\n# … with 5 more rows\n\n\nLet’s make the summaries “prettier”, say, for a report or publication.\n\nlibrary(\"knitr\") # to use the kable() function\nprettySumCW <- sumCW %>% \n mutate(`Mean (SD)` = str_c(format(Mean, digits=1),\n           \" (\", format(SD, digits=2), \")\")) %>% \n mutate(Range = str_c(Min, \" - \", Max)) %>% \n select(Diet, Time, N, `Mean (SD)`, Median, Range) %>%\n arrange(Diet, Time) %>% \n kable(format = \"latex\")\nprettySumCW\n\n\n\n\n\n \n  \n    Diet \n    Time \n    N \n    Mean (SD) \n    Median \n    Range \n  \n \n\n  \n    1 \n    0 \n    20 \n    41 ( 0.99) \n    41.0 \n    39 - 43 \n  \n  \n    1 \n    21 \n    16 \n    178 (58.70) \n    166.0 \n    96 - 305 \n  \n  \n    2 \n    0 \n    10 \n    41 ( 1.5) \n    40.5 \n    39 - 43 \n  \n  \n    2 \n    21 \n    10 \n    215 (78.1) \n    212.5 \n    74 - 331 \n  \n  \n    3 \n    0 \n    10 \n    41 ( 1) \n    41.0 \n    39 - 42 \n  \n  \n    3 \n    21 \n    10 \n    270 (72) \n    281.0 \n    147 - 373 \n  \n  \n    4 \n    0 \n    10 \n    41 ( 1.1) \n    41.0 \n    39 - 42 \n  \n  \n    4 \n    21 \n    9 \n    239 (43.3) \n    237.0 \n    196 - 322 \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInterpretation: This summary table offers the same interpretation as before, namely that diet 3 has the highest mean and median weights at day 21 but a higher variation than group 4. However it should be noted that at day 21, diet 1 lost 4 chicks from 20 that started and diet 4 lost 1 from 10. This could be a sign of some health related issues."
  },
  {
    "objectID": "01-Introduction-to-R.html#further-links",
    "href": "01-Introduction-to-R.html#further-links",
    "title": "1  Introduction to R",
    "section": "1.8 Further Links",
    "text": "1.8 Further Links\n\n1.8.1 Further R-Intros\n\nhttps://eddelbuettel.github.io/gsir-te/Getting-Started-in-R.pdf\nhttps://www.datacamp.com/courses/free-introduction-to-r\nhttps://swcarpentry.github.io/r-novice-gapminder/\nhttps://support.rstudio.com/hc/en-us/articles/200526207-Using-Projects\n\n\n\n1.8.2 Version Control (Git/GitHub)\n\nhttps://support.rstudio.com/hc/en-us/articles/200532077-Version-Control-with-Git-and-SVN\nhttp://happygitwithr.com/\nhttps://www.gitkraken.com/\n\n\n\n1.8.3 R-Ladies\n\nhttps://rladies.org/"
  },
  {
    "objectID": "02-Review-Prob_n_Stats.html",
    "href": "02-Review-Prob_n_Stats.html",
    "title": "2  Review: Probability",
    "section": "",
    "text": "The content of this chapter follows closely (often verbatim) the fantastic book by Wasserman (2004)."
  },
  {
    "objectID": "02-Review-Prob_n_Stats.html#probability-theory",
    "href": "02-Review-Prob_n_Stats.html#probability-theory",
    "title": "2  Review: Probability",
    "section": "2.1 Probability Theory",
    "text": "2.1 Probability Theory\nProbability is the mathematical language for quantifying uncertainty. We can apply probability theory to a diverse set of problems, from coin flipping to the analysis of econometric problems. The starting point is to specify the sample space, that is, the set of possible outcomes.\n\n2.1.1 Sample Spaces and (Elementary) Events\nThe sample space \\(\\Omega,\\) is the set of possible outcomes of an experiment. Points \\(\\omega\\) in \\(\\Omega\\) are called sample outcomes or realizations or elementary events. Events are subsets of \\(\\Omega\\).\nExample: If we toss a coin twice then \\(\\Omega=\\{H H, H T, T H, T T\\} .\\) The event that the first toss is heads is \\(A=\\{H H, H T\\}.\\)\nExample: Let \\(\\omega\\) be the outcome of a measurement of some physical quantity, for example, temperature. Then \\(\\Omega=\\mathbb{R}=(-\\infty, \\infty).\\) The event that the measurement is larger than 10 but less than or equal to 23 is \\(A=(10,23].\\)\nExample: If we toss a coin forever then the sample space is the infinite set \\(\\Omega=\\left\\{\\omega=\\left(\\omega_{1}, \\omega_{2}, \\omega_{3}, \\ldots,\\right)|\\omega_{i} \\in\\{H, T\\}\\right\\}\\) Let \\(A\\) be the event that the first head appears on the third toss. Then \\(A=\\left\\{\\left(\\omega_{1}, \\omega_{2}, \\omega_{3}, \\ldots,\\right)| \\omega_{1}=T, \\omega_{2}=T, \\omega_{3}=H, \\omega_{i} \\in\\{H, T\\} \\text { for } i>3\\right\\}.\\)\nGiven an event \\(A,\\) let \\(A^{c}=\\{\\omega \\in \\Omega ; \\omega \\notin A\\}\\) denote the complement of \\(A\\). Informally, \\(A^{c}\\) can be read as “not \\(A\\).” The complement of \\(\\Omega\\) is the empty set \\(\\emptyset\\). The union of events \\(A\\) and \\(B\\) is defined as \\[\nA\\cup B=\\{\\omega \\in \\Omega|\\omega\\in A\\text{ or }\\omega \\in B\\text{ or }\\omega\\in\\text{ both}\\}\n\\] which can be thought of as “\\(A\\) or \\(B\\).” If \\(A_{1}, A_{2}, \\ldots\\) is a sequence of sets then \\[\n\\bigcup_{i=1}^{\\infty} A_{i}=\\left\\{\\omega \\in \\Omega: \\omega \\in A_{i} \\text { for at least one i }\\right\\}.\n\\] The intersection of \\(A\\) and \\(B\\) is defined as \\[\nA \\cap B=\\{\\omega \\in \\Omega ; \\omega \\in A\\text{ and }\\omega \\in B\\}\n\\] which reads as “\\(A\\) and \\(B\\).” Often \\(A \\cap B\\) is also written shortly as “\\(AB\\)” or as “\\(A,B.\\)”\nIf \\(A_{1}, A_{2}, \\ldots\\) is a sequence of sets then \\[\n\\bigcap_{i=1}^{\\infty} A_{i}=\\left\\{\\omega \\in \\Omega: \\omega \\in A_{i} \\text { for all i }\\right\\}.\n\\]\nIf every element of \\(A\\) is also contained in \\(B\\) we write \\(A \\subset B\\) or, equivalently, \\(B \\supset A\\). If \\(A\\) is a finite set, let \\(|A|\\) denote the number of elements in \\(A .\\) We say that \\(A_{1}, A_{2}, \\ldots\\) are disjoint or mutually exclusive if \\(A_{i} \\cap A_{j}=\\emptyset\\) whenever \\(i \\neq j\\). For example, \\(A_{1}=[0,1), A_{2}=[1,2), A_{3}=[2,3), \\ldots\\) are disjoint. A partition of \\(\\Omega\\) is a sequence of disjoint sets \\(A_{1}, A_{2}, \\ldots\\) such that \\(\\bigcup_{i=1}^{\\infty} A_{i}=\\Omega\\).\nSummary: Sample space and events\n\\[\n\\begin{array}{ll}\n\\Omega & \\text { sample space } \\\\\n\\omega & \\text { outcome }\\\\\nA      & \\text { event (subset of } \\Omega) \\\\\n|A|    & \\text { number of points in } A \\text { (if } A \\text { is finite) }\\\\\nA^{c}  & \\text { complement of } A (\\operatorname{not} A)\\\\\nA \\cup B &\\text{ union }(A\\text{ or }B)\\\\\nA \\cap B &\\text{ intersection }(A \\text { and } B);\\text{ short notation: }AB\\text{ or }A,B\\\\\nA \\subset B &\\text{ set inclusion }(A \\text{ is a subset of or equal to }B)\\\\\n\\emptyset   &\\text{ null event (always false)}\\\\\n\\Omega      &\\text{ true event (always true)}\n\\end{array}\n\\]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2.1.2 Probability\nWe want to assign a real number \\(P(A)\\) to every event \\(A,\\) called the probability of \\(A .\\) We also call \\(P\\) a probability distribution or a probability measure. To qualify as a probability, \\(P\\) has to satisfy three axioms. That is, a function \\(P\\) that assigns a real number \\(P(A)\\in[0,1]\\) to each event \\(A\\) is a probability distribution or a probability measure if it satisfies the following three axioms:\n\nAxiom 1: \\(P(A) \\geq 0\\) for every \\(A\\)\nAxiom 2: \\(P(\\Omega)=1\\)\nAxiom 3: If \\(A_{1}, A_{2}, \\ldots\\) are disjoint then\n\n\\[\nP\\left(\\bigcup_{i=1}^{\\infty} A_{i}\\right)=\\sum_{i=1}^{\\infty} P\\left(A_{i}\\right).\n\\]\nNote: It is not always possible to assign a probability to every event \\(A\\) if the sample space is large, such as, for instance, the whole real line, \\(\\Omega=\\mathbb{R}\\). In case of \\(\\Omega=\\mathbb{R}\\) strange things can happen. There are pathological sets that simply break down the mathematics. An example of one of these pathological sets, also known as non-measurable sets because they literally can’t be measured (i.e. we cannot assign probabilities to them), are the Vitali sets. Therefore, in such cases like \\(\\Omega=\\mathbb{R}\\), we assign probabilities to a limited class of sets called a \\(\\sigma\\)-field or \\(\\sigma\\)-algebra. For \\(\\Omega=\\mathbb{R}\\), the canonical \\(\\sigma\\)-algebra is the Borel \\(\\sigma\\)-algebra. The Borel \\(\\sigma\\)-algebra on \\(\\mathbb{R}\\) is generated by the collection of all open subsets of \\(\\mathbb{R}\\). In this course, we use the Borel \\(\\sigma\\)-algebra, and fortunately, we do not have to bother with it. (It’s there in the background making things work for us.)\nOne can derive many properties of \\(P\\) from the axioms. Here are a few:\n\n\\(P(\\emptyset)=0\\)\n\\(A \\subset B\\Rightarrow P(A) \\leq P(B)\\)\n\\(0 \\leq P(A) \\leq 1\\)\n\\(P\\left(A^{c}\\right)=1-P(A)\\)\n\\(A \\cap B=\\emptyset \\Rightarrow P(A \\cup B)=P(A)+P(B)\\)\n\nA less obvious property is given in the following: For any events \\(A\\) and \\(B\\) we have that,\n\\[\nP(A \\cup B)=P(A)+P(B)-P(A B).\n\\]\nExample: Two consecutive coin tosses. Let \\(H_{1}\\) be the event that heads occurs on toss 1 and let \\(H_{2}\\) be the event that heads occurs on toss 2. If all outcomes are equally likely, that is, \\[\nP\\left(\\left\\{H_{1}, H_{2}\\right\\}\\right)=P\\left(\\left\\{H_{1}, T_{2}\\right\\}\\right)=P\\left(\\left\\{T_{1}, H_{2}\\right\\}\\right)=P\\left(\\left\\{T_{1}, T_{2}\\right\\}\\right)=1 / 4,\n\\] then \\[\nP\\left(H_{1} \\cup H_{2}\\right)=P\\left(H_{1}\\right)+P\\left(H_{2}\\right)-P\\left(H_{1} H_{2}\\right)=\\frac{1}{2}+\\frac{1}{2}-\\frac{1}{4}=\\frac{3}{4}.\n\\]\n\nProbabilities as frequencies\nOne can interpret \\(P(A)\\) in terms of frequencies. That is, \\(P(A)\\) is the (infinitely) long run proportion of times that \\(A\\) is true in repetitions. For example, if we say that the probability of heads is \\(1 / 2\\), i.e \\(P(H)=1/2\\) we mean that if we flip the coin many times then the proportion of times we get heads tends to \\(1 / 2\\) as the number of tosses increases. An infinitely long, unpredictable sequence of tosses whose limiting proportion tends to a constant is an idealization, much like the idea of a straight line in geometry. The following R codes approximates the probability \\(P(H)=1/2\\) using 5, 50 and 5,000 many (pseudo) random coin flips:\n\nset.seed(869)\n## 1 (fair) coin-flip:\nresults <- sample(x = c(\"H\", \"T\"), size = 5, replace = TRUE)\n## Relative frequency of \"H\" in 5 coin-flips\nlength(results[results==\"H\"])/5\n\n[1] 0.2\n\n## 10 (fair) coin-flips:\nresults <- sample(x = c(\"H\", \"T\"), size = 50, replace = TRUE)\n## Relative frequency of \"H\" in 50 coin-flips\nlength(results[results==\"H\"])/50\n\n[1] 0.52\n\n## 100000 (fair) coin-flips:\nresults <- sample(x = c(\"H\", \"T\"), size = 5000, replace = TRUE)\n## Relative frequency of \"H\" in 5000 coin-flips\nlength(results[results==\"H\"])/5000\n\n[1] 0.5024\n\n\n\n\n\n2.1.3 Independent Events\nIf we flip a fair coin twice, then the probability of two heads is \\(\\frac{1}{2} \\times \\frac{1}{2}\\). We multiply the probabilities because we regard the two tosses as independent. Two events \\(A\\) and \\(B\\) are called independent if\n\\[\nP(A B)=P(A) P(B).\n\\]\nOr more generally, a whole set of events \\(\\{A_i|i\\in I\\}\\) is independent if\n\\[\nP\\left(\\bigcap_{i \\in J} A_{i}\\right)=\\prod_{i \\in J}P\\left(A_{i}\\right)\n\\] for every finite subset \\(J\\) of \\(I\\), where \\(I\\) denotes the not necessarily finite index set (e.g. \\(I=\\{1,2,\\dots\\}\\)).\nIndependence can arise in two distinct ways. Sometimes, we explicitly assume that two events are independent. For example, in tossing a coin twice, we usually assume the tosses are independent which reflects the fact that the coin has no memory of the first toss.\nIn other instances, we derive independence by verifying that the definition of independence \\(P(A B)=P(A)P(B)\\) holds. For example, in tossing a fair die , let \\(A=\\{2,4,6\\}\\) be the event of observing an even number and let \\(B=\\{1,2,3,4\\}\\) be the event of observing no \\(5\\) and no \\(6\\). Then, \\(A \\cap B=\\{2,4\\}\\) is the event of observing either a \\(2\\) or a \\(4\\). Are the events \\(A\\) and \\(B\\) independent?\n\\[\nP(A B)=\\frac{2}{6}=P(A)P(B)=\\frac{1}{2}\\cdot \\frac{2}{3}\n\\] and so \\(A\\) and \\(B\\) are independent. In this case, we didn’t assume that \\(A\\) and \\(B\\) are independent it just turned out that they were.\nCautionary Note: Suppose that \\(A\\) and \\(B\\) are disjoint events, i.e. \\(AB=\\emptyset,\\) each with positive probability \\(P(A)>0\\) and \\(P(B)>0.\\) Can they be independent? No! This follows since\n\\[\nP(A B)=P(\\emptyset)=0\\neq P(A)P(B)>0.\n\\] Except in this special case, there is no way to judge (in-)dependence by looking at the sets in a Venn diagram.\nSummary: Independent Events\n\n\\(A\\) and \\(B\\) are independent if \\(P(A B)=P(A) P(B)\\).\nIndependence is sometimes assumed and sometimes derived.\nDisjoint events with strictly positive probabilities are not independent.\n\n\n\n2.1.4 Conditional Probability\nIf \\(P(B)>0\\) then the conditional probability of \\(A\\) given \\(B\\) is \\[\nP(A \\mid B)=\\frac{P(A B)}{P(B)}.\n\\] Think of \\(P(A \\mid B)\\) as the fraction of times \\(A\\) occurs among those in which \\(B\\) occurs. Here are some facts about conditional probabilities:\n\nThe rules of probability apply to events on the left of the bar “\\(\\mid\\)”. That is, for any fixed \\(B\\) such that \\(P(B)>0,\\) \\(P(\\cdot \\mid B)\\) is a probability i.e. it satisfies the three axioms of probability:\n\n\\(P(A \\mid B) \\geq 0\\)\n\\(P(\\Omega \\mid B)=1\\)\nIf \\(A_{1}, A_{2}, \\ldots\\) are disjoint then \\(P\\left(\\bigcup_{i=1}^{\\infty} A_{i} \\mid B\\right)=\\sum_{i=1}^{\\infty} P\\left(A_{i} \\mid B\\right).\\)\n\nBut it’s generally not true that \\(P(A \\mid B \\cup C)=P(A \\mid B)+P(A \\mid C).\\)\n\nIn general it is also not the case that \\(P(A \\mid B)=P(B \\mid A)\\). People get this confused all the time. For example, the probability of spots given you have measles is 1 but the probability that you have measles given that you have spots is not \\(1 .\\) In this case, the difference between \\(P(A \\mid B)\\) and \\(P(B \\mid A)\\) is obvious but there are cases where it is less obvious. This mistake is made often enough in legal cases that it is sometimes called the “prosecutor’s fallacy”.\nExample: A medical test for a disease \\(D\\) has outcomes \\(+\\) and \\(-.\\) The probabilities are:\n\\[\n\\begin{array}{c|cc|c}\n& D & D^{c} \\\\\n\\hline\n+ & .0081 & .0900 &  .0981\\\\\n- & .0009 & .9010 &  .9019\\\\\n\\hline\n  & .0090 & .9910 &  1\n\\end{array}\n\\] From the definition of conditional probability, we have:\n\nSensitivity of the test: \\[P(+\\mid D)=P(+\\cap D) / P(D)=0.0081 /(0.0081+0.0009)=0.9\\]\nSpecificity of the test: \\[P(-\\mid D^{c})=P(-\\cap D^{c}) / P(D^{c})=0.9010/(0.9010+0.0900)\\approx 0.9\\]\n\nApparently, the test is fairly accurate. Sick people yield a positive test result 90 percent of the time and healthy people yield a negative test result about 90 percent of the time. Suppose you go for a test and get a positive result. What is the probability you have the disease? Most people answer \\(0.90=90\\%\\). The correct answer is \\(P(D \\mid+)=P(+\\cap D) / P(+)=0.0081 /(0.0081+0.0900)=0.08.\\) The lesson here is that you need to compute the answer numerically. Don’t trust your intuition.\n\nIndependence via Conditional Probabilities\nIf \\(A\\) and \\(B\\) are independent events then \\[\nP(A \\mid B)=\\frac{P(A B)}{P(B)}=\\frac{P(A) P(B)}{P(B)}=P(A)\n\\] So another interpretation of independence is that knowing \\(B\\) doesn’t change the probability of \\(A\\).\nFrom the definition of conditional probability we can write \\[\nP(A B)=P(A \\mid B) P(B)\n\\] and also \\[\nP(A B)=P(B \\mid A) P(A).\n\\] Often, these formulas give us a convenient way to compute \\(P(A B)\\) when \\(A\\) and \\(B\\) are not independent.\nExample: Draw two cards from a deck, without replacement. Let \\(A\\) be the event that the first draw is Ace of Clubs and let \\(B\\) be the event that the second draw is Queen of Diamonds. Then \\(P(A, B)=P(A) P(B \\mid A)=(1 / 52) \\times(1 / 51)\\)\nSummary: Conditional Probability\n\nIf \\(P(B)>0\\) then \\(P(A \\mid B)=P(A B)/P(B)\\)\n\\(P(\\cdot \\mid B)\\) satisfies the axioms of probability, for fixed \\(B\\). In general, \\(P(A \\mid \\cdot)\\) does not satisfy the axioms of probability, for fixed \\(A\\).\nIn general, \\(P(A \\mid B) \\neq P(B \\mid A)\\).\n\\(A\\) and \\(B\\) are independent if and only if \\(P(A \\mid B)=P(A)\\)."
  },
  {
    "objectID": "02-Review-Prob_n_Stats.html#random-variables",
    "href": "02-Review-Prob_n_Stats.html#random-variables",
    "title": "2  Review: Probability",
    "section": "2.2 Random Variables",
    "text": "2.2 Random Variables\nStatistics and econometrics are concerned with data. How do we link sample spaces, events and probabilities to data? The link is provided by the concept of a random variable. A real-valued random variable is a mapping \\(X: \\Omega \\rightarrow \\mathbb{R}\\) that assigns a real number \\(X(\\omega)\\in\\mathbb{R}\\) to each outcome \\(\\omega\\).\nAt a certain point in most statistics/econometrics courses, the sample space, \\(\\Omega\\), is rarely mentioned and we work directly with random variables. But you should keep in mind that the sample space is really there, lurking in the background.\nExample: Flip a coin ten times. Let \\(X(\\omega)\\) be the number of heads in the sequence \\(\\omega.\\) For example, if \\(\\omega=\\text{HHTHHTHHTT}\\) then \\(X(\\omega)=6\\).\nExample: Let \\(\\Omega=\\left\\{(x, y)|x^{2}+y^{2} \\leq 1\\right\\}\\) be the unit disc. Consider drawing a point “at random” from \\(\\Omega\\). A typical outcome is then of the form \\(\\omega=(x, y) .\\) Some examples of random variables are \\(X(\\omega)=x, Y(\\omega)=y, Z(\\omega)=x+y, W(\\omega)=\\sqrt{x^{2}+y^{2}}\\).\nGiven a real-valued random variable \\(X\\in\\mathbb{R}\\) and a subset \\(A\\) of the real line (\\(A\\subset\\mathbb{R}\\)), define \\(X^{-1}(A)=\\{\\omega \\in \\Omega|X(\\omega) \\in A\\}\\). This allows us to link the probabilities on the random variable \\(X\\), i.e. the probabilities we are usually working with, to the underlying probabilities on the events, i.e. the probabilities lurking in the background.\nExample: Flip a coin twice and let \\(X\\) be the number of heads. Then, \\(P_X(X=0)=P(\\{T T\\})=1 / 4\\), \\(P_X(X=1)=P(\\{H T, T H\\})=1 / 2\\) and \\(P_X(X=2)=P(\\{H H\\})=1 / 4\\). Thus, the events and their associated probability distribution, \\(P\\), and the random variable \\(X\\) and its distribution, \\(P_X\\), can be summarized as follows:\n\n\n\n\\(\\omega\\)\n\\(P(\\{\\omega\\})\\)\n\\(X(\\omega)\\)\n\n\n\n\n\\(T T\\)\n\\(1 / 4\\)\n0\n\n\n\\(T H\\)\n\\(1 / 4\\)\n1\n\n\n\\(H T\\)\n\\(1 / 4\\)\n1\n\n\n\\(H H\\)\n\\(1 / 4\\)\n2\n\n\n\n\n\n\n\\(x\\)\n\\(P_X(X=x)\\)\n\n\n\n\n0\n\\(1 / 4\\)\n\n\n1\n\\(1 / 2\\)\n\n\n2\n\\(1 / 4\\)\n\n\n\n\nHere, \\(P_{X}\\) is not the same probability function as \\(P\\), because \\(P\\) maps from the sample space events, \\(\\omega\\), to \\([0,1]\\), while \\(P_X\\) maps from the random-variable events, \\(X(\\omega)\\), to \\([0,1]\\). We will typically forget about the sample space \\(\\Omega\\) and just think of the random variable as an experiment with real-valued (possible multivariate) outcomes. We will therefore write \\(P\\left(X=x_{k}\\right)\\) instead of \\(P_{X}\\left(X=x_{k}\\right)\\) to simplify the notation.\n\n2.2.1 Univariate Distribution and Probability Functions\n\n2.2.1.1 Cumulative Distribution Function\nThe cumulative distribution function (cdf) \\[F_{X}: \\mathbb{R} \\rightarrow [0,1]\\] of a real-valued random variable \\(X\\in\\mathbb{R}\\) is defined by \\[\nF_{X}(x)=\\mathbb{P}(X \\leq x).\n\\]\nYou might wonder why we bother to define the cdf. The reason is that it effectively contains all the information about the random variable. Indeed, let \\(X\\in\\mathbb{R}\\) have cdf \\(F\\) and let \\(Y\\in\\mathbb{R}\\) have cdf \\(G\\). If \\(F(x)=G(x)\\) for all \\(x\\in\\mathbb{R}\\) then \\(P(X \\in A)=P(Y \\in A)\\) for all \\(A\\subset\\mathbb{R}\\). In order to denote that two random variables, here \\(X\\) and \\(Y\\), have the same distribution, one can write shortly \\(X\\overset{d}{=}Y\\).\n\nThe defining properties of a cdf: A function \\(F\\) mapping the real line to \\([0,1]\\), short \\(F:\\mathbb{R}\\to[0,1],\\) is called a cdf for some probability measure \\(P\\) if and only if it satisfies the following three properties:\n\n\\(F\\) is non-decreasing i.e. \\(x_{1}<x_{2}\\) implies that \\(F\\left(x_{1}\\right) \\leq F\\left(x_{2}\\right)\\).\n\\(F\\) is normalized: \\(\\lim_{x\\rightarrow-\\infty} F(x)=0\\) and \\(\\lim_{x \\rightarrow \\infty} F(x)=1\\)\n\\(F\\) is right-continuous, i. e. \\(F(x)=F\\left(x^{+}\\right)\\) for all \\(x\\), where \\[\n  F\\left(x^{+}\\right)=\\lim_{y\\to x, y>x} F(y).\n  \\]\n\nAlternatively to cumulative distribution functions one can use probability (mass) functions in order to describe the probability law of discrete random variables and density functions in order to describe the probability law of continuous random variables.\n\n\n2.2.1.2 Probability Functions for Discrete Random Variables\nA random variable \\(X\\) is if it takes only countably many values \\[\nX\\in\\{x_{1}, x_{2}, \\ldots\\}.\n\\] For instance, \\(X\\in\\{1,2,3\\}\\) or \\(X\\in\\{2,4,6,\\dots\\}\\) or \\(X\\in\\mathbb{Z}\\) or \\(X\\in\\mathbb{Q}\\).\nWe define the probability function or probability mass function (pmf) for \\(X\\) by \\[\nf_{X}(x)=\\mathbb{P}(X=x)\\quad\\text{for all}\\quad x\\in\\{x_1,x_2,\\dots\\}\n\\]\n\n\n2.2.1.3 Density Functions for Continuous Random Variables\nA random variable \\(X\\) is if there exists a function \\(f_{X}\\) such that\n\n\\(f_{X}(x)\\geq 0\\) for all \\(x\\)\n\\(\\int_{-\\infty}^{\\infty}f_{X}(x)dx=1\\) and\n\\(\\mathbb{P}(a<X<b)=\\int_{a}^{b} f_{X}(x) dx\\) for every \\(a\\leq b\\).\n\nThe function \\(f_{X}\\) is called the probability density function (pdf) or short density function.\nFor density functions, we have that \\[\nF_{X}(x)=\\int_{-\\infty}^{x} f_{X}(t) dt\\quad\\text{and}\\quad f_{X}(x)=F_{X}^{\\prime}(x)\n\\] at all points \\(x\\) at which \\(F_{X}\\) is differentiable.\n\n\n\n2.2.2 Multivariate Distribution and Probability Functions\nA \\(d\\)-dimensional random vector is a column-vector \\(X=(X_1,\\dots,X_d)^\\prime\\), where each element is a univariate random variable.\n\n2.2.2.1 Multidimensional Distribution Function\nThe multivariate distribution function \\(F\\) is given by \\[F(a_1,\\dots,a_d)=P(X_1\\le a_1,\\dots,X_d\\le a_d).\\]\n\n## Install the package if not installed yet\n# install.packages(\"mnormt\")\n\nlibrary(mnormt)\n\nx     <- seq(-5, 5, 0.25) \ny     <- seq(-5, 5, 0.25)\nmu    <- c(0, 0)\nsigma <- matrix(c(2, -1, -1, 2), nrow = 2)\nf     <- function(x, y) pmnorm(cbind(x, y), mu, sigma)\nz     <- outer(x, y, f)\n\npersp(x, y, z, theta = -30, phi = 25, \n      shade = 0.75, col = \"blue\", expand = 0.5, r = 2, \n      ltheta = 25, ticktype = \"detailed\")\n\n\n\n\n\n\n\n\n\n\n2.2.2.2 Multidimensional Probability Function\nDiscrete random vectors: \\(X\\) takes only countably many (i.e. discrete) values \\(\\mathbf{x}_1,\\mathbf{x}_2,\\dots\\in\\mathbb{R}^d\\) and has a multidimensional probability function \\(p(\\mathbf{x}_i)=P(X=\\mathbf{x}_i)\\) for \\(i=1,2,\\dots\\). That is, \\[\\begin{align*}\nP(X\\in [a_1,b_1]\\times\\dots\\times [a_d,b_d])=\n\\sum_{\\mathbf{x}_i\\in [a_1,b_1]\\times\\dots\\times [a_d,b_d]}p(\\mathbf{x}_i).\n\\end{align*}\\]\n\n\n2.2.2.3 Multidimensional Density Function\nContinuous random vectors: \\(X\\) takes values in \\(\\mathbb{R}^d\\) and has a multidimensional density function \\(f(x_1,\\dots,x_d)\\). That is, \\[\\begin{align*}\nP(X\\in [a_1,b_1]\\times\\dots\\times [a_d,b_d])=\\int\\limits_{a_d}^{b_d}\\dots \\int\\limits _{a_1}^{b_1}f(x_1,\\dots,x_d)dx_1\\dots dx_d.\n\\end{align*}\\] In the following we focus only on continuous random vectors, but the discrete cases are treated analogously. Properties of multivariate density functions:\n\n\\(\\displaystyle f(x_1,\\dots,x_d)\\geq 0\\)\n\\(\\displaystyle \\int_{-\\infty}^{\\infty}\\dots \\int_{-\\infty}^{\\infty}f(x_1,\\dots,x_d)dx_1\\dots dx_d=1\\)\n\n\n## Load the package\nlibrary(mnormt)\n\nx     <- seq(-5, 5, 0.25) \ny     <- seq(-5, 5, 0.25)\nmu    <- c(0, 0)\nsigma <- matrix(c(2, -1, -1, 2), nrow = 2)\nf     <- function(x, y) dmnorm(cbind(x, y), mu, sigma)\nz     <- outer(x, y, f)\n\npersp(x, y, z, theta = -30, phi = 25, \n      shade = 0.75, col = \"blue\", expand = 0.5, r = 2, \n      ltheta = 25, ticktype = \"detailed\")\n\n\n\n\n\n\n\n\n\n\n2.2.2.4 Marginal Distribution Functions and Marginal Density Functions\nEach random element, \\(X_j\\), with \\(j=1,\\dots,d\\), of the random vector \\(X\\) has its own marginal distribution \\(F_j\\). This is just the univariate distribution of \\(X_j\\) when ignoring all other random variables in \\(X\\). Formally we have:\n\nMarginal distribution function: \\(F_j(x)=P(X_j\\leq x)\\)\nMarginal density function: \\(f_j\\), for instance, for \\(j=1\\):\n\n\\[\nf_1({\\color{blue}x_1})=\\int_{-\\infty}^{\\infty}\\dots \\int_{-\\infty}^{\\infty}f({\\color{blue}x_1},x_2\\dots,\nx_d)dx_2\\dots  dx_d\n\\]\n\n\n\n\n\n\n\n\n\n\n\n2.2.2.5 Conditional Distributions\nOften, we are interested in the conditional distribution of \\(X_j\\) given certain values of all other random variables\n\\[\nX_1=x_1,\\ldots, X_{j-1}=x_{j-1}, X_{j+1}=x_{j+1},\\ldots,X_d=x_d.\n\\] That is, the distribution of \\(X_j\\) when fixing the values of\n\\(X_1=x_1,\\ldots,\\) \\(X_{j-1}=x_{j-1},\\) \\(X_{j+1}=x_{j+1},\\ldots, X_d=x_d\\). An important tool is here the conditional density of, for instance, \\(X_1\\) given \\(X_2=x_2,\\ldots,X_d=x_d\\): \\[\nf(x_1\\mid x_2,\\ldots,x_d)=\\frac{f(x_1,x_2,\\ldots,x_d)}{f_{X_{2},\\ldots,X_{d}}(x_2,\\ldots,x_d)},\n\\] where \\(f_{X_{2},\\ldots,X_{d}}\\) denotes the joint density of \\(X_2,\\ldots,X_d\\).\n\n\n\n\n\n\n\n\n\n\n\n\n2.2.3 Means and Moments\n\n\n2.2.4 Unconditional Means\nThe unconditional mean of \\(X_1\\) is given by \\[\nE(X_1)= \\int x f_{X_1}(x)dx.\n\\] The unconditional mean of a random vector \\(X=(X_1,\\dots,X_d)'\\) is given by the vector of element-wise means \\[\nE(X)=(E(X_1),\\dots,E(X_d))'.\n\\]\n\n\n2.2.5 Conditional Means\nOf central importance in regression analysis is the conditional mean. The conditional mean of \\(X_1\\) for given values \\(X_2=x_2,\\ldots,X_d=x_d\\): \\[\\begin{align*}\n  m(x_2,\\dots,x_d):&=E(X_1|X_2=x_2,\\ldots,X_d=x_d)\\\\\n                   &= \\int x_1 f(x_1\\mid x_2,\\ldots,x_d)dx_1,\n\\end{align*}\\]\nwhere \\(m(x_2,\\dots,x_d)\\) denotes the regression function.\n\n\n2.2.6 Means of Transformed Random Variables and Moments\nThe mean of a transformed random variable \\(r(X)\\) is given by \\[\nE(r(X))=\\int r(x) f_{X}(x)dx.\n\\] Typical transformations are, for instance\n\ncentering \\(r(x)=x-E(X)\\),\ncentering and scaling \\(r(x)=(x-E(X))/\\sqrt{Var(X)}\\),\nor \\(r(x)=(x - E(X))^2\\),\n\nwhere the latter transformation leads to the second central moment, i.e. the variance of \\(X\\), \\(Var(X)=\\int (x - E(X))^2 f_{X}(x)dx\\).\n\nThe \\(k\\)th, \\(k>0\\), moment is given by \\[\n\\mu_{k}=\\mathrm{E}\\left[X^{k}\\right]=\\int_{-\\infty}^{+\\infty}x^{k} f_X(x)d x.\n\\]\nThe \\(k\\)th, \\(k>1\\), central moment is given by \\[\n\\mu^c_{k}=\\mathrm{E}\\left[(X-\\mathrm{E}[X])^{k}\\right]=\\int_{-\\infty}^{+\\infty}(x-\\mu)^{k} f_X(x)d x,\n\\] where \\(\\mu=E(X)\\).\n\nNote: Moments determine the tail of a distribution (but not much else); see Lindsay and Basak (2000). Roughly: The more moments a distribution has the faster converge the tails to zero. Distributions with compact supports (e.g. the uniform distribution \\(U[a,b]\\)) have infinitely many moments. The Normal distribution has also infinitely many moments, even though this distribution has not a compact support since \\(\\phi(x)>0\\) for all \\(x\\in\\mathbb{R}\\).\n\n2.2.6.1 Law of Total Expectation\nAs long as we do not fix the values of the conditioning variables, \\(X_2,\\dots,X_d\\), they are random variables. Consequently, the conditional mean is generally itself a random variable \\[\nE(X_1|X_2,\\ldots,X_d)=\\int x_1 f(x_1\\mid X_2,\\ldots,X_d)dx_1\n\\] due to the randomness in \\(X_2,\\ldots,X_d\\).\nNote that \\(f(x_1\\mid X_2,\\ldots,X_d)\\) is just a transformation of the random variables \\(X_2,\\dots,X_d\\). So we can easily compute the unconditional mean \\(E(X_1)\\) by taking the mean of \\(E(X_1|X_2,\\ldots,X_d)\\) as following, \\[\\begin{align*}\n&E\\big({\\color{RedViolet}E(X_1|X_2,\\ldots,X_d)}\\big)=\\\\\n&=\\int\\dots\\int\\;{\\color{RedViolet}\\int x_1 f(x_1\\mid x_2,\\ldots,x_d)dx_1}\\;f_{X_2,\\dots,X_d}(x_2,\\ldots,x_d)dx_2\\dots dx_d\\\\\n&=\\int x_1 \\left({\\color{blue}\\int\\dots\\int f(x_1,x_2,\\ldots,x_d)dx_2\\dots dx_d}\\right)dx_1\\\\\n&=\\int x_1 {\\color{blue}f_{X_1}(x_1)}dx_1\\\\\n&=E(X_1).\n\\end{align*}\\]\nThe result that \\[\nE\\big(E(X_1|X_2,\\ldots,X_d)\\big)=E(X_1)\n\\] is called law of total expectation or law of iterated expectation.\n\n\n\n2.2.7 Independent Random Variables\nRandom variables \\(X_1,\\dots,X_d\\) are mutually independent if for all \\(x=(x_1,\\dots,x_d)^\\prime\\) it is true that \\[\\begin{align*}\n  F(x_1,\\dots,x_d)&=F_1(x_1)\\cdot F_2(x_2)\\cdot\\ldots\\cdot F_d(x_d)\\\\\n  f(x_1,\\dots,x_d)&=f_1(x_1)\\cdot f_2(x_2)\\cdot\\ldots\\cdot f_d(x_d)\n\\end{align*}\\]\nThe following holds true:\n\nTwo real-valued random variables \\(X\\) and \\(Y\\) are independent from each other the marginal density of \\(X\\) equals the conditional density of \\(X\\) given \\(Y=y\\) for all \\(y\\in\\mathbb{R}\\), \\[f_X(x)=f_{X|Y}(x\\mid y)\\quad \\text{ for all } y\\in\\mathbb{R}.\\] Of course, the same statement applies to the marginal density of \\(Y\\) given \\(X=x\\) for all \\(x\\in\\mathbb{R}\\). That is, \\(X\\) and \\(Y\\) are two independent real-valued random variables \\(f_Y(y)=f_{Y|X}(y\\mid x)\\) for all \\(x\\in\\mathbb{R}.\\)\nIf a real-valued random variable \\(X\\) is independent from a real-valued random variable \\(Y\\), then the conditional mean of \\(X\\) given \\(Y=y\\) equals the unconditional mean of \\(X\\) for all \\(y\\in\\mathbb{R}\\) \\[\nE(X\\mid Y=y)=E(X)\n\\] and likewise \\[\nE(Y\\mid X=x)=E(Y)\n\\] for all \\(x\\in\\mathbb{R}\\).\n\nNote: The properties that \\(E(X\\mid Y=y)=E(X)\\) for all \\(y\\in\\mathbb{R}\\) or that \\(E(Y\\mid X=x)=E(Y)\\) for all \\(x\\in\\mathbb{R}\\), do not imply that \\(Y\\) and \\(X\\) are independent. It only means that \\(Y\\) has no effect on the mean of \\(X\\), but it may have, for instance, an effect on the variance of \\(X\\).\n\n\n2.2.8 Random Samples\nTradition dictates that the sample size is denoted by the natural number \\(n\\in\\{1,2,\\dots\\}\\). A collection of random variables \\((X_{1}, \\ldots, X_{n})\\) is called a random sample if its random variables are i.i.d. (independent and identically distributed), i.e., if\n\n\\(X_{1}, \\ldots, X_{n}\\) are all independent from each other and\n\\(X_{1}, \\ldots, X_{n}\\) have identical marginal distributions, i.e., \\(X_i\\sim F_X\\) for all \\(i=1,\\dots,n\\).\n\nIn micro-econometrics, random samples are the default sampling scheme. That is, we consider the collected data as a realization of an underlying random sample.\n\n\n2.2.9 Some Important Discrete Random Variables\n\n\n\n\n\n\n\n\n\n\n2.2.9.1 The Discrete Uniform Distribution\nLet \\(k>1\\) be a given integer. Suppose that \\(X\\) has probability mass function given by \\[\nf(x)=\\left\\{\\begin{array}{ll}\n1 / k & \\text { for } x=1, \\ldots, k \\\\\n0 & \\text { otherwise. }\n\\end{array}\\right.\n\\] We say that \\(X\\) has a uniform distribution on \\(\\{1, \\ldots, k\\}\\).\n\nset.seed(51)\n## Set the parameter k\nk <- 10\n## Draw one realization from the discrete uniform distribution\nsample(x = 1:k, size = 1, replace = TRUE)\n\n[1] 7\n\n\n\n\n2.2.9.2 The Bernoulli Distribution\nLet \\(X\\) represent a possibly unfair coin flip. Then \\(P(X=1)=p\\) and \\(P(X=0)=1-p\\) for some \\(p \\in[0,1]\\). We say that \\(X\\) has a Bernoulli distribution written \\(X\\sim\\operatorname{Bernoulli }(p)\\). The probability function is \\(f(x)=p^{x}(1-p)^{1-x}\\) for \\(x \\in\\{0,1\\}\\)\n\nset.seed(51)\n## Set the parameter p\np <- 0.25\n## Draw n realization from the discrete uniform distribution\nn <- 5\nsample(x = c(0,1), size = n, prob = c(1-p, p), replace=TRUE)\n\n[1] 1 0 0 1 0\n\n## Alternatively:\n## (Bernoulli(p) equals Binomial(1,p))\nrbinom(n = n, size = 1, prob = p)\n\n[1] 1 1 0 1 0\n\n\n\n\n2.2.9.3 The Binomial Distribution\nSuppose we have a coin which falls heads with probability \\(p\\) for some \\(p\\in[0,1]\\). Flip the coin \\(n\\) times and let \\(X\\) be the number of heads (or successes). Assume that the tosses are independent. Let \\(f(x)=P(X=x)\\) be the mass function. It can be shown that \\[\nf(x)=\\left\\{\n\\begin{array}{ll}\n\\left(\\begin{array}{l}\nn \\\\\nx\n\\end{array}\\right) p^{x}(1-p)^{n-x} & \\text { for } x=0, \\ldots, n \\\\\n0 & \\text { otherwise. }\n\\end{array}\\right.\n\\] A random variable with this mas function is called a binomial random variable and we write \\(X \\sim \\operatorname{Binomial}(n, p)\\). If \\(X_{1} \\sim\\) Binomial \\(\\left(n_1, p1\\right)\\) and \\(X_{2} \\sim\\) Binomial\\(\\left(n_2, p\\right)\\) and if \\(X_1\\) and \\(X_2\\) are independent, then \\(X_{1}+X_{2} \\sim \\operatorname{Binomial}\\left(n_1+n_2, p\\right)\\)\n\nset.seed(51)\n## Set the parameters n and p\nsize <-   10 # number of trials\np    <- 0.25 # prob of success\n\n## Draw n realization from the binomial distribution:\nn <- 5\nrbinom(n = n, size = size, prob = p)\n\n[1] 4 1 2 6 1\n\n\n\n\n\n2.2.10 Some Important Continuous Random Variables\n\n2.2.10.1 The Uniform Distribution\n\\(X\\) has a \\(\\operatorname{Uniform}(a, b)\\) distribution, written \\(X\\sim \\operatorname{Uniform}(a, b),\\) if \\[\nf(x)=\\left\\{\\begin{array}{ll}\n\\frac{1}{b-a} & \\text { for } x \\in[a, b] \\\\\n0 & \\text { otherwise }\n\\end{array}\\right.\n\\] where \\(a<b\\). The distribution function is \\[\nF(x)=\\left\\{\\begin{array}{ll}\n0 & x<a \\\\\n\\frac{x-a}{b-a} & x \\in[a, b] \\\\\n1 & x>b\n\\end{array}\\right.\n\\]\n\n## Drawing from the uniform distribution:\nn <- 10\na <- 0\nb <- 1\nrunif(n = n, min = a, max = b)\n\n [1] 0.83442365 0.75138318 0.40601047 0.97101998 0.11233151 0.50750617\n [7] 0.69714201 0.17104008 0.25448233 0.01813812\n\n\n\n\n2.2.10.2 The Normal (or Gaussian) Distribution\n\\(X\\) has a Normal (or Gaussian) distribution with parameters \\(\\mu\\) and \\(\\sigma,\\) denoted by \\(X \\sim N\\left(\\mu, \\sigma^{2}\\right),\\) if \\[\nf(x)=\\frac{1}{\\sigma \\sqrt{2 \\pi}} \\exp \\left\\{-\\frac{1}{2 \\sigma^{2}}(x-\\mu)^{2}\\right\\}, \\quad x \\in \\mathbb{R}\n\\] where \\(\\mu \\in \\mathbb{R}\\) and \\(\\sigma>0.\\) Later we shall see that \\(\\mu\\) is the “center” (or mean of the distribution and \\(\\sigma\\) is the “spread” (or standard deviation) of the distribution. The Normal plays an important role in probability and statistics. Many phenomena in nature have approximately Normal distributions. The Central Limit Theorem gives a special role to the Normal distribution by stating that the distribution of averages of random variables can be approximated by a Normal distribution.\nWe say that \\(X\\) has a standard Normal distribution if \\(\\mu=0\\) and \\(\\sigma=1\\). Tradition dictates that a standard Normal random variable is denoted by \\(Z\\). The PDF and CDF of a standard Normal are denoted by \\(\\phi(z)\\) and \\(\\Phi(z)\\). There is no closed-form expression for \\(\\Phi\\). Here are some useful facts:\n\nIf \\(X \\sim N\\left(\\mu, \\sigma^{2}\\right)\\) then \\(Z=(X-\\mu) / \\sigma \\sim N(0,1)\\)\nIf \\(Z \\sim N(0,1)\\) then \\(X=\\mu+\\sigma Z \\sim N\\left(\\mu, \\sigma^{2}\\right)\\)\nIf \\(X_{i} \\sim N\\left(\\mu_{i}, \\sigma_{i}^{2}\\right), i=1, \\ldots, n\\) are independent then \\[\n\\sum_{i=1}^{n} X_{i} \\sim N\\left(\\sum_{i=1}^{n} \\mu_{i}, \\sum_{i=1}^{n} \\sigma_{i}^{2}\\right).\n\\]\n\nThe following R-codes plots the standard Normal density function:\n\n# draw a plot of the N(0,1) PDF\ncurve(dnorm(x),\n      xlim = c(-3.5, 3.5),\n      ylab = \"Density\", \n      main = \"Standard Normal Density Function\") \n\n\n\n\n\n\n\n\nThis is how you can draw realizations from pseudo random Normal variables:\n\n## Drawing from the uniform distribution:\nn     <- 12\nmu    <- 0\nsigma <- 1\nrnorm(n = n, mean = mu, sd = sigma) \n\n [1]  0.085602504 -0.695791615 -1.364410561 -0.183503290 -1.675347076\n [6]  0.007303551  0.346965187  0.037914318  0.881345676 -0.882815597\n[11] -0.883560071 -0.795629557\n\n\nAn extension of the normal distribution in a univariate setting is the multivariate normal distribution. Let \\(X=(X_1,\\dots,X_k)'\\) be a \\(k\\)-dimensional normal variable, short \\(X\\sim N_k(\\mu,\\Sigma)\\) with mean vector \\(E(X)=\\mu\\in\\mathbb{R}^k\\) and covariance matrix \\(\\operatorname{Cov}(X)=\\Sigma\\). The joint density function or probability density function (pdf) of the \\(k\\)-dimensional multivariate normal distribution is \\[\nf_{X}\\left(x_{1}, \\ldots, x_{k}\\right)=\\frac{\\exp \\left(-\\frac{1}{2}(x-\\mu)' \\Sigma^{-1}(x-\\mu)\\right)}{\\sqrt{(2 \\pi)^{k}|\\Sigma|}},\n\\] where \\(|\\Sigma|\\) denotes the determinant of \\(\\Sigma\\). For \\(k=2\\) we have the bivariate pdf of two random normal variables, \\(X\\) and \\(Y\\) say \\[\\begin{align*}\n&g_{X,Y}(x,y) = \\frac{1}{2\\pi\\sigma_X\\sigma_Y\\sqrt{1-\\rho_{XY}^2}} \\\\\n& \\cdot \\, \\exp \\left\\{ \\frac{1}{-2(1-\\rho_{XY}^2)} \\left[ \\left( \\frac{x-\\mu_x}{\\sigma_X} \\right)^2 - 2\\rho_{XY}\\left( \\frac{x-\\mu_X}{\\sigma_X} \\right)\\left( \\frac{y-\\mu_Y}{\\sigma_Y} \\right) + \\left( \\frac{y-\\mu_Y}{\\sigma_Y} \\right)^2 \\right]  \\right\\}.\n\\end{align*}\\] Lets consider the special case where \\(X\\) and \\(Y\\) are independent standard normal random variables with densities \\(f_X(x)\\) and \\(f_Y(y)\\). We then have the parameters \\(\\sigma_X = \\sigma_Y = 1\\), \\(\\mu_X=\\mu_Y=0\\) (due to marginal standard normality) and correlation \\(\\rho_{XY}=0\\) (due to independence). The joint density of \\(X\\) and \\(Y\\) then becomes \\[\ng_{X,Y}(x,y) = f_X(x) f_Y(y) = \\frac{1}{2\\pi} \\cdot \\exp \\left\\{ -\\frac{1}{2}\\left[x^2 + y^2\\right]\\right\\}.\n\\]\n\n\n2.2.10.3 The Chi-Squared Distribution\nThe chi-squared distribution is another distribution relevant in econometrics. It is often needed when testing special types of hypotheses frequently encountered when dealing with regression models.\nThe sum of \\(M\\) squared independent standard normal distributed random variables, \\(Z_1,\\dots,Z_M\\) follows a chi-squared distribution with \\(M\\) degrees of freedom: \\[\\begin{align*}\nZ_1^2 + \\dots + Z_M^2 = \\sum_{m=1}^M Z_m^2 \\sim \\chi^2_M.\n\\end{align*}\\] A \\(\\chi^2\\) distributed random variable with \\(M\\) degrees of freedom has expectation \\(M\\), mode at \\(M-2\\) for \\(M \\geq 2\\) and variance \\(2 \\cdot M\\).\nUsing the code below, we can display the pdf and the distribution function or cumulated density function (cdf) of a \\(\\chi^2_3\\) random variable in a single plot. This is achieved by setting the argument add = TRUE\" in the second call of \"curve()\". Further we adjust limits of both axes using \"xlim\" and \"ylim\" and choose different colors to make both functions better distinguishable. The plot is completed by adding a legend with help of \"legend()\".\n\n# plot the PDF\ncurve(dchisq(x, df = 3), \n      xlim = c(0, 10), \n      ylim = c(0, 1), \n      col = \"blue\",\n      ylab = \"\",\n      main = \"pdf and cdf of Chi-Squared Distribution, M = 3\")\n\n# add the CDF to the plot\ncurve(pchisq(x, df = 3), \n      xlim = c(0, 10), \n      add = TRUE, \n      col = \"red\")\n\n# add a legend to the plot\nlegend(\"topleft\", \n       c(\"PDF\", \"CDF\"), \n       col = c(\"blue\", \"red\"), \n       lty = c(1, 1))\n\n\n\n\n\n\n\n\nSince the outcomes of a \\(\\chi^2_M\\) distributed random variable are always positive, the support of the related PDF and CDF is \\(\\mathbb{R}_{\\geq0}\\).\nAs expectation and variance depend (solely!) on the degrees of freedom, the distribution’s shape changes drastically if we vary the number of squared standard normals that are summed up. This relation is often depicted by overlaying densities for different \\(M\\), see the Wikipedia Article.\nWe reproduce this here by plotting the density of the \\(\\chi_1^2\\) distribution on the interval \\([0,15]\\) with \"curve()\". In the next step, we loop over degrees of freedom \\(M=2,...,7\\) and add a density curve for each \\(M\\) to the plot. We also adjust the line color for each iteration of the loop by setting \"col = M\". At last, we add a legend that displays degrees of freedom and the associated colors.\n\n# plot the density for M=1\ncurve(dchisq(x, df = 1), \n      xlim = c(0, 15), \n      xlab = \"x\", \n      ylab = \"Density\", \n      main = \"Chi-Square Distributed Random Variables\")\n\n# add densities for M=2,...,7 to the plot using a 'for()' loop \nfor (M in 2:7) {\n  curve(dchisq(x, df = M),\n        xlim = c(0, 15), \n        add = T, \n        col = M)\n}\n\n# add a legend\nlegend(\"topright\", \n       as.character(1:7), \n       col = 1:7 , \n       lty = 1, \n       title = \"D.F.\")\n\n\n\n\n\n\n\n\nIncreasing the degrees of freedom shifts the distribution to the right (the mode becomes larger) and increases the dispersion (the distribution’s variance grows).\n\n\n2.2.10.4 The Student t Distribution\nLet \\(Z\\) be a standard normal random variable, \\(W\\) a \\(\\chi^2_\\nu\\) random variable and further assume that \\(Z\\) and \\(W\\) are independent. Then it holds that \\[\n\\frac{Z}{\\sqrt{W/\\nu}} =:X \\sim t_\\nu\n\\] and \\(X\\) follows a Student \\(t\\) distribution (or simply \\(t\\) distribution) with \\(\\nu\\) degrees of freedom.\nThe shape of a \\(t_\\nu\\) distribution depends on \\(\\nu\\). \\(t\\) distributions are symmetric, bell-shaped and look similar to a normal distribution, especially when \\(\\nu\\) is large. This is not a coincidence: for a sufficiently large \\(\\nu\\), the \\(t_\\nu\\) distribution can be approximated by the standard normal distribution. This approximation works reasonably well for \\(\\nu\\geq 30\\).\nA \\(t_\\nu\\) distributed random variable \\(X\\) has an expectation if \\(\\nu>1\\) and it has a variance if \\(\\nu>2\\). \\[\\begin{align*}\n  E(X) =& 0, \\ M>1 \\\\\n  \\text{Var}(X) =& \\frac{M}{M-2}, \\ M>2\n\\end{align*}\\]\nLet us plot some \\(t\\) distributions with different degrees of freedoms \\(\\nu\\) and compare them to the standard normal distribution.\n\n# plot the standard normal density\ncurve(dnorm(x), \n      xlim = c(-4, 4), \n      xlab = \"x\", \n      lty = 2, \n      ylab = \"Density\", \n      main = \"Densities of t Distributions\")\n\n# plot the t density for M=2\ncurve(dt(x, df = 2), \n      xlim = c(-4, 4), \n      col = 2, \n      add = T)\n\n# plot the t density for M=4\ncurve(dt(x, df = 4), \n      xlim = c(-4, 4), \n      col = 3, \n      add = T)\n\n# plot the t density for M=25\ncurve(dt(x, df = 25), \n      xlim = c(-4, 4), \n      col = 4, \n      add = T)\n\n# add a legend\nlegend(\"topright\", \n       c(\"N(0, 1)\", \"M=2\", \"M=4\", \"M=25\"), \n       col = 1:4, \n       lty = c(2, 1, 1, 1))\n\n\n\n\n\n\n\n\nThe plot illustrates that as the degrees of freedom increase, the shape of the \\(t\\) distribution comes closer to that of a standard normal bell curve. Already for \\(\\nu=25\\) we find little difference to the standard normal density. If \\(\\nu\\) is small, we find the distribution to have heavier tails than a standard normal.\n\n\n2.2.10.5 Cauchy Distribution\nThe Cauchy distribution is a special case of the \\(t\\) distribution corresponding to \\(\\nu=1\\). The density is \\[\nf(x)=\\frac{1}{\\pi\\left(1+x^{2}\\right)}.\n\\]       \nFor the Cauchy distribution, the expectation does not exist – that is, it has no mean. Let’s try to compute the mean of a Cauchy distribution and see what goes wrong. Its mean should be \\[\n\\mu=E(X)=\\int_{-\\infty}^{\\infty} \\frac{x d x}{\\pi\\left(1+x^{2}\\right)}.\n\\] In order for this improper integral to exist, we need both integrals \\(\\int_{-\\infty}^{0}\\) and \\(\\int_{0}^{\\infty}\\) to be finite. Let’s look at the second integral. \\[\n\\int_{0}^{\\infty} \\frac{x d x}{\\pi\\left(1+x^{2}\\right)}=\\left.\\frac{1}{2 \\pi} \\log \\left(1+x^{2}\\right)\\right|_{0} ^{\\infty}=\\infty\n\\] Similarly, the other integral, \\(\\int_{-\\infty}^{0},\\) is \\(-\\infty\\). Since they’re not both finite, the integral \\(\\int_{-\\infty}^{\\infty}\\) doesn’t exist. In other words \\(\\infty-\\infty\\) is not a number. Thus, the Cauchy distribution has no mean.\nWhat this means in practice is that if you take a sample \\(x_{1}, x_{2}, \\ldots, x_{n}\\) from the Cauchy distribution, then the average \\(\\bar{x}\\) does not tend to a particular number. Instead, every so often you will get such a huge number, either positive or negative, that the average is overwhelmed by it.\n\n\n2.2.10.6 The F Distribution\nAnother ratio of random variables important to econometricians is the ratio of two independent \\(\\chi^2\\) distributed random variables that are divided by their degrees of freedom \\(M\\) and \\(n\\). The quantity\n\\[ \\frac{W/M}{V/n} \\sim F_{M,n} \\ \\ \\text{with} \\ \\ W \\sim \\chi^2_M \\ \\ , \\ \\ V \\sim \\chi^2_n \\] follows an \\(F\\) distribution with numerator degrees of freedom \\(M\\) and denominator degrees of freedom \\(n\\), denoted \\(F_{M,n}\\). The distribution was first derived by George Snedecor but was named in honor of Sir Ronald Fisher.\nBy definition, the support of both PDF and CDF of an \\(F_{M,n}\\) distributed random variable is \\(\\mathbb{R}_{\\geq0}\\).\nSay we have an \\(F\\) distributed random variable \\(Y\\) with numerator degrees of freedom \\(3\\) and denominator degrees of freedom \\(14\\) and are interested in \\(P(Y \\geq 2)\\). This can be computed with help of the function \"pf()\". By setting the argument \"lower.tail\" to \"FALSE\" we ensure that R computes \\(1- P(Y \\leq 2)\\), i.e,the probability mass in the tail right of \\(2\\).\n\npf(2, df1 = 3, df2 = 14, lower.tail = F)\n\n[1] 0.1603538\n\n\nWe can visualize this probability by drawing a line plot of the related density and adding a color shading with \"polygon()\".\n\n# define coordinate vectors for vertices of the polygon\nx <- c(2, seq(2, 10, 0.01), 10)\ny <- c(0, df(seq(2, 10, 0.01), 3, 14), 0)\n\n# draw density of F_{3, 14}\ncurve(df(x ,3 ,14), \n      ylim = c(0, 0.8), \n      xlim = c(0, 10), \n      ylab = \"Density\",\n      main = \"Density Function\")\n\n# draw the polygon\npolygon(x, y, col = \"orange\")\n\n\n\n\n\n\n\n\nThe \\(F\\) distribution is related to many other distributions. An important special case encountered in econometrics arises if the denominator degrees of freedom are large such that the \\(F_{M,n}\\) distribution can be approximated by the \\(F_{M,\\infty}\\) distribution which turns out to be simply the distribution of a \\(\\chi^2_M\\) random variable divided by its degrees of freedom \\(M\\), i.e.  \\[\nW/M \\sim F_{M,\\infty} \\quad\\text{with}\\quad W \\sim \\chi^2_M.\n\\]"
  },
  {
    "objectID": "03-Monte-Carlo-Simulations.html",
    "href": "03-Monte-Carlo-Simulations.html",
    "title": "3  Monte Carlo Simulations",
    "section": "",
    "text": "In the following parts of the lecture, we will use Monte Carlo simulations in oder to check whether a certain estimator is able to estimate its (usually unknown) target parameter. In this chapter, we will learn what Monte Carlo simulations are and how they can be implemented."
  },
  {
    "objectID": "03-Monte-Carlo-Simulations.html#estimator-vs.-estimate",
    "href": "03-Monte-Carlo-Simulations.html#estimator-vs.-estimate",
    "title": "3  Monte Carlo Simulations",
    "section": "3.1 Estimator vs. Estimate",
    "text": "3.1 Estimator vs. Estimate\nLet’s assume that we have an iid random sample \\(X_1,\\dots,X_n\\) with \\[\nX_i\\overset{iid}{\\sim} F_X\n\\] for all \\(i=1,\\dots,n\\), and let \\(\\theta\\in\\mathbb{R}\\) denote some parameter (e.g. the mean or the variance) of the distribution \\(F_X\\).\nAn estimator \\(\\hat\\theta_n\\) of \\(\\theta\\) is a function of the random sample \\(X_1,\\dots,X_n\\), \\[\n\\hat\\theta_n:=\\hat\\theta(X_1,\\dots,X_n).\n\\]\nSince \\(\\hat\\theta_n\\) is a function of the random variables \\(X_1,\\dots,X_n\\), the estimator \\(\\hat\\theta_n\\) is itself a random variable.\nThe observed data \\(X_{1,obs},\\dots,X_{n,obs}\\) is assumed to be a certain realization of the random sample \\(X_1,\\dots,X_n\\). The corresponding realization of the estimator is called an estimate of \\(\\theta\\) \\[\n\\hat\\theta_{n,obs}=\\hat\\theta(X_{1,obs},\\dots,X_{n,obs}).\n\\]\nNote: Often we do not use a distinguishing notation, but denote both the estimator and its realization as \\(\\hat\\theta_{n}\\). This ambiguity is often convenient since both points of views can make sense.\nExamples:\n\nThe sample mean as an estimator of the population mean:\n\n\\[\n\\hat\\theta_n=\\bar{X}_n=\\frac{1}{n}\\sum_{i=1}^nX_i \\approx E(X_i) =\\theta\n\\]\n\nThe sample variance as an estimator of the population variance:\n\n\\[\n\\hat\\theta_n=s_{UB}^2=\\frac{1}{n-1}\\sum_{i=1}^n\\left(X_i - \\bar{X}_n\\right)^2 \\approx Var(X_i) =\\theta\n\\]"
  },
  {
    "objectID": "03-Monte-Carlo-Simulations.html#deriving-the-distribution-of-estimators",
    "href": "03-Monte-Carlo-Simulations.html#deriving-the-distribution-of-estimators",
    "title": "3  Monte Carlo Simulations",
    "section": "3.2 Deriving the Distribution of Estimators",
    "text": "3.2 Deriving the Distribution of Estimators\nUsually, we do not know the distribution \\(F_X\\) of the random sample \\(X_1,\\dots,X_n\\) and thus do not know the distribution of the estimator \\(\\hat\\theta_n=\\hat\\theta(X_1,\\dots,X_n)\\). This is a fundamental statistical problem and we need to overcome this problem in order to do statistical inference (hypothesis testing, etc.). There are different possibilities to derive/approximate the distribution of an estimator \\(\\hat\\theta_n\\). In times when when computers were expensive, statisticians mainly used mathematical derivations:\n\nMathematical Derivation using Distributional Assumptions. Assuming a certain distribution \\(F_X\\) for the random sample \\(X_1,\\dots,X_n\\) allows us to derive the exact distribution of \\(\\hat\\theta_n\\) mathematically. (We consider this option in Chapter 5.)\n\nPro: If the distributional assumption is correct, one has exact inference for each sample size \\(n\\).\nCon: This option can fail miserably if the distributional assumption on \\(F_X\\) is wrong.\nCon: Such mathematical derivations are often only possible for particular distributions \\(F_X\\) like the normal distribution.\n\nMathematical Derivation using Asymptotic Statistics. Large sample \\((n\\to\\infty)\\) approximations (i.e. laws of large numbers and central limit theorems) allow us to derive the approximate distribution of \\(\\hat\\theta_n\\). This option uses mathematical limit considerations by letting the sample size \\(n\\) diverge to infinity. (We consider this option in Chapter 6.)\n\nPro: Only a few qualitative distributional assumptions are needed.\nCon: The derived asymptotic (\\(n\\to\\infty\\)) distribution is only exact for the practically impossible case where \\(n=\\infty\\) and thus can fail to approximate the exact distribution of \\(\\hat\\theta_n\\) for given (finite) sample sizes \\(n\\); particularly if \\(n\\) is small.\n\n\nWith computers, we have further options to approximate the exact distribution of estimators using (pseudo-)random number generators. One example are Monte Carlo simulations:\n\nMonte Carlo Simulations. Using (pseudo-)random number generators, we can draw B many realizations \\[\n(X_{1,1,obs},\\dots,X_{n,1,obs}),\\; (X_{1,2,obs},\\dots,X_{n,2,obs}),\\dots, (X_{1,B,obs},\\dots,X_{n,B,obs})\n\\] of the random sample \\(X_{1},\\dots,X_{n}\\) from basically any distribution \\(F_X\\) and thus can compute B many realizations \\[\n\\underbrace{\\hat\\theta(X_{1,1,obs},\\dots,X_{n,1,obs})}_{=\\hat\\theta_{n,1,obs}},\\;\\underbrace{\\hat\\theta(X_{1,2,obs},\\dots,X_{n,2,obs})}_{=\\hat\\theta_{n,2,obs}},\\dots,\\underbrace{\\hat\\theta(X_{1,B,obs},\\dots,X_{n,B,obs})}_{=\\hat\\theta_{n,B,obs}}\n\\] of the estimator \\(\\hat\\theta_n\\). This set of realizations \\(\\hat\\theta_{n,1,obs},\\dots,\\hat\\theta_{n,B,obs}\\) allows us then to approximate the exact distribution of \\(\\hat\\theta_n\\) for given sample sizes \\(n\\) and given distributions \\(F_X\\). (We use this option to validate theoretical statements in Chapter 5 and Chapter 6.)\n\nPro: Works for basically every distributional assumption.\nCon: This option can fail miserably if the distributional assumption on \\(F_X\\) is wrong.\n\n\n\nThe following R code generates B many realizations of the sample mean estimator \\(\\hat\\theta_n=\\bar{X}_n\\) using a random sample \\(X_1,\\dots,X_n\\), where \\(F_X\\) is a normal distribution with mean \\((\\theta=)\\mu=10\\) and variance \\(\\sigma^2=5\\):\n\n## True parameter value \nmu            <- 10\n## Number of Monte Carlo repetitions:\nB             <- 10000\n## Sequence of different sample sizes:\nn_seq         <- c(5, 15, 50)\n\n\n## ######################################\n## 1st Possibility: Using a for() loop ##\n## ######################################\n\n## Set seed for the random number generator to get reproducible results\nset.seed(3)\n\n# Container for the generated estimates:\nestimates_mat <- matrix(NA, nrow = B, ncol = length(n_seq))\n\nfor(j in 1:length(n_seq)){\n  ## select the sample size\n  n <- n_seq[j]\n  for(b in 1:B){\n    ## generate realization of the random sample \n    X_sample <- rnorm(n = n, mean = mu, sd = sqrt(5))\n    ## compute the sample mean and safe it\n    estimates_mat[b,j] <- mean(X_sample)\n  }\n}\n\n## #####################################\n## 2nd Possibility: Using replicate() ##\n## #####################################\n\n## Set seed for the random number generator to get reproducible results\nset.seed(3)\n\n## Function that generates estimator realizations \nmy_estimates_generator <- function(n){\n  X_sample <- rnorm(n = n, mean = mu, sd = sqrt(5))\n  ## compute the sample mean realization\n  return(mean(X_sample))\n}\n\nestimates_mat <- cbind(\n  replicate(B, my_estimates_generator(n = n_seq[1])),\n  replicate(B, my_estimates_generator(n = n_seq[2])),\n  replicate(B, my_estimates_generator(n = n_seq[3]))\n)\n\nBased on the B\\(=10,000\\) realizations of the estimator \\(\\bar{X}_n\\), we can compute histograms and non-parametric density estimates to get an idea about the true distribution of \\(\\bar{X}_n\\) for the case of random samples \\(X_1,\\dots,X_n\\) from a normal distribution with mean \\(\\mu=10\\) and variance \\(\\sigma^2=5\\):\n\npar(mfrow=c(1,3))\nhist(estimates_mat[,1], main=\"n=5\", xlab=\"\",  xlim = range(estimates_mat[,1]), prob = TRUE, ylim = c(0, 1.2))\nlines(density(estimates_mat[,1], bw = bw.SJ(estimates_mat[,1])), col=\"blue\", lwd=1.5)\nhist(estimates_mat[,2], main=\"n=15\", xlab=\"\", xlim = range(estimates_mat[,1]), prob = TRUE, ylim = c(0, 1.2))\nlines(density(estimates_mat[,2], bw = bw.SJ(estimates_mat[,3])), col=\"blue\", lwd=1.5)\nhist(estimates_mat[,3], main=\"n=50\", xlab=\"\", xlim = range(estimates_mat[,1]), prob = TRUE, ylim = c(0, 1.2))\nlines(density(estimates_mat[,2], bw = bw.SJ(estimates_mat[,3])), col=\"blue\", lwd=1.5)\n\n\n\n\nFigure 3.1: Histrograms and non-parametric density estimates of the distributions of the sample mean estimator for different sample sizes.\n\n\n\n\nObservations (Figure 3.1):\n\nAt least on average, the estimates \\(\\bar{X}_n\\) are close to the target parameter \\(\\mu=10\\) for each sample size \\(n\\in\\{5,15,50\\}\\). This feature of the estimator’s distribution is summarized by the bias (see next section) of an estimator.\nAs the sample size increases, the distributions of the estimators \\(\\bar{X}_n\\) concentrate around the target parameter \\(\\mu=10\\). This feature of the estimator’s distribution is summarized by the mean squared error (see next section) of an estimator.\n\nThus here the quality of the estimator \\(\\bar{X}_n\\) gets better as \\(n\\) gets large. To describe the quality of estimators more compactly, statisticians/econometricians use specific metrics like bias, variance and the mean squared error of the distribution of a estimator \\(\\hat\\theta\\)."
  },
  {
    "objectID": "03-Monte-Carlo-Simulations.html#assessing-the-quality-of-estimators",
    "href": "03-Monte-Carlo-Simulations.html#assessing-the-quality-of-estimators",
    "title": "3  Monte Carlo Simulations",
    "section": "3.3 Assessing the Quality of Estimators",
    "text": "3.3 Assessing the Quality of Estimators\n\nAny reasonable estimator \\(\\hat\\theta_n\\) should be able to approximate the (usually unknown) parameter value \\(\\theta\\), \\[\n\\hat\\theta_n\\approx\\theta,\n\\] and the approximation should get better as the sample size increases (i.e. as \\(n\\to\\infty\\)).\nStatisticians and econometricians use different metrics to assess the approximation quality of an estimator \\(\\hat\\theta_n\\). The most prominent metrics are bias, variance, and mean squared error.\n\nDefinition 3.1 (Bias of \\(\\theta\\)) The bias of an estimator \\(\\hat\\theta_n\\) is defined as\n\\[\n\\operatorname{Bias}\\left(\\hat\\theta_n\\right) = E\\left(\\hat\\theta_n\\right) - \\theta.\n\\]\n\nWe would like to have unbiased estimators \\(\\operatorname{Bias}\\left(\\hat\\theta_n\\right)=0\\) or at least asymptotically unbiased estimators \\(\\lim_{n\\to\\infty}\\operatorname{Bias}\\left(\\hat\\theta_n\\right)=0\\). If the bias of an estimator is small (or zero), we know that the estimator will have a distribution that is centered around the true (usually unknown) parameter \\(\\theta\\); however, such an estimator may still vary a lot around \\(\\theta\\). Therefore, is is also important to assess the variance of the estimator.\n\nDefinition 3.2 (Variance and Standard Error of \\(\\theta\\)) The variance of an estimator \\(\\hat\\theta_n\\) is defined equivalently to the variance of any other random variable\n\\[\nVar\\left(\\hat\\theta_n\\right) = E\\left[\\left(\\hat\\theta_n - E(\\hat\\theta_n)\\right)^2\\right].\n\\] The square root of the variance of an estimator is called standard error (not standard deviation) of \\(\\hat\\theta_n\\), \\[\n\\operatorname{SE}\\left(\\hat\\theta_n\\right) = \\sqrt{Var\\left(\\hat\\theta_n\\right)}.\n\\]\n\nWe would like to have estimators with a small as possible variance, and the variance should decline as the sample size increases, such that \\(\\lim_{n\\to\\infty}Var\\left(\\hat\\theta_n\\right)=0\\).\n\nDefinition 3.3 (Mean Squared Error of \\(\\theta\\)) The mean squared error of an estimator \\(\\hat\\theta_n\\) is defined as\n\\[\n\\operatorname{MSE}\\left(\\hat\\theta_n\\right) =  E\\left[\\left(\\hat\\theta_n - \\theta\\right)^2\\right].\n\\]\n\nWe would like to have estimators with a small as possible mean squared error, and the mean squared error should decline as the sample size increases, such that \\(\\lim_{n\\to\\infty}\\operatorname{MSE}\\left(\\hat\\theta_n\\right)=0\\).\nThe following holds true:\n\nThe mean squared error equals the sum of the squared bias and the variance:\n\n\\[\n\\operatorname{MSE}\\left(\\hat\\theta_n\\right) = \\left(\\operatorname{Bias}\\left(\\hat\\theta_n\\right)\\right)^2 +  Var\\left(\\hat\\theta_n\\right)\n\\]\n\nFor unbiased estimators (i.e. \\(E(\\hat\\theta_n)=\\theta\\)) the mean squared error equals the variance, i.e.\n\n\\[\n\\underbrace{E\\left[\\left(\\hat\\theta_n - \\theta\\right)^2\\right]}_{\\operatorname{MSE}\\left(\\hat\\theta_n\\right)} = \\underbrace{E\\left[\\left(\\hat\\theta_n - E\\left(\\hat\\theta_n\\right)\\right)^2\\right]}_{ Var\\left(\\hat\\theta_n\\right)}\n\\]\nUnfortunately, it is often difficult to derive the above assessment metrics for given sample sizes \\(n\\) and given data distributions \\(F_X\\). Monte Carlo simulations allow us to solve this issue."
  },
  {
    "objectID": "03-Monte-Carlo-Simulations.html#approximating-bias-variance-and-mean-squared-error-using-monte-carlo-simulations",
    "href": "03-Monte-Carlo-Simulations.html#approximating-bias-variance-and-mean-squared-error-using-monte-carlo-simulations",
    "title": "3  Monte Carlo Simulations",
    "section": "3.4 Approximating Bias, Variance, and Mean Squared Error using Monte Carlo Simulations",
    "text": "3.4 Approximating Bias, Variance, and Mean Squared Error using Monte Carlo Simulations\nWe can use Monte Carlo simulations to approximate the assessment metrics \\(\\operatorname{Bias}\\left(\\hat\\theta_n\\right),\\) \\(Var\\left(\\hat\\theta_n\\right),\\) and \\(\\operatorname{MSE}\\left(\\hat\\theta_n\\right)\\) for given sample sizes \\(n\\) and given data distributions \\(F_X\\) with arbitrary precision.\nAny of the the above assessment metrics require us to compute means of random variables:\n\nFor the \\(\\operatorname{Bias}\\left(\\hat\\theta_n\\right)\\) we need to compute \\(E\\left(\\hat\\theta_n\\right)-\\theta\\)\nFor the \\(Var\\left(\\hat\\theta_n\\right)\\) we need to compute \\(E\\left[\\left(\\hat\\theta_n - E(\\hat\\theta_n)\\right)^2\\right]\\).\nFor the \\(\\operatorname{MSE}\\left(\\hat\\theta_n\\right)\\) we need to compute \\(E\\left[\\left(\\hat\\theta_n - \\theta\\right)^2\\right]\\).\n\nA Monte Carlo simulation can approximate these means by using the law of large numbers which states that a sample mean over iid random variables is able to approximate the population mean of these random variables as the number of random variables to average over get large.1\nThus, to compute a very precise approximation to \\(E\\left(\\hat\\theta_n\\right)-\\theta\\), we can use a computer to execute the following algorithm:\nStep 1. Generate \\(B\\) many (e.g. \\(B=10,000\\)) realizations of the iid random sample\n\\[\n(X_{1,1},\\dots,X_{n,1}),\\; (X_{1,2},\\dots,X_{n,2}),\\dots, (X_{1,B},\\dots,X_{n,B})\n\\]\nStep 2. Compute the corresponding \\(B\\) many realizations of the estimator\n\\[\n\\underbrace{\\hat\\theta(X_{1,1},\\dots,X_{n,1})}_{=\\hat\\theta_{n,1}},\\;\\underbrace{\\hat\\theta(X_{1,2},\\dots,X_{n,2})}_{=\\hat\\theta_{n,2}},\\dots,\\underbrace{\\hat\\theta(X_{1,B},\\dots,X_{n,B})}_{=\\hat\\theta_{n,B}}\n\\] Step 3. Use the sample mean as an approximation to the population mean\n\\[\n\\left(\\frac{1}{B}\\sum_{b=1}^B \\hat\\theta_{n,b}\\right) - \\theta \\approx E\\left(\\hat\\theta_n\\right)-\\theta\n\\]\nBy law of large numbers this approximation gets arbitrarily precise as \\(B \\to \\infty\\).\n\nThe bias of \\(\\hat\\theta_n\\) can be approximated by\n\n\\[\n\\operatorname{Bias}\\left(\\hat\\theta_n\\right)=E\\left(\\hat\\theta_n\\right)-\\theta\\approx\\left(\\frac{1}{B}\\sum_{b=1}^B \\hat\\theta_{n,b}\\right) - \\theta = \\widehat{\\operatorname{Bias}}_{MC}\\left(\\hat\\theta_n\\right)\n\\]\n\nThe variance of \\(\\hat\\theta_n\\) can be approximated by\n\n\\[\nVar\\left(\\hat\\theta_n\\right)=E\\left[\\left(\\hat\\theta_n - E(\\hat\\theta_n)\\right)^2\\right]\\approx \\frac{1}{B}\\sum_{b=1}^B \\left(\\hat\\theta_{n,b} - \\left(\\frac{1}{B}\\sum_{b=1}^B \\hat\\theta_{n,b}\\right)\\right)^2 = \\widehat{Var}_{MC}\\left(\\hat\\theta_n\\right)\n\\]\n\nThe mean squared error of \\(\\hat\\theta_n\\) can be approximated by\n\n\\[\n\\operatorname{MSE}\\left(\\hat\\theta_n\\right)=E\\left[\\left(\\hat\\theta_n - \\theta\\right)^2\\right]\\approx\\frac{1}{B}\\sum_{b=1}^B \\left(\\hat\\theta_{n,b} - \\theta\\right)^2 = \\widehat{\\operatorname{MSE}}_{MC}\\left(\\hat\\theta_n\\right)\n\\]\n\nExample: Sample Mean\nThe following R code contains a Monte Carlo simulation ( B = 10000 replications) computing the bias, variance, and means squared error for the sample mean \\((\\hat\\theta_n=)\\bar{X}_n=\\sum_{i=1}^nX_i\\) as the estimator of the population mean \\((\\theta=)\\mu\\). The random sample \\(X_i\\overset{iid}{\\sim}F_X\\), \\(i=1,\\dots,n\\), is drawn from a normal distribution \\(F_X=\\mathcal{N}(\\mu,\\sigma^2)\\) with mean \\(\\mu=10\\) and variance \\(\\sigma^2=5\\). We investigate the accuracy of the estimator for different sample sizes \\(n\\in\\{5,15,50\\}\\). \n\n## Set seed for the random number generator to get reproducible results\nset.seed(3)\n## True parameter value ('theta' here 'mu')\nmu            <- 10\n## Number of Monte Carlo repetitions:\nB             <- 10000\n## Sequence of different sample sizes:\nn_seq         <- c(5, 15, 50)\n\n## Function that generates estimator realizations \nmy_estimates_generator <- function(n){\n  X_sample <- rnorm(n = n, mean = mu, sd = sqrt(5))\n  ## compute the sample mean realization\n  return(mean(X_sample))\n}\n\nestimates_mat <- cbind(\n  replicate(B, my_estimates_generator(n = n_seq[1])),\n  replicate(B, my_estimates_generator(n = n_seq[2])),\n  replicate(B, my_estimates_generator(n = n_seq[3]))\n)\n\nThe following R code computes the Monte Carlo (MC) approximations for the bias, variance, and mean squared error of \\(\\bar{X}_n\\). The results should capture our observations.\n\n## Bias of the sample mean for different sample sizes n\nMC_Bias_n_seq <- apply(estimates_mat, 2, mean) - mu\n\n## Variance of the sample mean for different sample sizes n\nMC_Var_n_seq  <- apply(estimates_mat, 2, var)\n\n## Mean squared error of the sample mean for different sample sizes n\nMC_MSE_n_seq  <- apply(estimates_mat, 2, function(x){mean((x - mu)^2)})\n\nThe table shows the numerical values of the Monte Carlo approximations for the true bias, true variance, and true mean squared error of \\(\\bar{X}_n\\):\n\n\n\n\nTable 3.1:  Monte Carlo approximations for the true bias, true variance, and true mean squared error of sample mean. \n \n  \n    n \n    Bias (MC-Sim)  \n    Variance (MC-Sim) \n    MSE (MC-Sim)  \n  \n \n\n  \n    5 \n    -0.001 \n    1.02 \n    1.02 \n  \n  \n    15 \n    0.000 \n    0.33 \n    0.33 \n  \n  \n    50 \n    0.001 \n    0.10 \n    0.10 \n  \n\n\n\n\n\n\nThese Monte Carlo approximations (Table 3.1) indicate that:\n\nThe true bias \\(\\operatorname{Bias}(\\bar{X}_n)\\) is very likely zero for all sample sizes \\(n\\in\\{5,15,50\\}\\)\n\n\n\nThe true mean squared error \\(\\operatorname{MSE}(\\bar{X}_n)\\) is very likely decreasing as the sample size \\(n\\) get larger.\n\n\nSince this example is chosen to be an extremely simple one, we can easily derive the true bias, variance and mean squared error values and compare them with their Monte Carlo approximations:\n\nTrue bias of \\(\\bar{X}_n\\):\n\n\\[\n\\operatorname{Bias}\\left(\\bar{X}_n\\right)=E\\left(\\frac{1}{n}\\sum_{i=1}^nX_i\\right) - \\mu = \\left(\\frac{1}{n}\\sum_{i=1}^nE(X_i)\\right) -\\mu = \\frac{n}{n}\\mu-\\mu =0,\n\\] thus the mean squared error of \\(\\bar{X}_n\\) equals the variance of \\(\\bar{X}_n\\).\n\nTrue variance of \\(\\bar{X}_n\\):\n\n\\[\nVar\\left(\\bar{X}_n\\right)=Var\\left(\\frac{1}{n}\\sum_{i=1}^nX_i\\right) = \\frac{1}{n^2} \\sum_{i=1}^nVar\\left(X_i\\right) = \\frac{n}{n^2}\\sigma^2 = \\frac{5}{n}\n\\] The following table shows the true bias, true variance and true mean squared error values:\n\n\n\n\nTable 3.2:  True bias, true variance, and true mean squared error of sample mean. (Only computable in simple special cases.) \n \n  \n    n \n    Bias (true)  \n    Variance (true) \n    MSE (true)  \n  \n \n\n  \n    5 \n    0 \n    1.00 \n    1.00 \n  \n  \n    15 \n    0 \n    0.33 \n    0.33 \n  \n  \n    50 \n    0 \n    0.10 \n    0.10 \n  \n\n\n\n\n\n\nObviously, the Monte Carlo approximations (Table 3.1) for these true values (Table 3.2) are very good. If we would further increase the number of Monte Carlo repetitions B, the Monte Carlo approximations would get even more precise since we can make them arbitrarily precise by letting B\\(\\to\\infty\\) using the law of large numbers."
  },
  {
    "objectID": "04-MultipleReg.html",
    "href": "04-MultipleReg.html",
    "title": "4  Multiple Linear Regression",
    "section": "",
    "text": "In the following we focus on case of random designs \\(X\\) (i.e. \\(X\\) being a random variable), since, first, this is the more relevant case in econometrics and, second, it includes the case of fixed designs (i.e. \\(X\\) being deterministic) as a special case (“degenerated random variable”). Caution: A random \\(X\\) requires us to consider conditional means and variances “given \\(X\\).” That is, if we would be able to resample from the model, we do so by fixing (conditioning on) the in-principle random explanatory variable \\(X\\)."
  },
  {
    "objectID": "04-MultipleReg.html#assumptions",
    "href": "04-MultipleReg.html#assumptions",
    "title": "4  Multiple Linear Regression",
    "section": "4.1 Assumptions",
    "text": "4.1 Assumptions\nThe multiple linear regression model is defined by the following assumptions:\nAssumption 1: The Linear Model Assumption (Data Generating Process)\nPart (a): Model\n\\[\n\\begin{align}\n  Y_i=\\sum_{k=1}^K\\beta_k X_{ik}+\\varepsilon_i, \\quad i=1,\\dots,n.\n\\end{align}\n\\tag{4.1}\\] Usually, a constant (intercept) is included, in this case \\(X_{i1}=1\\) for all \\(i\\). In the following we will always assume that \\(X_{i1}=1\\) for all \\(i\\), unless otherwise stated.\nIt is convenient to write Equation 4.1 using matrix notation \\[\\begin{eqnarray*}\n  Y_i&=&\\underset{(1\\times K)}{X_i'}\\underset{(K\\times 1)}{\\beta} +\\varepsilon_i, \\quad i=1,\\dots,n,\n\\end{eqnarray*}\\] where \\(X_i=(X_{i1},\\dots,X_{iK})'\\) and \\(\\beta=(\\beta_1,\\dots,\\beta_K)'\\). Stacking all individual rows \\(i\\) leads to \\[\\begin{eqnarray*}\\label{LM}\n  \\underset{(n\\times 1)}{Y}&=&\\underset{(n\\times K)}{X}\\underset{(K\\times 1)}{\\beta} + \\underset{(n\\times 1)}{\\varepsilon},\n\\end{eqnarray*}\\] where \\[\\begin{equation*}\nY=\\left(\\begin{matrix}Y_1\\\\ \\vdots\\\\Y_n\\end{matrix}\\right),\\quad X=\\left(\\begin{matrix}X_{11}&\\dots&X_{1K}\\\\\\vdots&\\ddots&\\vdots\\\\ X_{n1}&\\dots&X_{nK}\\\\\\end{matrix}\\right),\\quad\\text{and}\\quad \\varepsilon=\\left(\\begin{matrix}\\varepsilon_1\\\\ \\vdots\\\\ \\varepsilon_n\\end{matrix}\\right).\n\\end{equation*}\\]\nPart (b): Random Sample\nMoreover, we assume that the observed (“obs”) data points \\[\n((Y_{1,obs},X_{11,obs},\\dots,X_{1K,obs}),(Y_{2,obs},X_{21,obs},\\dots,X_{2K,obs}),\\dots,(Y_{n,obs},X_{n1,obs},\\dots,X_{nK,obs}))\n\\] are realizations of a random sample \\[\n((Y_{1},X_{11},\\dots,X_{1K}),(Y_{2},X_{21},\\dots,X_{2K}),\\dots,(Y_{n},X_{n1},\\dots,X_{nK})).\n\\]\nThat is, the \\(i\\)th observed \\(K+1\\) dimensional data point \\((Y_{i,obs},X_{i1,obs},\\dots,X_{iK,obs})\\in\\mathbb{R}^{K+1}\\) is a realization of a \\(K+1\\) dimensional random variable \\((Y_{i},X_{i1},\\dots,X_{iK})\\in\\mathbb{R}^{K+1},\\) where\n\n\\((Y_{i},X_{i1},\\dots,X_{iK})\\) has the identical joint distribution as \\((Y_{j},X_{j1},\\dots,X_{jK})\\) for all \\(i=1,\\dots,n\\) and all \\(j=1,\\dots,n\\), and where\n\\((Y_{i},X_{i1},\\dots,X_{iK})\\) is independent of \\((Y_{j},X_{j1},\\dots,X_{jK})\\) for all \\(i\\neq j=1,\\dots,n.\\)\n\nNote: Due to Equation 4.1, this i.i.d. assumption is equivalent to assuming that the multivariate random variables \\((\\varepsilon_i,X_{i1},\\dots,X_{iK})\\in\\mathbb{R}^{K+1}\\) are i.i.d. across \\(i=1,\\dots,n\\).\nRemark: Usually, we do not use a different notation for observed realizations \\((Y_{i,obs},X_{i1,obs},\\dots,X_{iK,obs})\\in\\mathbb{R}^{K+1}\\) and for the corresponding random variable \\((Y_{i},X_{i1},\\dots,X_{iK})\\in\\mathbb{R}^{K+1}\\) since often both interpretations (random variable and its realizations) can make sense in the same statement and then it depends on the considered context whether the random variables point if view or the realization point of view applies.\n\n\n\nAssumption 2: Exogeneity \\[E(\\varepsilon_i|X_i)=0,\\quad i=1,\\dots,n\\] This assumption demands that the mean of the random error term \\(\\varepsilon_i\\) is zero irrespective of the realizations of \\(X_i\\).\nThis exogeneity assumption is also called “orthogonality assumption” or “mean independence assumption.”\nNote: Together with the random sample assumption (Assumption 1, Part (b)) this assumption implies even strict exogeneity \\(E(\\varepsilon_i|X) = 0\\) since we have independence across \\(i=1,\\dots,n\\). Under strict exogeneity, the mean of \\(\\varepsilon_i\\) is zero irrespective of the realizations of \\(X_1,\\dots,X_n\\).\n\n\nAssumption 3: Rank Condition (no perfect multicollinearity)\n\\[\\operatorname{rank}(X)=K\\quad\\text{a.s.}\\] This assumption demands that the event of one explanatory variable being linearly dependent on the others occurs with a probability equal to zero. (This is the literal translation of the “almost surely (a.s.)” concept.) The assumption implies that \\(n\\geq K\\).\nThis assumption is a bit dicey and its violation belongs to one of the classic problems in applied econometrics (keywords: multicollinearity, dummy variable trap, variance inflation). The violation of this assumption harms any economic interpretation as we cannot disentangle the explanatory variables’ individual effects on \\(Y\\). Therefore, this assumption is also often called an “identification assumption.”\nAssumption 4: Error distribution\nDepending on the context (i.e., parameter estimation vs. hypothesis testing and small \\(n\\) vs. large \\(n\\)) there are different more or less restrictive assumptions. Some of the most common ones are the following (roughly order from least to most restrictive):\n\nConditional Distribution: \\(\\varepsilon_i|X_i \\sim f_{\\varepsilon|X}\\) for all \\(i=1,\\dots,n\\) and for any distribution \\(f_{\\varepsilon|X}\\) such that \\(\\varepsilon_i|X_i\\) has two (or more) finite moments.\nConditional Normal Distribution: \\(\\varepsilon_i|X_i \\sim \\mathcal{N}(0,\\sigma^2(X_i))\\) for all \\(i=1,\\dots,n\\).\ni.i.d.: \\(\\varepsilon_i\\overset{\\operatorname{i.i.d.}}{\\sim}f_\\varepsilon\\) for all \\(i=1,\\dots,n\\) and for any distribution \\(f_\\varepsilon\\) such that \\(\\varepsilon_i\\) has two (or more) finite moments. Assuming that the error terms \\(\\varepsilon_i\\) are themselves i.i.d. across \\(i=1,\\dots,n\\) implies that they do not depend on \\(X_i\\).\ni.i.d. Normal: As above, but with \\(f=\\mathcal{N}(0,1)\\), i.e., \\(\\varepsilon_i\\overset{\\operatorname{i.i.d.}}{\\sim}\\mathcal{N}(0,\\sigma^2)\\) for all \\(i=1,\\dots,n\\).\nSpherical errors (“Gauss-Markov assumptions”): The conditional distributions of \\(\\varepsilon_i|X_i\\) may generally depend on \\(X_i\\), but without affecting the second moments such that \\[\\begin{align*}\nE(\\varepsilon_i^2|X_i)         &=\\sigma^2>0\\quad\\text{for all }i=1,\\dots,n\\\\\nE(\\varepsilon_i\\varepsilon_j|X)&=0\\quad\\text{for all }i\\neq j\\quad\\text{with}\\quad i=1,\\dots,n\\quad\\text{and}\\quad j=1,\\dots,n.\n\\end{align*}\\] Thus, here one assumes that, for a given realization of \\(X_i\\), the error process is uncorrelated (i.e. \\(Cov(\\varepsilon_i,\\varepsilon_j|X)=E(\\varepsilon_i\\varepsilon_j|X)=0\\) for all \\(i\\neq j\\)) and homoskedastic (i.e. \\(Var(\\varepsilon_i|X)=\\sigma^2\\) for all \\(i\\)).\n\n\n\nHomoskedastic versus Heteroskedastic Error Terms\nThe i.i.d. assumption is not as restrictive as it may seem on first sight. It allows for dependence between \\(\\varepsilon_i\\) and \\((X_{i1},\\dots,X_{iK})\\in\\mathbb{R}^K\\). That is, the error term \\(\\varepsilon_i\\) can have a conditional distribution which depends on \\((X_{i1},\\dots,X_{iK})\\); see Section 2.2.2.5.\n\n\nThe exogeneity assumption (Assumption 2: Exogeneity) requires that the conditional mean of \\(\\varepsilon_i\\) is independent of \\(X_i\\). Besides this, dependencies between \\(\\varepsilon_i\\) and \\(X_{i1},\\dots,X_{iK}\\) are allowed. For instance, the variance of \\(\\varepsilon_i\\) can be a function of \\(X_{i1},\\dots,X_{iK}\\). If this is the case, \\(\\varepsilon_i\\) is said to be “heteroskedastic.”\n\nHeteroskedastic error terms: The conditional variances \\(Var(\\varepsilon_i|X_i=x_i)=\\sigma^2(x_i)\\) are equal to a non-constant variance-function \\(\\sigma^2(x_i)>0\\) which is a function of the realization \\(X_i=x_i.\\)\n\nExample: \\(\\varepsilon_i|X_i\\sim U[-0.5|X_{i2}|, 0.5|X_{i2}|],\\) with \\(X_{i2}\\sim U[-4,4]\\). This error term is mean independent of \\(X_i\\) since \\(E(\\varepsilon_i|X_i)=0\\), but it has a heteroskedastic conditional variance since \\(Var(\\varepsilon_i|X_i)=\\frac{1}{12}X_i^2\\) depends on \\(X_i\\).\nSometimes, we need to be more restrictive by assuming that also the variances of the error terms \\(\\varepsilon_i\\) are independent from \\(X_i\\). (Higher moments may still depend on \\(X_i\\).) This assumption leads to “homoskedastic” error terms.\n\nHomoskedastic error terms: The conditional variances \\(Var(\\varepsilon_i|X_i=x_i)=\\sigma^2\\) are equal to some constant \\(\\sigma^2>0\\) for every possible realization \\(X_i=x_i.\\)\n\n\n\n\n\n\n\n\nExample: For doing small sample inference (see Chapter 5), we need to assume that the error terms \\(\\varepsilon_i\\) are i.i.d. across \\(i=1,\\dots,n\\) plus the normality assumption, i.e., \\(\\varepsilon_i\\stackrel{\\textrm{i.i.d.}}{\\sim}{\\mathcal N} (0, \\sigma^2)\\) for all \\(i=1,\\dots,n\\) which leads to homoskedastic variances \\(Var(\\varepsilon_i|X_i)=\\sigma^2\\) for every possible realization of \\(X_i\\).\n\n\n4.1.1 Some Implications of the Exogeneity Assumption\n\nTheorem 4.1 (Unconditional Mean) If \\(E(\\varepsilon_i|X_i)=0\\) for all \\(i=1,\\dots,n\\), then the also the unconditional mean of the error term is zero, i.e. \\[\nE(\\varepsilon_i)=0,\\quad i=1,\\dots,n.\n\\]\n\n\nProof. Using the Law of Total Expectations (i.e., \\(E[E(Z|X)]=E(Z)\\)) we can rewrite \\(E(\\varepsilon_i)\\) as \\[\nE(\\varepsilon_i)=E[E(\\varepsilon_i|X_i)]\n\\] for all \\(i=1,\\dots,n.\\) But the exogeneity assumption yields \\[\nE[E(\\varepsilon_i|X_i)]=E[0]=0\n\\] for all \\(i=1,\\dots,n,\\) which completes the proof. \\(\\square\\)\n\nGenerally, two random variables \\(X\\) and \\(Y\\) are said to be orthogonal if their cross moment is zero, i.e. if \\(E(XY)=0\\). Exogeneity is sometimes also called “orthogonality,” due to the following result.\n\nTheorem 4.2 (Orthogonality) Under exogeneity, i.e. if \\(E(\\varepsilon_i|X_{i})=0\\), the regressors and the error term are orthogonal to each other, i.e, \\[\nE(X_{ik}\\varepsilon_i)=0\n\\] for all \\(i=1,\\dots,n\\) and \\(k=1,\\dots,K\\).\n\n\nProof. \\[\\begin{align*}\nE(X_{ik}\\varepsilon_i)\n&=E(E(X_{ik}\\varepsilon_i|X_{ik}))\\quad{\\small\\text{(By the Law of Total Expectations)}}\\\\\n&=E(X_{ik}E(\\varepsilon_i|X_{ik}))\\quad{\\small\\text{(By the linearity of cond.~expectations)}}\n\\end{align*}\\] Now, to show that \\(E(X_{ik}\\varepsilon_i)=0\\), we need to show that \\(E(\\varepsilon_i|X_{ik})=0,\\) which is done in the following:\nSince \\(X_{ik}\\) is an element of \\(X_i,\\) a slightly more sophisticated use of the Law of Total Expectations (i.e., \\(E(Y|X)=E(E(Y|X,Z)|X)\\)) implies that \\[\nE(\\varepsilon_i|X_{ik})=E(E(\\varepsilon_i|X_i)|X_{ik}).\n\\] So, the exogeneity assumption, \\(E(\\varepsilon_i|X_i)=0\\) yields \\[\nE(\\varepsilon_i|X_{ik})=E(\\underbrace{E(\\varepsilon_i|X_i)}_{=0}|X_{ik})=E(0|X_{ik})=0.\n\\] I.e., we have that \\(E(\\varepsilon_i|X_{ik})=0\\) which allows us to conclude that \\[\nE(X_{ik}\\varepsilon_i)=E(X_{ik}E(\\varepsilon_i|X_{ik}))=E(X_{ik}0)=0\n\\] which completes the proof. \\(\\square\\)\n\nBecause the mean of the error term is zero (\\(E(\\varepsilon_i)=0\\) for all \\(i\\) (see Theorem 4.1), it follows that the orthogonality property, \\(E(X_{ik}\\varepsilon_i)=0,\\) is equivalent to a zero correlation property.\n\nTheorem 4.3 (No Correlation) If \\(E(\\varepsilon_i|X_{i})=0\\), then \\[\\begin{eqnarray*}\n  Cov(\\varepsilon_i,X_{ik})&=&0\\quad\\text{for all}\\quad i=1,\\dots,n\\quad\\text{and}\\quad k=1,\\dots,K.\n\\end{eqnarray*}\\]\n\n\nProof. \\[\\begin{eqnarray*}\n  Cov(\\varepsilon_i,X_{ik})&=&E(X_{ik}\\varepsilon_i)-E(X_{ik})\\,E(\\varepsilon_i)\\quad{\\small\\text{(Def. of Cov)}}\\\\\n  &=&E(X_{ik}\\varepsilon_i)\\quad{\\small\\text{(By point (a): $E(\\varepsilon_i)=0$)}}\\\\\n  &=&0\\quad{\\small\\text{(By orthogonality result in point (b))}}\\quad\\square\n\\end{eqnarray*}\\]"
  },
  {
    "objectID": "04-MultipleReg.html#deriving-the-expression-of-the-ols-estimator",
    "href": "04-MultipleReg.html#deriving-the-expression-of-the-ols-estimator",
    "title": "4  Multiple Linear Regression",
    "section": "4.2 Deriving the Expression of the OLS Estimator",
    "text": "4.2 Deriving the Expression of the OLS Estimator\nWe derive the expression for the OLS estimator \\(\\hat\\beta=(\\hat\\beta_1,\\dots,\\hat\\beta_K)'\\in\\mathbb{R}^K\\) as the vector-valued minimizing argument of the sum of squared residuals, \\(S_n(b)\\) with \\(b\\in\\mathbb{R}^K\\), for a given sample \\(((Y_1,X_1),\\dots,(Y_n,X_n))\\). In matrix terms this is \\[\\begin{align*}\nS_n(b)&=(Y-X b)^{\\prime}(Y-X b)=Y^{\\prime}Y-2 Y^{\\prime} X b+b^{\\prime} X^{\\prime} X b.\n\\end{align*}\\] To find the minimizing argument \\[\\hat\\beta=\\arg\\min_{b\\in\\mathbb{R}^K}S_n(b)\\] we compute all partial derivatives \\[\n\\begin{aligned}\n\\underset{(K\\times 1)}{\\frac{\\partial S(b)}{\\partial b}} &=-2\\left(X^{\\prime}Y -X^{\\prime} Xb\\right).\n\\end{aligned}\n\\] and set them equal to zero which leads to \\(K\\) linear equations (the “normal equations”) in \\(K\\) unknowns. This system of equations defines the OLS estimates, \\(\\hat{\\beta}\\), for a given data-set: \\[\n\\begin{aligned}\n-2\\left(X^{\\prime}Y -X^{\\prime} X\\hat{\\beta}\\right)=\\underset{(K\\times 1)}{0}.\n\\end{aligned}\n\\] From our rank assumption (Assumption 3) it follows that \\(X^{\\prime}X\\) is an invertible matrix which allows us to solve the equation system by \\[\n\\begin{aligned}\n\\underset{(K\\times 1)}{\\hat{\\beta}} &=\\left(X^{\\prime} X\\right)^{-1} X^{\\prime} Y\n\\end{aligned}\n\\]\nThe following codes computes the estimate \\(\\hat{\\beta}\\) for a given realization \\((Y,X)\\) of the random sample \\((Y,X)\\).\n\n# Some given data\nX_1 <- c(1.9,0.8,1.1,0.1,-0.1,4.4,4.6,1.6,5.5,3.4)\nX_2 <- c(66, 62, 64, 61, 63, 70, 68, 62, 68, 66)\nY   <- c(0.7,-1.0,-0.2,-1.2,-0.1,3.4,0.0,0.8,3.7,2.0)\ndataset <-  cbind.data.frame(X_1,X_2,Y)\n## Compute the OLS estimation\nmy.lm <- lm(Y ~ X_1 + X_2, data = dataset)\n## Plot sample regression surface\nlibrary(\"scatterplot3d\") # library for 3d plots\nplot3d <- scatterplot3d(x = X_1, y = X_2, z = Y,\n          angle=33, scale.y=0.8, pch=16,\n          color =\"red\", main =\"OLS Regression Surface\")\nplot3d$plane3d(my.lm, lty.box = \"solid\", col=gray(.5), \n          draw_polygon=TRUE)"
  },
  {
    "objectID": "04-MultipleReg.html#some-quantities-of-interest",
    "href": "04-MultipleReg.html#some-quantities-of-interest",
    "title": "4  Multiple Linear Regression",
    "section": "4.3 Some Quantities of Interest",
    "text": "4.3 Some Quantities of Interest\nPredicted values and residuals.\n\nThe (OLS) predicted values: \\(\\hat{Y}_i=X_i'\\hat\\beta\\).\nIn matrix notation: \\(\\hat Y=X\\underbrace{(X'X)^{-1}X'Y}_{\\hat\\beta}=P_X Y\\)\nThe (OLS) residuals: \\(\\hat\\varepsilon_i=Y_i-\\hat{Y}_i\\). In matrix notation: \\(\\hat\\varepsilon=Y-\\hat{Y}=\\left(I_n-X(X'X)^{-1}X'\\right)Y=M_X Y\\)\n\nProjection matrices.\nThe matrix \\[\nP_X=X(X'X)^{-1}X'\n\\] is the \\((n\\times n)\\) projection matrix that projects any vector from \\(\\mathbb{R}^n\\) into the column space spanned by the column vectors of \\(X\\) and \\[\nM_X=I_n-X(X'X)^{-1}X'=I_n-P_X\n\\] is the associated \\((n\\times n)\\) orthogonal projection matrix that projects any vector from \\(\\mathbb{R}^n\\) into the vector space that is orthogonal to that spanned by \\(X\\).\nThe projection matrices \\(P_X\\) and \\(M_X\\) have some nice properties:\n\n\\(P_X\\) and \\(M_X\\) are symmetric, i.e. \\(P_X=P_X'\\) and \\(M_X=M_X'\\).\n\\(P_X\\) and \\(M_X\\) are idempotent, i.e. \\(P_XP_X=P_X\\) and \\(M_X M_X=M_X\\).\nMoreover, we have that \\(X'P_X=X'\\), \\(P_XX=X\\), \\(X'M_X=0\\), \\(M_XX=0\\), and \\(P_XM_X=0\\).\n\nAll of these properties follow directly from the definitions of \\(P_X\\) and \\(M_X\\) (check it out). Using these properties one can show that the residual vector \\(\\hat\\varepsilon=(\\hat\\varepsilon_1,\\dots,\\hat\\varepsilon_n)'\\) is orthogonal to each of the column vectors in \\(X\\), i.e \\[\\begin{eqnarray}\nX'\\hat\\varepsilon&=&X'M_XY\\quad\\text{\\small(By Def.~of $M_X$)}\\\\\n\\Leftrightarrow X'\\hat\\varepsilon&=&\\underset{(K\\times n)}{0}\\underset{(n\\times 1)}{Y}\\quad\\text{\\small(since $X'M_X=0$)}\\\\\n\\Leftrightarrow X'\\hat\\varepsilon&=&\\underset{(K\\times 1)}{0}\n\\end{eqnarray}\\]    Note that, in the case with intercept, the result \\(X'\\hat\\varepsilon=0\\) implies that \\(\\sum_{i=1}^n\\hat\\varepsilon_i=0\\). Moreover, the equation \\(X'\\hat\\varepsilon=0\\) implies also that the residual vector \\(\\hat{\\varepsilon}\\) is orthogonal to the predicted values vector, since \\[\\begin{align*}\nX'\\hat\\varepsilon&=0\\\\\n\\Rightarrow\\;\\hat\\beta'X'\\hat\\varepsilon&=\\hat\\beta'0\\\\\n\\Leftrightarrow\\;\\hat Y'\\hat\\varepsilon&=0.\n\\end{align*}\\]\nAnother insight from equation \\(X'\\hat\\varepsilon=0\\) is that the vector \\(\\hat\\varepsilon\\) has to satisfy \\(K\\) linear restrictions which means it looses \\(K\\) degrees of freedom.1 Consequently, the vector of residuals \\(\\hat\\varepsilon\\) has only \\(n-K\\) so-called degrees of freedom. This loss of \\(K\\) degrees of freedom also appears in the definition of the unbiased variance estimator \\[\\begin{align}\n  s_{UB}^2&=\\frac{1}{n-K}\\sum_{i=1}^n\\hat\\varepsilon_i^2\\label{EqVarEstim}.\n\\end{align}\\]\nVariance decomposition: A further useful result that can be shown using the properties of \\(P_X\\) and \\(M_X\\) is that \\(Y'Y=\\hat{Y}'\\hat{Y}+\\hat\\varepsilon'\\hat\\varepsilon\\), i.e. \\[\\begin{eqnarray*}\nY'Y&=&(\\hat Y+\\hat\\varepsilon)'(\\hat Y+\\hat\\varepsilon)\\notag\\\\\n  &=&(P_XY+M_XY)'(P_XY+M_XY)\\notag\\\\\n  &=&(Y'P_X'+Y'M_X')(P_XY+M_XY)\\notag\\\\\n  &=&Y'P_X'P_XY+Y'M_X'M_XY+0\\notag\\\\\n  &=&\\hat{Y}'\\hat{Y}+\\hat\\varepsilon'\\hat\\varepsilon\n\\end{eqnarray*}\\] The decomposition \\[\n\\hat{Y}'\\hat{Y}+\\hat\\varepsilon'\\hat\\varepsilon\n\\] is the basis for the well-known variance decomposition result for OLS regressions.\n\nTheorem 4.4 For the linear OLS regression model Equation 4.1 with intercept, the total sample variance of the dependent variable \\(Y_1,\\dots,Y_n\\) can be decomposed as following: \\[\\begin{eqnarray}\n\\underset{\\text{total sample variance}}{\\frac{1}{n}\\sum_{i=1}^n\\left(Y_i-\\bar{Y}\\right)^2}&=&\\underset{\\text{explained sample variance}}{\\frac{1}{n}\\sum_{i=1}^n\\left(\\hat{Y}_i-\\bar{\\hat{Y}}\\right)^2}+\\underset{\\text{unexplained sample variance}}{\\frac{1}{n}\\sum_{i=1}^n\\hat\\varepsilon_i^2,}\\label{VarDecomp}\n\\end{eqnarray}\\] where \\(\\bar{Y}=\\frac{1}{n}\\sum_{i=1}^nY_i\\) and \\(\\bar{\\hat{Y}}=\\frac{1}{n}\\sum_{i=1}^n\\hat{Y}_i\\).\n\n\nProof. From equation \\(X'\\hat\\varepsilon=0\\) we have for regressions with intercept that \\(\\sum_{i=1}^n\\hat\\varepsilon_i=0\\). Hence, from \\(Y_i=\\hat{Y}_i+\\hat\\varepsilon_i\\) it follows that \\[\\begin{eqnarray*}\n  \\frac{1}{n}\\sum_{i=1}^n Y_i&=&\\frac{1}{n}\\sum_{i=1}^n \\hat{Y}_i+\\frac{1}{n}\\sum_{i=1}^n \\hat\\varepsilon_i\\\\\n  \\bar{Y}&=&\\bar{\\hat{Y}}+0\n\\end{eqnarray*}\\]\nUsing the decomposition \\(Y'Y=\\hat{Y}'\\hat{Y}+\\hat\\varepsilon'\\hat\\varepsilon\\), we can now derive the result: \\[\\begin{eqnarray*}\n   Y'Y&=&\\hat{Y}'\\hat{Y}+\\hat\\varepsilon'\\hat\\varepsilon\\\\\n   Y'Y-n\\bar{Y}^2&=&\\hat{Y}'\\hat{Y}-n\\bar{Y}^2+\\hat\\varepsilon'\\hat\\varepsilon\\\\\n   Y'Y-n\\bar{Y}^2&=&\\hat{Y}'\\hat{Y}-n\\bar{\\hat{Y}}^2+\\hat\\varepsilon'\\hat\\varepsilon\\quad\\text{(by $\\bar{Y}=\\bar{\\hat{Y}}$)}\\\\\n   \\sum_{i=1}^nY_i^2-n\\bar{Y}^2&=&\\sum_{i=1}^n\\hat{Y}_i^2-n\\bar{\\hat{Y}}^2+\\sum_{i=1}^n\\hat\\varepsilon_i^2\\\\\n   \\sum_{i=1}^n(Y_i-\\bar{Y})^2&=&\\sum_{i=1}^n(\\hat{Y}_i-\\bar{\\hat{Y}})^2+\\sum_{i=1}^n\\hat\\varepsilon_i^2\\quad\\square\\\\\n\\end{eqnarray*}\\]\n\n\nCoefficients of determination: \\(R^2\\) and \\(\\overline{R}^2\\)\nThe larger the proportion of the explained variance, the better is the fit of the model. This motivates the definition of the so-called \\(R^2\\) coefficient of determination: \\[\\begin{eqnarray*}\nR^2=\\frac{\\sum_{i=1}^n\\left(\\hat{Y}_i-\\bar{\\hat{Y}}\\right)^2}{\\sum_{i=1}^n\\left(Y_i-\\bar{Y}\\right)^2}\\;=\\;1-\\frac{\\sum_{i=1}^n\\hat{\\varepsilon}_i^2}{\\sum_{i=1}^n\\left(Y_i-\\bar{Y}\\right)^2}\n\\end{eqnarray*}\\] Obviously, we have that \\(0\\leq R^2\\leq 1\\). The closer \\(R^2\\) lies to \\(1\\), the better is the fit of the model to the observed data. However, a high/low \\(R^2\\) does not mean a validation/falsification of the estimated model. Any relation (i.e., model assumption) needs a plausible explanation from relevant economic theory. The most often criticized disadvantage of the \\(R^2\\) is that additional regressors (relevant or not) will always increase the \\(R^2\\). Here is an example of the problem.\n\nset.seed(123)\nn     <- 100               # Sample size\nX     <- runif(n, 0, 10)   # Relevant X variable\nX_ir  <- runif(n, 5, 20)   # Irrelevant X variable\nerror <- rt(n, df = 10)*10  # True error\nY     <- 1 + 5 * X + error    # Y variable\nlm1   <- summary(lm(Y~X))     # Correct OLS regression \nlm2   <- summary(lm(Y~X+X_ir))# OLS regression with X_ir \nlm1$r.squared < lm2$r.squared\n\n[1] TRUE\n\n\nSo, \\(R^2\\) increases here even though X_ir is a completely irrelevant explanatory variable. Because of this, the \\(R^2\\) cannot be used as a criterion for model selection. Possible solutions are given by penalized criterions such as the so-called adjusted \\(R^2\\), \\(\\overline{R}^2,\\) defined as \\[\\begin{eqnarray*}\n  \\overline{R}^2&=&1-\\frac{\\frac{1}{n-K}\\sum_{i=1}^n\\hat{\\varepsilon}^2_i}{\\frac{1}{n-1}\\sum_{i=1}^n\\left(Y_i-\\bar{Y}\\right)^2}\\leq R^2%\\\\\n  %=\\dots=\n  %&=&1-\\frac{n-1}{n-K}\\left(1-R^2\\right)\\quad{\\small\\text{(since $1-R^2=(\\sum_i\\hat\\varepsilon_i^2)/(\\sum_i(Y_i-\\bar{Y}))$)}}\\\\\n  %&=&1-\\frac{n-1}{n-K}+\\frac{n-1}{n-K}R^2\\quad+\\frac{K-1}{n-K}R^2-\\frac{K-1}{n-K}R^2\\\\\n  %&=&1-\\frac{n-1}{n-K}+R^2\\quad+\\frac{K-1}{n-K}R^2\\\\\n  %&=&-\\frac{K-1}{n-K}+R^2\\quad+\\frac{K-1}{n-K}R^2\\\\\n  %&=&R^2-\\underbrace{\\frac{K-1}{n-K}\\left(1-R^2\\right)}_{\\geq 0\\;\\text{and}\\;\\leq(K-1)/(n-K)}\\;\\leq\\;R^2\n\\end{eqnarray*}\\] The adjustment is in terms of the degrees of freedom \\(n-K\\)."
  },
  {
    "objectID": "04-MultipleReg.html#method-of-moments-estimator",
    "href": "04-MultipleReg.html#method-of-moments-estimator",
    "title": "4  Multiple Linear Regression",
    "section": "4.4 Method of Moments Estimator",
    "text": "4.4 Method of Moments Estimator\nThe methods of moments estimator exploits the exogeneity assumption that \\(E(\\varepsilon_i|X_i)=0\\) for all \\(i=1,\\dots,n\\) (Assumption 2). Remember that \\(E(\\varepsilon_i|X_i)=0\\) implies that \\(E(X_{ik}\\varepsilon_i)=0\\) for all \\(i=1,\\dots,n\\) and all \\(k=1,\\dots,K\\). The fundamental idea behind “method of moments estimation” is to use the sample analogues of the population moment restrictions \\(E(X_{ik}\\varepsilon_i)=0\\), \\(k=1,\\dots,K,\\) for deriving the estimator: \\[\n\\begin{array}{c||c}\n\\text{$K$ population moment restrictions\\quad}&\\text{$K$ sample moment restrictions}\\\\[2ex]\n\\left.\\begin{array}{c}\nE(\\varepsilon_i)=0\\\\\nE(X_{i2}\\varepsilon_i)=0\\\\\n\\vdots\\\\\nE(X_{iK}\\varepsilon_i)=0\n\\end{array}\n\\right\\}\\Leftrightarrow E(X_i\\varepsilon_i)=\\underset{(K\\times 1)}{0} &\n\\left.\\begin{array}{c}\n\\displaystyle\n\\frac{1}{n}\\sum_{i=1}^n\\hat\\varepsilon_i=0\\\\\n\\displaystyle\n\\frac{1}{n}\\sum_{i=1}^nX_{i2}\\hat\\varepsilon_i=0\\\\\n\\vdots\\\\\n\\displaystyle\n\\frac{1}{n}\\sum_{i=1}^nX_{iK}\\hat\\varepsilon_i=0\\\\\n\\end{array}\n\\right\\}\\Leftrightarrow \\displaystyle\\frac{1}{n}\\sum_{i=1}^nX_i\\hat\\varepsilon_i=\\underset{(K\\times 1)}{0}\n\\end{array}\n\\]"
  },
  {
    "objectID": "05-Small-Sample-Inference.html",
    "href": "05-Small-Sample-Inference.html",
    "title": "5  Small Sample Inference",
    "section": "",
    "text": "The content of this chapter is very much inspired by the book by Hayashi (2000).\nIt’s is very hard to say when a sample size \\(n\\) is small. Often people say something like \\(n<30\\) means small samples and \\(n\\geq 30\\) large samples, but this is, of course, only a very rough rule of thumb that may fail. The core issue with small sample sizes is that we cannot do inference using the central limit theorem. Thus we need rather strict assumptions on the distribution of the error term, in order to do exact inference in finite samples.\nExact inference: By “exact inference” we mean correct inference for each sample size \\(n\\). That is, no asymptotic \\((n\\to\\infty)\\) arguments will be used.\nAssumptions: Recall that we, in general, did not impose a complete distributional assumption on \\(\\varepsilon\\) in Assumption 4 (Chapter 4); the i.i.d. normal case in Assumption 4 was only one possible option. However, to do exact inference, the normality Assumption on the error terms is not a mere option, but a necessity. So for this chapter we assume that Assumptions 1-3 from Chapter 4 hold and that additionally the following assumption holds:\nAssumption 4\\(^\\boldsymbol{\\ast}\\): Error distribution: For small sample cases, we assume that the error terms are i.i.d. normal, i.e., \\(\\varepsilon_i\\overset{\\operatorname{i.i.d.}}{\\sim}\\mathcal{N}(0,\\sigma^2)\\) for all \\(i=1,\\dots,n\\) which leads to spherical errors. That is, \\[\n\\varepsilon\\sim\\mathcal{N}\\left(0,\\sigma^2I_n\\right),\n\\] where \\(\\varepsilon=(\\varepsilon_1,\\dots,\\varepsilon_n)'\\).\nThis result follows from noting that \\(\\hat\\beta_n=(X'X)^{-1}X'Y=\\beta+(X'X)^{-1}X'\\varepsilon\\) and because \\((X'X)^{-1}X'\\varepsilon\\) is just a linear combination of the normally distributed error terms \\(\\varepsilon\\) which, therefore, is again normally distributed, conditionally on \\(X\\). Note that the specific normal distribution depends on the observed realization of \\(X\\).\nRemark: The subscript \\(n\\) in \\(\\hat\\beta_n\\) is here only to emphasize that the distribution of \\(\\hat\\beta_n\\) depends on \\(n\\); we will, however, often simply write \\(\\hat\\beta\\)."
  },
  {
    "objectID": "05-Small-Sample-Inference.html#sec-testmultp",
    "href": "05-Small-Sample-Inference.html#sec-testmultp",
    "title": "5  Small Sample Inference",
    "section": "5.1 Hypothesis Tests about Multiple Parameters (F-Tests)",
    "text": "5.1 Hypothesis Tests about Multiple Parameters (F-Tests)\nLet us consider the following system of \\(q\\)-many null hypotheses: \\[\\begin{align*}\nH_0: \\underset{(q\\times K)}{R}\\underset{(K\\times 1)}{\\beta} - \\underset{(q\\times 1)}{r} = \\underset{(q\\times 1)}{0},\n\\end{align*}\\] where the \\((q \\times K)\\) matrix \\(R\\) and the \\(q\\)-vector \\(r=(r_{1},\\dots,r_{q})'\\) are chosen by the statistician to specify her/his null hypothesis about the unknown true parameter vector \\(\\beta\\). To make sure that there are no redundant equations, it is required that \\(\\operatorname{rank}(R)=q\\).\nWe must also specify the alternative against which we are testing the null hypothesis, for instance \\[\\begin{equation*}\nH_A: R\\beta -r \\neq 0\n\\end{equation*}\\]\nThe above multiple parameter hypotheses cover also the special case of single parameter hypothesis; for instance, by setting \\(R=(0,1,0\\dots,0)\\) and \\(r=0\\) one get’s \\[\\begin{equation*}\n\\begin{array}{ll}\nH_0:  & \\beta_{k}=0 \\\\\nH_A:  & \\beta_{k} \\ne 0 \\\\\n\\end{array}\n\\end{equation*}\\]\nUnder our assumptions (Assumptions 1 to 4\\(^\\ast\\)), we have that \\[\n(R\\hat\\beta_n-r)|X\\sim\\mathcal{N}\\left(R\\beta -r,RVar(\\hat\\beta_n|X)R'\\right).\n\\] So, the realizations of \\((R\\hat\\beta_n -r)|X\\) will scatter around the unknown \\((R\\beta -r)\\) in a non-systematical, Gaussian fashion. Therefore, if the null hypothesis is correct (i.e., \\((R\\beta-r)=0\\)), the realizations of \\((R\\hat\\beta_n-r)|X\\) scatter around the \\(q\\)-vector \\(0\\). If, however, the alternative hypothesis is correct (i.e., \\((R\\beta-r)=a\\neq 0\\)), the realizations of \\(R\\hat\\beta_n-r|X\\) scatter around the \\(q\\)-vector \\(a\\neq 0\\). So, under the alternative hypothesis, there will be a systematic location-shift of the \\(q\\)-dimensional random variable \\(R\\hat\\beta_n|X\\) away from \\(r\\) which we try to detect using statistical hypothesis testing.\n\n5.1.1 The Test Statistic and its Null Distribution\nThe fact that \\((R\\hat\\beta_n-r)\\in\\mathbb{R}^q\\) is a \\(q\\)-dimensional random variable makes it a little bothersome to use as a test-statistic. Fortunately, we can turn \\((R\\hat\\beta_n-r)\\) into a scalar-valued test statistic using the following quadratic form: \\[\nW=\\underbrace{(R\\hat\\beta_n -r)'}_{(1\\times q)}\\underbrace{[RVar(\\hat\\beta_n|X)R']^{-1}}_{(q\\times q)}\\underbrace{(R\\hat\\beta_n -r)}_{(q\\times 1)}\n\\] Note that the test statistic \\(W\\) is simply measuring the distance (it’s a weighted L2-distance of two vectors) between \\(R\\hat\\beta_n\\) and \\(r\\).\nUnder the null hypothesis (i.e., if the null hypothesis is true), \\(W\\) is just a sum of \\(q\\)-many independent squared standard normal random variables. Therefore, under the null hypothesis, \\(W\\) is chi-square distributed with \\(q\\) degrees of freedom (see Section 2.2.10.3), \\[\nW\\overset{H_0}{\\sim} \\chi^2_{(q)}.\n\\] Note that the distribution of \\(W\\) conditional on \\(X\\) does not depend on \\(X\\); i.e. \\(W|X\\overset{H_0}{\\sim}\\chi^2_{(q)},\\) but \\(\\chi^2_{(q)}\\) does here not depend on \\(X\\), thus we can write \\(W\\overset{H_0}{\\sim} \\chi^2_{(q)}.\\)\nUsually, we do not know \\(Var(\\hat\\beta_n|X)\\) , but need to estimate this quantity from the data. Unfortunately, in the small sample case, we can only deal with homoskedastic error terms. For truly exact finite sample inference, we need a variance estimator for which we can derive the exact small sample distribution. Therefore, we assume in Assumption 4\\(^*\\) spherical errors (i.e., \\(Var(\\varepsilon|X)=I_n\\sigma^2\\)) which yields that \\(Var(\\hat\\beta_n|X)=\\sigma^2(X'X)^{-1}\\), and where \\(\\sigma^2\\) can be estimated by the unbiased (\\(UB\\)) variance estimator\n\\[\ns_{UB}^2=(n-K)^{-1}\\sum_{i=1}^n\\hat\\varepsilon_i^2.\n\\]\nFrom the normality assumption in Assumption 4\\(^*\\), it follows then that \\[\n\\frac{(n-K)}{\\sigma^{2}}s_{UB}^2\\sim\\chi^2_{(n-K)}.\n\\tag{5.2}\\]\nThe \\(F\\) test statistic \\[\nF=(R\\hat\\beta_n -r)'[R(s_{UB}^2(X'X)^{-1})R']^{-1}(R\\hat\\beta_n -r)/q\n\\] takes into account the additional randomness due to the estimator \\(s_{UB}^2\\), which leads to the following exact null distribution of the \\(F\\) test \\[\nF\\overset{H_0}{\\sim} F_{(q,n-K)},\n\\tag{5.3}\\] where \\(F_{(q,n-K)}\\) denotes the \\(F\\)-distribution with \\(q\\) numerator and \\(n-K\\) denominator degrees of freedom. As in the case of \\(W\\), the distribution of \\(F\\) conditional on \\(X\\) does not depend on \\(X\\); i.e. \\(F|X\\overset{H_0}{\\sim}F_{(q,n-K)},\\) but \\(F_{(q,n-K)}\\) does here not depend on \\(X\\), thus we can write \\(F\\overset{H_0}{\\sim}F_{(q,n-K)}.\\)\nThe distributional statements in Equation 5.2 and Equation 5.3 are a little cumbersome to derive and we do not go into details here, but in case you’re interested you can find some more details in Chapter 1 of Hayashi (2000).\nBy contrast to \\(W\\), \\(F\\) is now a practically useful test statistic, and we can use the observed value \\(F_{\\text{obs}}\\) to measure the distance of our estimate \\(R\\hat\\beta_n\\) from value \\(r\\). Observed values, \\(F_{\\text{obs}}\\), that are “unusually large” under the null hypothesis, lead to a rejection of the null hypothesis. The null distribution \\(F_{(q,n-K)}\\) of \\(F\\) is used to judge what’s “unusually large” under the null hypothesis.\nThe F distribution: The F distribution is a ratio of two \\(\\chi^2\\) distributions. It has two parameters: the numerator degrees of freedom, and the denominator degrees of freedom. Each combination of the parameters yields a different F distribution. See Section 2.2.10.6 for more information on the \\(F\\) distribution."
  },
  {
    "objectID": "05-Small-Sample-Inference.html#ch:testingsinglep",
    "href": "05-Small-Sample-Inference.html#ch:testingsinglep",
    "title": "5  Small Sample Inference",
    "section": "5.2 Tests about One Parameter (t-Tests)",
    "text": "5.2 Tests about One Parameter (t-Tests)\nFor testing a hypothesis about only one parameter \\(\\beta_k\\), with \\(k=1,\\dots,K\\) \\[\\begin{equation*}\n\\begin{array}{ll}\nH_0: & \\beta_k=r\\\\\nH_A: & \\beta_k\\ne r\\\\\n\\end{array}\n\\end{equation*}\\] the \\((q\\times K)=(1\\times K)\\)-matrix \\(R\\) equals a row-vector of zeros but with a one as the \\(k\\)th element; e.g., for \\(k=2\\) we have \\(R=(0,1,0,\\dots,0).\\) Thus, the \\(F\\) test statistic simplifies to \\[\nF=\\frac{\\left(\\hat{\\beta}_k-r\\right)^2}{\\widehat{Var}(\\hat{\\beta}_k|X)},\n\\] where \\(\\widehat{Var}(\\hat{\\beta}_k|X)=s^2_{UB}[(X'X)^{-1}]_{kk}.\\)\nTaking square roots yields the \\(t\\) test statistic \\[\nt=\\frac{\\hat{\\beta}_k-r}{\\widehat{\\operatorname{SE}}(\\hat{\\beta}_k|X)},\n\\] where \\(\\widehat{\\operatorname{SE}}(\\hat{\\beta}_k|X)=s_{UB}[(X'X)^{-1/2}]_{kk}.\\)\nUnder the null hypothesis, the \\(t\\) test statistic is \\(t\\)-distributed with \\(n-K\\) degrees of freedom \\[\nt\\overset{H_0}{\\sim}t_{(n-K)}.\n\\] Thus the \\(t\\)-distribution with \\(n-K\\) degrees of freedom is the appropriate distribution to judge whether or not an observed value \\(t_{obs}\\) of the test statistic is unusually small or large under the null hypothesis.\nNote: All commonly used statistical software packages report \\(t\\)-tests testing the null hypothesis \\(H_0:\\beta_k=0\\), i.e., with \\(r=0\\). This means to test the null hypothesis that \\(X_k\\) has “no (linear) effect” on \\(Y\\).\nThe following plot illustrates that as the degrees of freedom increase, the shape of the \\(t\\) distribution comes closer to that of a standard normal bell curve. Already for \\(25\\) degrees of freedom we find little difference to the standard normal density. In case of small degrees of freedom values, we find the distribution to have heavier tails than a standard normal."
  },
  {
    "objectID": "05-Small-Sample-Inference.html#testtheory",
    "href": "05-Small-Sample-Inference.html#testtheory",
    "title": "5  Small Sample Inference",
    "section": "5.3 Testtheory",
    "text": "5.3 Testtheory\n\n5.3.1 Significance Level \\(\\alpha\\)\nTo actually test the null hypothesis (e.g., \\(H_0\\): \\(R\\beta-r=0\\) or \\(H_0\\): \\(\\beta_k=0\\)), we need to have a decision rule on when we will reject or not reject the null hypothesis. This amounts to deciding on a probability with which we are comfortable with committing a Type I error (\\(\\alpha\\)-error): rejecting the null hypothesis when it is in fact true. The probability of such a Type I error shall be bounded from above by a (small) significance level \\(\\alpha\\), that is \\[\nP(\\text{reject } H_0| H_0\\text{ is true})=P(\\text{Type I Error})=\\alpha\n\\] For a given significance level (e.g., \\(\\alpha=0.05\\)) and a given alternative hypothesis, we can divide the range of all possible values of the test statistic (i.e., \\(\\mathbb{R}\\) since both \\(t\\in\\mathbb{R}\\) and \\(F\\in\\mathbb{R}\\)) into a rejection region and a non-rejection region by using critical values derived from the distribution of the test statistic under the null hypothesis. We can do this because the test statistics \\(t\\) and \\(F\\) have known distributions under the null hypothesis (\\(t\\overset{H_0}{\\sim}t_{n-K}\\) and \\(F\\overset{H_0}{\\sim}F_{(q,n-K)}\\)).\nIndeed, under Assumption 4\\(^\\ast\\), we know the exact null distributions for every sample size \\(n\\). Having decided on the rejection and non-rejection regions, we only need to check whether the observed (obs) sample values \\(t_{obs}\\) or \\(F_{obs}\\) of the test statistics \\(t\\) or \\(F\\) are either in the rejection or in the non-rejection region to either rejection the null hypothesis or not to rejection the null hypothesis.\nNon-conservative versus conservative tests: Since the test statistics \\(F\\) and \\(t\\) are continuous random variables of which we know the exact distributions (under Assumptions 1-4\\(^\\ast\\)), we can find critical values such that \\[\nP(\\text{Type I Error})=\\alpha\n\\] We call such tests “non-conservative” since the probability of a type I error equals the significance level \\(\\alpha\\). Test statistics with \\[\nP(\\text{Type I Error})<\\alpha\n\\] are called conservative test statistics; they lead to valid inferences, but will detect a correct violation of the null hypothesis less often than a non-conservative test. A test statistic with \\(P(\\text{Type I Error})>\\alpha\\) leads to invalid inferences!\n\n\n5.3.2 Critical Values\n\nThe \\(F\\)-Test\nThe critical value \\(c_{1-\\alpha}>0\\) defines the\n\nrejection region, \\(]c_{1-\\alpha},\\infty[\\), and\nnon-rejection region, \\(]0,c_{1-\\alpha}]\\)\n\nwhich together divide the range of test-statistic values (here \\(\\mathbb{R}^+\\) since \\(F\\in\\mathbb{R}^+\\)) for a given significance level \\(\\alpha\\in(0,1)\\), such that \\[\nP(\\text{Type I Error})=P_{H_0}\\Big(F\\in]c_{1-\\alpha},\\infty[\\Big)=\\alpha,\n\\] where \\(c_{1-\\alpha}\\) is here the \\((1-\\alpha)\\) quantile of the \\(F\\)-distribution with \\((q,n-K)\\) degrees of freedom, and where \\(P_{H_0}\\) means that we compute the probability under the assumption that \\(H_0\\) is true.\n\n\n\n\n\n\n\n\n\nThe rejection region: The rejection region describes a range of values of the test statistic \\(F\\) which we rarely see if the null hypothesis is true (only in at most \\(\\alpha \\cdot 100\\%\\) cases). If the observed value of the test statistic, \\(F_{\\text{obs}}\\), falls in this region, we will reject the null hypothesis and accept Type I error rate of \\(\\alpha\\).\nThe non-rejection region: The non-rejection region describes a range of values of the test statistic \\(F\\) which we expect to see (in \\((1-\\alpha) \\cdot 100\\%\\) cases) if the null hypothesis is true. If the observed value of the test statistic, \\(F_{\\text{obs}}\\) falls in this region, we will not reject the null hypothesis.\nCaution: Not rejecting the null hypothesis does not mean that we can conclude that the null hypothesis is true. We only had no sufficiently strong evidence against the null hypothesis. A violation of the null hypothesis, for instance \\(R\\beta -r=a\\neq 0\\), may simply be too small (too small \\(a\\) value) to stand out from the estimation errors (measured by the standard error) in \\(\\hat\\beta_k.\\)\nFortunately, you do not need to read old-school distribution tables to find the critical value \\(c_{1-\\alpha}\\), but can simply use R\n\ndf1   <- 9    # numerator df\ndf2   <- 120  # denominator df\nalpha <- 0.05 # significance level\n## Critical value:\ncrit_value <- qf(p = 1-alpha, df1 = df1, df2 = df2)\ncrit_value\n\n[1] 1.958763\n\n\nChanging the significance level from \\(\\alpha=0.05\\) to \\(\\alpha=0.01\\) makes the critical value \\(c_{1-\\alpha}\\) larger and, therefore, the rejection region smaller (fewer Type I errors)\n\nalpha <- 0.01\n## Critical value:\ncrit_value <- qf(p = 1-alpha, df1 = df1, df2 = df2)\ncrit_value\n\n[1] 2.558574\n\n\n\n\nThe \\(t\\)-Test\nIn case of the \\(t\\)-test, we need to differentiate between two-sided and one-sided testing.\n\nTwo-Sided \\(t\\)-Test\nTwo-sided hypothesis: \\[\\begin{equation*}\n\\begin{array}{ll}\nH_0: & \\beta_k=r \\\\\nH_A: & \\beta_k\\ne r\n\\end{array}\n\\end{equation*}\\] In case of a two-sided \\(t\\)-test, we reject the null hypothesis if the observed realization of the \\(t\\)-test, \\(t_{obs}\\), is “far away” from zero either by being sufficiently smaller or greater than \\(r\\). The corresponding two-sided critical values are denoted by \\(-c_{1-\\alpha/2}=c_{\\alpha/2}<0\\) and \\(c_{1-\\alpha/2}>0\\), where \\(c_{1-\\alpha/2}>0\\) is the \\((1-\\alpha/2)\\) quantile of the \\(t\\)-distribution with \\((n-K)\\) degrees of freedom, and where \\(-c_{1-\\alpha/2}=c_{\\alpha/2}\\) due to the symmetry of the \\(t\\)-distribution. These critical values defines the following rejection and the non-rejection regions \\[\\begin{align*}\n\\text{rejection region:}&\\hspace{1cm}]-\\infty,c_{\\alpha/2}[\\;\\;\\cup\\;\\;]c_{1-\\alpha/2}, \\infty[\\\\\n\\text{non-rejection region:}&\\hspace{1cm}[c_{\\alpha/2},c_{1-\\alpha/2}].\n\\end{align*}\\] For this rejection region it holds true that \\[\nP(\\text{Type I Error})=P_{H_0}\\Big(t\\in\\;]-\\infty,c_{\\alpha/2}[\\;\\;\\cup\\;\\;]c_{1-\\alpha/2}, \\infty[\\Big)=\\alpha.\n\\]\n\n\n\n\n\n\n\n\n\n\n\nOne-Sided \\(t\\)-Test\nOne-sided hypothesis: \\[\\begin{equation*}\n\\begin{array}{lll}\n&H_0: & \\beta_k =r\\\\\n&H_A: & \\beta_k >r\\\\\n(\\text{or}&H_A: & \\beta_k< r)\n\\end{array}\n\\end{equation*}\\] In case of a one-sided \\(t\\)-test, we will reject the null if \\(t_{obs}\\) is sufficiently “far away” from zero in the relevant direction of \\(H_A\\). The corresponding critical value is either \\(-c_{1-\\alpha}\\) (\\(H_A:\\beta_k< r\\)) or \\(c_{1-\\alpha}\\) (\\(H_A:\\beta_k> r\\)), where \\(c_{1-\\alpha}\\) is the \\((1-\\alpha)\\) quantile of the \\(t\\)-distribution with \\((n-K)\\) degrees of freedom, and where \\(-c_{1-\\alpha}=c_{\\alpha}\\) due to the symmetry of the \\(t\\)-distribution. The critical value \\(c_{1-\\alpha}\\) defines the following rejection and the non-rejection regions:\nFor \\(H_0: \\beta_k=0\\) versus\\(H_A: \\beta_k < 0\\): \\[\\begin{align*}\n\\text{rejection region:}   &\\hspace{2cm}]-\\infty,c_{\\alpha}[ \\\\\n\\text{non-rejection region:}&\\hspace{2cm}[c_{\\alpha},\\infty[\n\\end{align*}\\] such that \\[\nP(\\text{Type I Error})=P_{H_0}\\Big(t\\in\\;]-\\infty,c_{\\alpha}[\\Big)=\\alpha.\n\\]\nFor \\(H_0: \\beta_k=0\\)versus\\(H_A: \\beta_k > 0\\): \\[\\begin{align*}\n\\text{rejection region:}&\\hspace{1cm}]c_{1-\\alpha}, \\infty[\\\\\n\\text{non-rejection region:}&\\hspace{1cm}]-\\infty,c_{1-\\alpha}]\n\\end{align*}\\] such that \\[\nP(\\text{Type I Error})=P_{H_0}\\Big(t\\in\\;]c_{1-\\alpha}, \\infty[\\Big)=\\alpha.\n\\]\n\n\n\n\n\n\n\n\n\nFortunately, you do not need to read old-school distribution tables to find the critical values, but you can simply use R\n\ndf    <- 16   # degrees of freedom \nalpha <- 0.05 # significance level\n## One-sided critical value (= (1-alpha) quantile):\nc_oneSided <- qt(p = 1-alpha, df = df)\nc_oneSided\n\n[1] 1.745884\n\n## Two-sided critical value (= (1-alpha/2) quantile):\nc_twoSided <- qt(p = 1-alpha/2, df = df)\n## lower critical value\n-c_twoSided\n\n[1] -2.119905\n\n## upper critical value\nc_twoSided\n\n[1] 2.119905\n\n\n\n\n\n\n5.3.3 Type II Error and Power\nA Type II error is the mistake of not rejecting the null hypothesis when in fact it should have been rejected. The probability of making a Type II error equals one minus the probability of correctly rejecting the null hypothesis (“Power”). For instance, in the case of using the \\(t\\)-test to test the null hypothesis \\(H_0: \\beta_k=0\\) versus the one-sided alternative hypothesis \\(H_A:\\beta_k>0\\)) we have that \\[\\begin{align*}\nP(\\text{Type II Error})\n&=P_{H_A}\\Big(t\\;\\in\\;\\overbrace{]-\\infty,c_{1-\\alpha}]}^{\\text{non-rejection region}}\\Big)\\\\\n&=1-\\underbrace{P_{H_A}\\Big(t\\;\\in\\;\\overbrace{]c_{1-\\alpha},\\infty[}^{\\text{rejection region}}\\Big)}_{\\text{\"Power\"}},\n\\end{align*}\\] where \\(P_{H_A}\\) means that we compute the probability under the assumption that \\(H_A\\) is true.\nThere is a trade off between the probability of making a Type I error and the probability of making a Type II error: a lower significance level \\(\\alpha\\), decreases \\(P(\\text{Type I Error})\\), but necessarily increases \\(P(\\text{Type II Error})\\) and vice versa. Ideally, we would have some sense of the costs of making each of these errors, and would choose our significance level to minimize these total costs. However, the costs are often difficult to know. Moreover, the probability of making a Type II error is usually impossible to compute, since we usually do not know the true distribution of \\(\\hat\\beta_k\\) under the alternative.\nFor illustration purposes, consider the case of a \\(t\\) test for a one-sided hypothesis \\[\\begin{equation*}\n\\begin{array}{ll}\nH_0:  & \\beta_k=0 \\\\\nH_A:  & \\beta_k>0,\n\\end{array}\n\\end{equation*}\\] where the true (usually unknown) parameter value is \\(\\beta_k=3\\) and where the true (usually also unknown) standard error is \\(\\operatorname{SE}(\\hat\\beta_k|X)=\\sqrt{\\sigma^2[(X'X)^{-1}]_{kk}}=1.5\\). Only with the knowledge about these usually unknown quantities, we can derive the distribution of the \\(t\\)-test statistic under the alternative hypothesis. The distribution of the \\(t\\)-test statistic becomes here a standard normal distribution, since we assume \\(\\operatorname{SE}(\\hat\\beta_k|X)=\\sqrt{\\sigma^2[(X'X)^{-1}]_{kk}}=1.5\\) to be a known quantity for some given sample size \\(n\\). (This completely unrealistic assumption is only used for illustrative purposes to explain the probability of making a Type II error and the power (i.e. \\(1-P(\\text{Type II Error})\\)).)\nUnder this setup, the distribution under the null hypothesis (i.e., if \\(\\beta_k=0\\) were true) is: \\[\nt=\\frac{\\hat\\beta_k-0}{\\sqrt{\\sigma^2[(X'X)^{-1}]_{kk}}}\\overset{H_0}{\\sim}\\mathcal{N}(0,1)\n\\] Likewise, the distribution under the alternative hypothesis (i.e., for the actual \\(\\beta_k=3\\)) is: \\[\\begin{align*}\nt=\\frac{\\hat\\beta_k-0}{\\sqrt{\\sigma^2[(X'X)^{-1}]_{kk}}}\n&=\\frac{\\hat\\beta_k+3-3-0}{\\sqrt{\\sigma^2[(X'X)^{-1}]_{kk}}}\\\\[2ex]\n&=\\underbrace{\\frac{\\hat\\beta_k-3}{\\sqrt{\\sigma^2[(X'X)^{-1}]_{kk}}}}_{\\sim \\mathcal{N}(0,1)}+\\underbrace{\\frac{3-0}{\\sqrt{\\sigma^2[(X'X)^{-1}]_{kk}}}}_{=\\Delta\\text{ (mean-shift)}}\\overset{H_A}{\\sim}\\mathcal{N}(\\Delta,1)\n\\end{align*}\\]\nSo, the mean-shift \\(\\Delta\\) depends on:\n\nThe value of \\(\\sqrt{\\sigma^2[(X'X)^{-1}]_{kk}}\\) (here \\(1.5\\)).\n\nThe difference between the actual parameter value \\((\\beta_k=3)\\) and the hypothetical parameter \\((r=0)\\) value under the null-hypothesis.\n\nThe following Graphic illustrates the probability of a type II error and the power for the case where \\(\\sqrt{\\sigma^2[(X'X)^{-1}]_{kk}}=1.5\\) such that \\(\\Delta=3/1.5=2\\).\n\n\n\n\n\n\n\n\n\n\n\n5.3.4 \\(p\\)-Value\nThe \\(p\\)-value of a test statistic is the significance level we would obtain if we took the sample value of the observed test statistic, \\(F_{\\text{obs}}\\) or \\(t_{\\text{obs}},\\) as the border between the rejection and non-rejection regions.\n\n\\(F\\)-test: \\(p=P_{H_0}(F\\geq F_{\\text{obs}})\\)\n\\(t\\)-test:\n\nTwo sided, i.e., \\(H_0:\\beta_k = r\\) vs. \\(H_A:\\beta_k\\neq r\\):  \\(p=2\\cdot\\min\\{P_{H_0}(t\\leq t_{\\text{obs}}),P_{H_0}(t\\geq t_{\\text{obs}})\\}=P_{H_0}(|t|>|t_{obs}|)\\)  The latter equality holds since the \\(t\\) distrbution is symmetric.\nOne sided, i.e., \\(H_0:\\beta_k \\leq r\\) vs. \\(H_A:\\beta_k> r\\):  \\(p=P_{H_0}(t\\geq t_{\\text{obs}})\\)\nOne sided, i.e., \\(H_0:\\beta_k \\geq r\\) vs. \\(H_A:\\beta_k< r\\):  \\(p=P_{H_0}(t\\leq t_{\\text{obs}})\\)\n\n\nPut another way, the \\(p\\)-value is the greatest significance level for which we just fail to reject the null. Therefore, the \\(p\\)-value is sometimes also called “marginal significance value”.\nIf the \\(p\\)-value is strictly smaller than the chosen significance level \\(\\alpha\\), we reject the null hypothesis."
  },
  {
    "objectID": "05-Small-Sample-Inference.html#sec-CIsmallsample",
    "href": "05-Small-Sample-Inference.html#sec-CIsmallsample",
    "title": "5  Small Sample Inference",
    "section": "5.4 Confidence Intervals",
    "text": "5.4 Confidence Intervals\nWe define a two-sided \\((1-\\alpha)\\cdot 100\\%\\) percent confidence interval for the deterministic (unknown) true \\(\\beta_k\\) as the random interval \\(\\operatorname{CI}_{k,1-\\alpha}\\) for which \\[\nP\\Big(\\beta_k\\in\\operatorname{CI}_{k,1-\\alpha}\\Big)\\geq 1-\\alpha.\n\\] Derivation of the random interval \\(\\operatorname{CI}_{k,1-\\alpha}\\):\nObserve that \\[\n\\frac{\\hat\\beta_k-\\beta_k}{\\widehat{\\operatorname{SE}}(\\hat\\beta_k|X)}\\sim t_{(n-K)}\n\\] Therefore, \\[\\begin{align*}\nP\\left(-t_{1-\\alpha/2,n-K}\\leq\\frac{\\hat\\beta_k-\\beta_k}{\\widehat{\\operatorname{SE}}(\\hat\\beta_k|X)}\\leq t_{1-\\alpha/2,n-K}\\right)=1-\\alpha,\n\\end{align*}\\] where \\(t_{1-\\alpha/2,n-K}\\) denotes the \\((1-\\alpha)\\) quantile of the \\(t\\)-distribution with \\(n-K\\) degrees of freedom. Next, we can do the following equivalent transformations \\[\\begin{align*}\nP\\left(-t_{1-\\alpha/2,n-K}\\leq\\frac{\\hat\\beta_k-\\beta_k}{\\widehat{\\operatorname{SE}}(\\hat\\beta_k|X)}\\leq t_{1-\\alpha/2,n-K}\\right)&=1-\\alpha\\\\\n\\Leftrightarrow P\\left(\\hat\\beta_k-t_{1-\\alpha/2,n-K}\\widehat{\\operatorname{SE}}(\\hat\\beta_k|X)\\leq \\beta_k\\leq\\hat\\beta_k +t_{1-\\alpha/2,n-K}\\widehat{\\operatorname{SE}}(\\hat\\beta_k|X)\\right)&=1-\\alpha\\\\\n\\Leftrightarrow P\\left(\\beta_k\\in\\underbrace{\\left[\\hat\\beta_k-t_{1-\\alpha/2,n-K}\\widehat{\\operatorname{SE}}(\\hat\\beta_k|X),\\;\\hat\\beta_k +t_{1-\\alpha/2,n-K}\\widehat{\\operatorname{SE}}(\\hat\\beta_k|X)\\right]}_{=:\\operatorname{CI}_{k,1-\\alpha}}\\right)&=1-\\alpha\n\\end{align*}\\] That is, the random interval \\[\n\\operatorname{CI}_{k,1-\\alpha}=\\left[\\hat\\beta_k-t_{1-\\alpha/2,n-K}\\widehat{\\operatorname{SE}}(\\hat\\beta_k|X),\\;\\hat\\beta_k +t_{1-\\alpha/2,n-K}\\widehat{\\operatorname{SE}}(\\hat\\beta_k|X)\\right]\n\\] is our \\((1-\\alpha)\\cdot 100\\%\\) percent confidence interval for \\(\\beta_k\\).\nInterpretation: The random interval \\(\\operatorname{CI}_{k,1-\\alpha}\\) for \\(\\beta_k\\) contains the true parameter value \\(\\beta_k\\) in \\((1-\\alpha)\\cdot 100\\%\\) cases of its realizations when considering infinitely many realizations. It’s best to take a look at dynamic viszualizations like this one:\n\nhttps://rpsychologist.com/d3/ci/\n\nUnfortunately, this “frequentist” interpretation is not a statement about a single given \\(\\operatorname{CI}_{k,1-\\alpha}\\) realization computed for a given data set. A given, realized \\(\\operatorname{CI}_{k,1-\\alpha}\\) will either contain the true parameter \\(\\beta_k\\) or not, and usually we do not know the answer. So, confidence intervals are quite hard to interpret. However, they are very well suited as a tool to visualize estimation uncertainties in different parameter estimators, for instance, across \\(\\hat\\beta_k\\), \\(k=1,\\dots,K\\)."
  },
  {
    "objectID": "05-Small-Sample-Inference.html#sec-PSSI",
    "href": "05-Small-Sample-Inference.html#sec-PSSI",
    "title": "5  Small Sample Inference",
    "section": "5.5 Monte Carlo Simulations",
    "text": "5.5 Monte Carlo Simulations\nLet’s check the above exact inference results using R and Monte Carlo simulations. First, we program a function myDataGenerator() which allows us to generate data from the following model, i.e., from the following fully specified data generating process: \\[\\begin{align*}\nY_i   &=\\beta_1+\\beta_2X_{i2}+\\beta_3X_{i3}+\\varepsilon_i,\\qquad i=1,\\dots,n\\\\\n\\beta &=(\\beta_1,\\beta_2,\\beta_3)'=(2,3,4)'\\\\\nX_{i2}&\\sim U[2,10]\\\\\nX_{i3}&\\sim U[12,22]\\\\\n\\varepsilon_i&\\sim\\mathcal{N}(0,3^2),\n\\end{align*}\\] where \\((Y_i,X_i)\\) is assumed i.i.d. across \\(i=1,\\dots,n\\). Below, in the codes, I use \\(n=10\\), but, of course, other sample sizes can be considered too.\nThe below function myDataGenerator() allows to sample new realizations of \\(Y_1,\\dots,Y_n\\) conditionally on a given data matrix \\(X\\). Moreover, you can provide your own values for the sample size \\(n\\) and for the parameter vector \\(\\beta=(\\beta_1,\\beta_2,\\beta_3)'\\).\n\n## Function to generate artificial data\n## If X=NULL: new X variables are generated\n## If the user gives X variables, \n## the sampling of new Y variables is conditionally on \n## the given X variables.\nmyDataGenerator <- function(n, beta, X=NULL){\n  if(is.null(X)){\n    X   <- cbind(rep(1, n), \n                 runif(n, 2, 10), \n                 runif(n,12, 22))\n  }\n  eps  <- rnorm(n, sd=3)\n  Y    <- X %*% beta + eps\n  data <- data.frame(\"Y\"=Y, \n                     \"X_1\"=X[,1], \"X_2\"=X[,2], \"X_3\"=X[,3])\n  ##\n  return(data)\n}\n\n\n## Small sample size\nn           <- 8           \n\n## Define a true beta vector\nbeta_true <- c(2,3,4)\n\n## Generate Y and X data \ntest_data     <- myDataGenerator(n = n, beta=beta_true)\n\n## Store the X data as 'X_cond'  \nX_cond        <- as.matrix(test_data[,-1]) # as matrix allows matrix multiplications\n\n## Generate new Y data conditionally on X            \ntest_data_X_cond <- myDataGenerator(n    = n, \n                                 beta = beta_true, \n                                 X    = X_cond)\n## compare\nround(head(test_data,     3), 2)    # New Y, new X\n\n       Y X_1  X_2   X_3\n1  95.07   1 2.92 20.68\n2 102.36   1 6.62 19.94\n3  87.36   1 8.71 15.76\n\nround(head(test_data_X_cond, 3), 2) # New Y, old X (conditionally on X)\n\n      Y X_1  X_2   X_3\n1 93.86   1 2.92 20.68\n2 99.37   1 6.62 19.94\n3 93.50   1 8.71 15.76\n\n\n\n5.5.1 Check: Distribution of \\(\\hat\\beta|X\\) vs Distribution of \\(\\hat\\beta\\)\nThe above data generating process fulfills Assumptions 1-4\\(^*\\). So, by theory, the estimators \\(\\hat\\beta_k|X\\), \\(k=1,\\dots,K=3\\), should be normal distributed conditionally on \\(X\\), \\[\n\\hat\\beta_k|X\\sim\\mathcal{N}(\\beta_k,\\sigma^2[(X'X)^{-1}]_{kk}),\n\\] where \\([(X'X)^{-1}]_{kk}\\) denotes the element in the \\(k\\)th row and \\(k\\)th column of the \\(K\\times K\\) matrix \\((X'X)^{-1}\\).\nIn order to check the effect of “conditioning on \\(X\\)”, let us focus on \\(\\hat\\beta_2\\) and use two different Monte Carlo simulations:\n\nGenerate B\\(=10000\\) realizations of \\(\\hat\\beta_2\\) conditionally on \\(X\\).\nGenerate B\\(=10000\\) realizations of \\(\\hat\\beta_2\\) unconditionally on \\(X\\).\n\nThen estimate the distributons from both Monte Carlo samples and compare them with the theoretical distribution \\(\\hat\\beta_2|X\\sim\\mathcal{N}(\\beta_k,\\sigma^2[(X'X)^{-1}]_{22})\\):\n\nset.seed(11100) # seed of the random number generator\n\n## A function to generate realizations of the estimator \\hat{beta}_2\n## conditionally or unconditionally on X:\nhatbeta2_sim_fun <- function(conditional, X = X_cond){\n      if(conditional == TRUE){\n            data     <- myDataGenerator(n = n, beta = beta_true, X = X)\n            lm_obj   <- lm(Y ~ X_2 + X_3, data = data)\n            hatbeta2 <- coef(lm_obj)[2]\n      }\n      if(conditional == FALSE){\n            data     <- myDataGenerator(n = n, beta = beta_true)\n            lm_obj   <- lm(Y ~ X_2 + X_3, data = data)\n            hatbeta2 <- coef(lm_obj)[2]\n      }\n  return(hatbeta2)\n}\n\n## Number of Monte Carlo replications\nB <- 10000\n\n## Draw realizations of \\hat{beta}_2\n## 1. Generate \\hat{beta}_2 realizations conditionally on X\nhatbeta2_sim_cond   <- replicate(B, hatbeta2_sim_fun(conditional = TRUE,  X = X_cond))\n## 2. Generate \\hat{beta}_2 realizations unconditionally on X\nhatbeta2_sim_uncond <- replicate(B, hatbeta2_sim_fun(conditional = FALSE))\n\n\n## Theoretical normal distribution of beta_hat_2 versus \n## estimated densities based on the two Monte Carlo samples\nlibrary(\"scales\")\n\n## true beta_2\nbeta_true_2     <- beta_true[2] \n## true standard deviation of the error term\nsigma           <- 3\n## true variance\nvar_true_beta_2 <- sigma^2 * diag(solve(t(X_cond) %*% X_cond))[2]\n\n## Plot\ncurve(expr = dnorm(x, mean = beta_true_2, sd=sqrt(var_true_beta_2)), \nxlab=\"\", ylab=\"\", col=gray(.2), lwd=3, lty=1, xlim=c(1,5), ylim=c(0,1.5))\nlines(density(hatbeta2_sim_cond, bw = bw.SJ(hatbeta2_sim_cond)), col=alpha(\"blue\",.5), lwd=3)\nlines(density(hatbeta2_sim_uncond, bw=bw.SJ(hatbeta2_sim_uncond)), col=alpha(\"red\",.5), lwd=3)\nlegend(\"topleft\", lty=c(1,1,1), lwd=c(3,3,3),\n     col=c(gray(.2), alpha(\"blue\",.45), alpha(\"red\",.5)), bty=\"n\", legend= \nc(expression(\"Theoretical Gaussian Density of\"~hat(beta)[2]~'|'~X), \n  expression(\"Empirical Density based on the 5000 MC realizations of\"~hat(beta)[2]~'|'~X),\n  expression(\"Empirical Density based on the 5000 MC realizations of\"~hat(beta)[2])))\n\n\n\n\nCore observations on the densities:\n\nThe empirical conditional distribution of \\(\\hat{\\beta}_2|X\\) matches with the theoretical conditional distribution of \\(\\hat{\\beta}_2|X\\).\nThe empirical unconditional distribution of \\(\\hat{\\beta}_2\\) does not match with the theoretical conditional distribution of \\(\\hat{\\beta}_2|X\\).\n\n\n\n5.5.2 Check: Variance of \\(\\hat\\beta|X\\) vs Variance of \\(\\hat\\beta\\)\nThe theoretical variance of \\(\\hat{\\beta}_2|X\\) is:\n\n\\(Var(\\hat{\\beta}_2|X)=\\sigma^2[(X'X)^{-1}]_{22}=\\) var_true_beta_2 \\(=\\) 0.428.\n\n\n\nThe Monte Carlo approximation to the true variance of \\(\\hat{\\beta}_2|X\\) is var(hatbeta2_sim_cond) \\(=\\) 0.43 and thus close to the theoretical counterpart.\nThe Monte Carlo approximation to the true variance of \\(\\hat{\\beta}_2\\) is var(hatbeta2_sim_uncond) \\(=\\) 0.355 and thus clearly different to the theoretical counterpart.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n5.5.3 Check: Testing Multiple Parameters\nIn the following, we do inference about multiple parameters. We test \\[\\begin{align*}\nH_0:\\;&\\beta_2=3\\quad\\text{and}\\quad\\beta_3=4\\\\\n\\text{versus}\\quad H_A:\\;&\\beta_2\\neq 3\\quad\\text{and/or}\\quad\\beta_3\\neq 4.\n\\end{align*}\\] Or equivalently \\[\\begin{align*}\nH_0:\\;&R\\beta -r = 0 \\\\\nH_A:\\;&R\\beta -r \\neq 0,\n\\end{align*}\\] where \\[\nR=\\left(\n\\begin{matrix}\n0&1&0\\\\\n0&0&1\\\\\n\\end{matrix}\\right)\\quad\\text{ and }\\quad\nr=\\left(\\begin{matrix}3\\\\4\\\\\\end{matrix}\\right).\n\\] The following R code can be used to test this hypothesis:\n\n## Library containing the function 'linearHyothesis()' \n## for testing multiple parameters \nsuppressMessages(library(\"car\")) \n## See ?linearHypothesis\n\n## Generate one Monte Carlo sample (under H0)\ndata   <- myDataGenerator(n = n, beta = beta_true)\n\n## Estimate the linear regression model parameters\nlm_obj <- lm(Y ~ X_2 + X_3, data = data)\n\n## Option 1:\ntest_result <- car::linearHypothesis(\n      model = lm_obj, \n      hypothesis.matrix = c(\"X_2=3\", \"X_3=4\"))   \ntest_result        \n\nLinear hypothesis test\n\nHypothesis:\nX_2 = 3\nX_3 = 4\n\nModel 1: restricted model\nModel 2: Y ~ X_2 + X_3\n\n  Res.Df    RSS Df Sum of Sq      F Pr(>F)\n1      7 22.178                           \n2      5 22.112  2  0.065545 0.0074 0.9926\n\n\nThe \\(p\\)-value \\(p=\\) 0.9926 is larger than the chosen significance level \\(\\alpha=0.05\\) thus we cannot reject the null hypothesis “\\(H_0:\\;\\beta_2=3\\) and \\(\\beta_3=4.\\)”\nThe following codes gives an alternative, equivalent way to compute the test result:\n\n## Option 2:\nR <- rbind(c(0,1,0),\n           c(0,0,1))\ncar::linearHypothesis(model = lm_obj, \n                      hypothesis.matrix = R, \n                      rhs = c(3,4))\n\nHere, we simulated data “under the null hypothesis” and thus it is not surpising that we cannot reject the null hypothesis at a significance level of, for instance, \\(\\alpha=0.05\\). However, in repeated samples we should nevertheless observe \\(\\alpha\\cdot 100\\%\\) type I errors (false rejections of \\(H_0\\)) under the null hypothesis. Let’s check the type I error rate using the following Monte Carlo simulation:\n\n## Let's generate 5000 F-test decisions and check \n## whether the empirical rate of type I errors is \n## close to the theoretical significance level. \nB               <- 5000 # MC replications\nF_test_pvalues  <- rep(NA, times=B)\n##\nfor(r in 1:B){\n  ## generate new data (under H0)\n  MC_data <- myDataGenerator(n = n, beta = beta_true)\n  ## estimate \n  lm_obj  <- lm(Y ~ X_2 + X_3, data = MC_data)\n  ## compute test and p-value\n  p       <- linearHypothesis(lm_obj, c(\"X_2=3\", \"X_3=4\"))$`Pr(>F)`[2]\n  ## save the p-value\n  F_test_pvalues[r] <- p\n}\n##\nsignif_level <-  0.05\nrejections   <- F_test_pvalues[F_test_pvalues < signif_level]\nround(length(rejections)/B, 4)\n\n[1] 0.051\n\n## \nsignif_level <-  0.01\nrejections   <- F_test_pvalues[F_test_pvalues < signif_level]\nround(length(rejections)/B, 4)\n\n[1] 0.0108\n\n\nNote that this is actually a very strong result.\n\nFirst, we correctly control for the Type I error rate since the empirical type I error rate is not larger than the chosen significance level \\(\\alpha\\) (the nominal Type I error rate).\nSecond, the test is not conservative since the empirical type I error rate essentially matches the chosen significance level \\(\\alpha\\) (the nominal Type I error rate).\n\nIn fact, if we would increase the number of Monte Carlo repetitions, the empirical type I error rate would converge to the nominal Type I error rate \\(\\alpha\\) due to the law of large numbers.\n\nLast but not least: It works unconditionally on \\(X\\) since the distribution of the \\(F\\) statistic does not depend on \\(X\\). (Thus is also works conditionally on \\(X\\) and you may check this at home.)\n\nNext, we check how well the \\(F\\) test detects certain violations of the null hypothesis. We do this by using the same data generating process, but by testing the following incorrect (red) null hypothesis: \\[\\begin{align*}\nH_0:\\;&{\\color{red}\\beta_2=4}\\quad\\text{and}\\quad\\beta_3=4\\\\\nH_A:\\;&\\beta_2\\neq 4\\quad\\text{and/or}\\quad\\beta_3\\neq 4\n\\end{align*}\\]\n\nB               <- 5000 # MC replications\nF_test_pvalues  <- rep(NA, times=B)\n##\nfor(r in 1:B){\n  ## generate new data \n  MC_data <- myDataGenerator(n    = n, beta = beta_true)\n  ## estimate \n  lm_obj  <- lm(Y ~ X_2 + X_3, data = MC_data)\n  ## compute test and p-value (for a false H0)\n  p       <- linearHypothesis(lm_obj, c(\"X_2=4\", \"X_3=4\"))$`Pr(>F)`[2]\n  ## save the p-value\n  F_test_pvalues[r] <- p\n}\n##\nsignif_level <-  0.05\nrejections   <- F_test_pvalues[F_test_pvalues < signif_level]\n\n## Rate of H0 rejections:\nlength(rejections)/B\n\n[1] 0.2534\n\n\nWe can now correctly reject the false null hypothesis in approximately 25.34 % of all Monte Carlo replications.\nCaution: This also means that we are not able to detect the violation of the null hypothesis in 74.66 % of cases. Therefore, we can never use an insignificant test result (\\(p\\)-value \\(\\geq\\alpha\\)) as a confirmation of the null hypothesis. Obviously, there are Type II error events (false none rejections), but since we typically do not know the distribution of the test statistic under the alternative hypothesis, we cannot control this Type II error rate. We can only control the Type I error rate by using a small significance level \\(\\alpha\\).\nMoreover, note that the \\(F\\) test is not informative about which part of the null hypothesis (\\(\\beta_2=4\\) and/or \\(\\beta_3=4\\)) is violated. We only get the information that at least one of the multiple parameter hypotheses is violated.\n\n\n5.5.4 Dualty of Confidence Intervals and Hypothesis Tests\nConfidence intervals can be computed using R as following:\n\n## Significance level\nsignif_level <- 0.05\n## Confidence level\nconf_level   <- 1 - signif_level\n\n## 95% CI for beta_2\nconfint(lm_obj, parm = \"X_2\", level = conf_level)\n\n       2.5 %   97.5 %\nX_2 4.328595 6.747891\n\n## 95% CI for beta_3 \nconfint(lm_obj, parm = \"X_3\", level = conf_level)\n\n       2.5 %   97.5 %\nX_3 2.705582 4.190266\n\n\nWe can use these two-sided confidence intervals to conduct hypotheses tests. This property of confidence intervals is called the duality of confidence intervals and hypothesis tests.\nFor instance, when testing the null hypothesis \\[\\begin{align*}\nH_0:&\\beta_3=4\\\\\n\\text{versus}\\quad H_A: &\\beta_3\\neq 4\n\\end{align*}\\] we can check whether the confidence interval \\(\\operatorname{CI}_{1-\\alpha}\\) contains the hypothetical value \\(4\\) or not.\n\nIn case of \\(4\\in \\operatorname{CI}_{1-\\alpha}\\), we cannot reject the null hypothesis.\nIn case of \\(4\\not\\in \\operatorname{CI}_{1-\\alpha}\\), we reject the null hypothesis.\n\nIf the Assumption 1-4\\(^\\ast\\) hold true, then \\(\\operatorname{CI}_{1-\\alpha}\\) is an exact confidence interval. That is, under the null hypothesis, it falsely rejects the null hypothesis in only \\(\\alpha\\cdot 100\\%\\) of resamplings. Let’s check this in the following Monte Carlo simulation:\n\nsignif_level <- 0.05\nconfint_m    <- matrix(NA, nrow=2, ncol=B)\n##\nfor(r in 1:B){\n  ## generate new data \n  MC_data <- myDataGenerator(n = n, beta = beta_true)\n  ## estimate\n  lm_obj  <- lm(Y ~ X_2 + X_3, data = MC_data)\n  ## compute confidence interval \n  CI <- confint(lm_obj, parm=\"X_2\", level=1-signif_level)\n  ## save confidence interval\n  confint_m[,r] <- CI\n}\n## check whether true parameter is inside the CI\ninside_CI  <- confint_m[1,] <= beta_true_2 & \n                beta_true_2 <= confint_m[2,]\n\n## CI-lower, CI-upper, beta_true_2 inside?\nhead(cbind(t(confint_m), inside_CI))\n\n                       inside_CI\n[1,] 2.112011 4.324384         1\n[2,] 1.799873 3.583575         1\n[3,] 1.079170 3.578387         1\n[4,] 1.060780 3.772007         1\n[5,] 1.855253 4.479890         1\n[6,] 1.205334 4.216992         1\n\n\nThe following code computes the relative frequency of confidence intervals not containing the true parameter value \\((\\beta_2=3)\\):\n\nround(length(inside_CI[inside_CI == FALSE])/B, 4)\n\n[1] 0.048\n\n\nThat’s good! The relative frequency is basically equal to the chosen \\(\\alpha=0.05\\) value.\nNext, we visualize a sample of nCIs <- 100 realizations of the random confidence interval:\n\nnCIs <- 100\nplot(x=0,y=0,type=\"n\",xlim=c(0,nCIs),ylim=range(confint_m[,1:nCIs]),\n     ylab=\"\", xlab=\"Resamplings\", main=\"Confidence Intervals\")\nfor(r in 1:nCIs){\n  if(inside_CI[r]==TRUE){\n      lines(x=c(r,r), y=c(confint_m[1,r], confint_m[2,r]), \n            lwd=2, col=gray(.5,.5))\n  }else{\n      lines(x=c(r,r), y=c(confint_m[1,r], confint_m[2,r]), \n            lwd=2, col=\"darkred\")\n    }\n}\naxis(4, at=beta_true_2, labels = expression(beta[2]))\nabline(h=beta_true_2)\n\n\n\n\n\n\n\n\nAs expected, only about \\(\\alpha\\cdot 100\\%=5\\%\\) of all confidence intervals do not contain the true parameter value \\(\\beta_2=3\\), but about \\((1-\\alpha)\\cdot 100\\%=95\\%\\) of all confidence intervals contain the true parameter value \\(\\beta_2=3\\)."
  },
  {
    "objectID": "06-Asymptotics.html",
    "href": "06-Asymptotics.html",
    "title": "6  Large Sample Inference",
    "section": "",
    "text": "The content of this chapter is very much inspired by the book by Hayashi (2000)."
  },
  {
    "objectID": "06-Asymptotics.html#tools-for-asymptotic-statistics",
    "href": "06-Asymptotics.html#tools-for-asymptotic-statistics",
    "title": "6  Large Sample Inference",
    "section": "6.1 Tools for Asymptotic Statistics",
    "text": "6.1 Tools for Asymptotic Statistics\n\n6.1.1 Modes of Convergence\nIn the following we will discuss the four most important convergence concepts for sequences of random variables \\((z_1,z_2,\\dots,z_n)\\) shortly denoted by \\(\\{z_n\\}\\). Non-random scalars (or vectors or matrices) will be denoted by Greek letters such as \\(\\alpha\\).\n\n\n\n\n\nFour Important Modes of Convergence\n\nDefinition 6.1 (Convergence in Probability) \nA sequence of random scalars \\(\\{z_n\\}\\) converges in probability to a constant (non-random) \\(\\alpha\\) if, for any (arbitrarily small) \\(\\varepsilon>0\\), \\[\\begin{eqnarray*}\n  \\lim_{n\\to\\infty} P\\left(|z_n-\\alpha|>\\varepsilon\\right)=0.\n\\end{eqnarray*}\\] We write: \\(\\operatorname{plim}_{n\\to\\infty}z_n=\\alpha\\), or \\(z_n\\to_{p}\\alpha\\). Convergence in probability of a sequence of random vectors (or matrices) \\(\\{z_n\\}\\) to a constant vector (or matrix) \\(\\alpha\\) requires element-wise convergence in probability.\n\n\nDefinition 6.2 (Almost Sure Convergence) \nA sequence of random scalars \\(\\{z_n\\}\\) converges almost surely to a constant (non-random) \\(\\alpha\\) if \\[\\begin{eqnarray*}\nP\\left(\\lim_{n\\to\\infty}z_n=\\alpha\\right)=1.\n\\end{eqnarray*}\\] We write: \\(z_n\\to_{as}\\alpha\\). Almost sure convergence of a sequence of random vectors (or matrices) \\(\\{z_n\\}\\) to a constant vector (or matrix) \\(\\alpha\\) requires element-wise almost sure convergence.\n\nAlmost sure convergence is (usually) rather hard to derive, since the probability is about an event concerning an infinite sequence. Fortunately, however, there are established strong laws of large numbers that we can use for showing almost sure convergence.\n\nDefinition 6.3 (Convergence in Mean Square) \nA sequence of random scalars \\(\\{z_n\\}\\) converges in mean square (or in quadratic mean) to a constant (non-random) \\(\\alpha\\) if \\[\\begin{eqnarray*}\n  \\lim_{n\\to\\infty}E\\left((z_n-\\alpha)^2\\right)=0\n\\end{eqnarray*}\\] We write: \\(z_n\\to_{ms}\\alpha\\). If \\(z_n\\) is an estimator (e.g., \\(z_n=\\hat\\beta_{k,n}\\)) the expression \\(E\\left((z_n-\\alpha)^2\\right)\\) is termed the mean squared error: \\(\\text{MSE}(z_n)=E\\left((z_n-\\alpha)^2\\right)\\). Mean square convergence of a sequence of random vectors (or matrices) \\(\\{z_n\\}\\) to a deterministic vector (or matrix) \\(\\alpha\\) requires element-wise mean square convergence.\n\n\n\nDefinition 6.4 (Convergence in Distribution) \nLet \\(F_n\\) be the cumulative distribution function (cdf) of \\(z_n\\) and \\(F\\) the cdf of \\(z\\). A sequence of random scalars \\(\\{z_n\\}\\) converges in distribution to a random scalar \\(z\\) if for all \\(t\\) such that \\(F(t)\\) is continuous at \\(t\\), \\[\\begin{eqnarray*}\n  \\lim_{n\\to\\infty}F_n(t)=F(t).\n\\end{eqnarray*}\\] We write: \\(z_n\\to_{d} z\\) and call \\(F\\) the asymptotic (or limit) distribution of \\(z_n\\). Sometimes you will see statements like \\(z_n\\to_{d} N(0,1)\\) or \\(z_n\\overset{a}{\\sim}N(0,1)\\), which should be read as \\(z_n\\to_{d} z\\), where \\(z\\sim N(0,1)\\).\n\nA stochastic sequence \\(\\{z_n\\}\\) can also convergence in distribution to a deterministic scalar \\(\\alpha\\). In this case \\(\\alpha\\) is treated as a degenerated random variable with cdf\n\\[\nF_\\alpha(t)=\\left\\{\\begin{matrix}0&\\text{if}\\;\\;t<\\alpha\\\\ 1&\\text{if}\\;\\;t\\geq\\alpha\\end{matrix}\\right.\n\\]\n\nDefinition 6.5 (Multivariate Convergence in Distribution) Let \\(z_n,z\\in\\mathbb{R}^K\\) be \\(K\\)-dimensional random variables, then\n\\[\nz_n\\to_{d} z\\text{\\quad if and only if \\quad}\\lambda'z_n\\to_{d}\\lambda'z\n\\]\nfor any \\(\\lambda\\in\\mathbb{R}^K\\).\n\nThis statement is known as the Cramer Wold Device. It is needed since element-wise convergence in distribution does generally not imply convergence of the joint distribution of \\(z_n\\) to the joint distribution of \\(z\\); except, if all elements are independent from each other.\n\n\n\nRelations among Modes of Convergence\n\nLemma 6.1 (Relationship among the four modes of convergence) The following relationships hold:\n\n\\(z_n\\to_{ms}\\alpha\\Rightarrow z_n\\to_{p}\\alpha.\\)\n\\(z_n\\to_{as}\\alpha\\Rightarrow z_n\\to_{p}\\alpha.\\)\n\\(z_n\\to_{d}\\alpha\\Leftrightarrow z_n\\to_{p}\\alpha.\\) I.e., if the limiting random variable is a constant (i.e., a degenerated random variable), then convergence in distribution is equivalent to convergence in probability.\n\n\nProofs can be found, e.g., here: https://www.statlect.com/asymptotic-theory/relations-among-modes-of-convergence\n\n\n6.1.2 Continuous Mapping Theorem (CMT)\n\nLemma 6.2 (Preservation of convergence for continuous transformations (or “continuous mapping theorem (CMT)”)) Suppose \\(\\{z_n\\}\\) is a stochastic sequence of random scalars, vectors, or matrices and that \\(a(\\cdot)\\) is a continuous function that does not depended on \\(n\\). Then\n\n\\(z_n\\to_{p}\\alpha\\Rightarrow a(z_n)\\to_{p} a(\\alpha)\\)\n\\(z_n\\to_{as} \\alpha\\Rightarrow a(z_n)\\to_{as} a(\\alpha)\\)\n\\(z_n\\to_{d}\\alpha\\Rightarrow a(z_n)\\to_{d} a(\\alpha)\\)\n\n\nProof can be found, e.g., in Asymptotic Statistics, van der Vaart (1998), Theorem 2.3. Or here: https://www.statlect.com/asymptotic-theory/continuous-mapping-theorem\nNote: The CMT does not hold for m.s.-convergence except for the case where \\(a(.)\\) is linear.\n \nExamples: As a consequence of the CMT (Lemma 6.2) we have that the usual arithmetic operations preserve convergence in probability (equivalently for almost sure convergence and convergence in distribution):\n\nIf \\(x_n\\to_{p} \\beta\\) and \\(y_n\\to_{p} \\gamma\\) then \\(x_n+y_n\\to_{p} \\beta+\\gamma\\)\nIf \\(x_n\\to_{p} \\beta\\) and \\(y_n\\to_{p} \\gamma\\) then \\(x_n\\cdot y_n\\to_{p} \\beta\\cdot\\gamma\\)\nIf \\(x_n\\to_{p} \\beta\\) and \\(y_n\\to_{p} \\gamma\\) then \\(x_n/y_n\\to_{p} \\beta/\\gamma\\), provided that \\(\\gamma\\neq 0\\)\nIf \\(X_n'X_n\\to_{p} \\Sigma_{X'X}\\) then \\((X_n'X_n)^{-1}\\to_{p} \\Sigma_{X'X}^{-1}\\), provided \\(\\Sigma_{X'X}\\) is a nonsingular matrix.\n\n\n\n\n6.1.3 Slutsky Theorem\nThe following results are concerned with combinations of convergence in probability and convergence in distribution. These are particularly important for the derivation of the asymptotic distribution of estimators.\n\nLemma 6.3 (Slutsky Theorem) Let \\(x_n\\) and \\(y_n\\) denote sequences of random scalars or vectors and let \\(A_n\\) denote a sequences of random matrices. Moreover, \\(\\alpha\\) and \\(A\\) are deterministic limits of appropriate dimensions and \\(x\\) is a random limit of appropriate dimension.\n\nIf \\(x_n\\to_{d} x\\)and \\(y_n\\to_{p} \\alpha\\) then;; \\(x_n+y_n\\to_{d} x+\\alpha\\)\nIf \\(x_n\\to_{d} x\\)and \\(y_n\\to_{p} 0\\) then;; \\(x_n'y_n\\to_{p} 0\\)\nIf \\(x_n\\to_{d} x\\)and \\(A_n\\to_{p} A\\) then;; \\(A_nx_n\\to_{d} Ax\\), where it is assumed that \\(A_n\\) and \\(x_n\\) are “conformable”(i.e., the matrix- and vector-dimensions fit to each other).\n\nImportant special case:\nIf \\(x_n\\to_{d} N(0,\\Sigma)\\)and \\(A_n\\to_{p} A\\) then;; \\(A_nx_n\\to_{d} N(0,A\\Sigma A')\\)\n\nProofs can be found, e.g., in Asymptotic Statistics, van der Vaart, Theorem 2.8. Or here: https://www.statlect.com/asymptotic-theory/Slutsky-theorem\nNote: Sometimes, only parts (i) and (ii) of Lemma 6.3 are called “Slutsky’s theorem.”\n\n\n6.1.4 Law of Large Numbers (LLN) and Central Limit Theorem (CLT)\nSo far, we discussed the definitions of the four most important convergence modes, their relations among each other, and basic theorems (CMT and Slutsky) about functionals of stochastic sequences. Though, we still lack of tools that allow us to actually show that a stochastic sequence convergences (in some of the discussed modes) to some limit.\nIn the following we consider the stochastic sequences \\(\\{\\bar{z}_n\\}\\) of sample means \\(\\bar{z}_n=n^{-1}\\sum_{i=1}^nz_i\\), where \\(z_i\\), \\(i=1,\\dots,n\\), are (scalar, vector, or matrix-valued) random variables. Remember: the sample mean \\(\\bar{z}_n\\) is an estimator of the deterministic population mean \\(\\mu\\).\nWeak LLNs, strong LLNs, and CLTs tell us conditions under which arithmetic means \\(\\bar{z}_n=n^{-1}\\sum_{i=1}^nz_i\\) converge: \\[\\begin{eqnarray*}\n  \\bar{z}_n&\\to_{p}&\\mu\\quad\\text{(weak LLN)}\\\\\n  \\bar{z}_n&\\to_{as}&\\mu\\quad\\text{(strong LLN)}\\\\\n  \\sqrt{n}(\\bar{z}_n-\\mu)&\\to_{d}&N(0,\\sigma^2)\\quad\\text{(CLT)}\n\\end{eqnarray*}\\]\nIn the following we introduce the most well-known versions of the weak, the strong LLN, and the CLT.\n\nTheorem 6.1 (Weak LLN (Chebychev)) \nIf \\(\\lim_{n\\to\\infty} E(\\bar{z}_n)=\\mu\\) and \\(\\lim_{n\\to\\infty}Var(\\bar{z}_n)=0\\) then \\(\\bar{z}_n\\to_{p}\\mu.\\)\n\nProof can be found, for instance, here: https://www.statlect.com/asymptotic-theory/law-of-large-numbers\n\nTheorem 6.2 (Strong LLN (Kolmogorov)) \nIf \\(\\{z_i\\}\\) is an iid sequence and \\(E(z_i)=\\mu\\) then \\(\\bar{z}_n\\to_{as}\\mu.\\)\n\nProof can be found, e.g., in Linear Statistical Inference and Its Applications, Rao (1973), pp. 112-114.\nNote: The weak and the strong LLN for random vectors follow from requiring element-by-element convergence.\n\nTheorem 6.3 (CLT (Lindeberg-Levy)) If \\(\\{z_i\\}\\) is an iid sequence and \\(E(z_i)=\\mu\\) and \\(Var(z_i)=\\sigma^2\\) then\n\\[\n\\sqrt{n}(\\bar{z}_n-\\mu)\\to_{d} N(0,\\sigma^2)\\quad\\text{as}\\quad n\\to\\infty\n\\]\n\nProof can be found, e.g., in Asymptotic Statistics, van der Vaart (1998), Theorem 2.17.\nThe Lindeberg-Levy CLT for \\(K\\)-dimensional random vectors follows from our above discussion on “Multivariate Convergence in Distribution.”From this we know that if \\(\\bar{z}_n\\in\\mathbb{R}^K\\) and \\(\\mu\\in\\mathbb{R}^K\\), then\n\\[\\sqrt{n}(\\bar{z}_n-\\mu)\\to_{d} \\mathcal{N}(0,\\Sigma)\\quad\\Leftrightarrow\\quad \\sqrt{n}(\\lambda'\\bar{z}_n-\\lambda'\\mu)\\to_{d} \\mathcal{N}(0,\\lambda'\\Sigma\\lambda),\\]\nfor any \\(\\lambda\\in\\mathbb{R}^K\\).\nThat is, to apply the Lindeberg-Levy CLT (Theorem 6.3) to multivariate (e.g., \\(K\\)-dimensional) stochastic sequences, we need to check whether the univariate stochastic sequence \\(\\{\\lambda'z_i\\}\\) is i.i.d. with \\(E(\\lambda'z_i)=\\lambda'\\mu\\) and \\(Var(\\lambda'z_i)=\\lambda'\\Sigma\\lambda\\) for any \\(\\lambda\\in\\mathbb{R}^K\\). This is the case if the multivariate (\\(K\\)-dimensional) stochastic sequence \\(\\{z_i\\}\\) is an i.i.d. sequence with \\(E(z_i)=\\mu\\) and \\(Var(z_i)=\\Sigma\\).\nNote: The LLNs and the CLT are stated with respect to sequences of sample means \\(\\{\\bar{z}_n\\}\\); i.e., the simplest estimators you probably can think of. We will see, however, that this is all we need in order to analyze also more complicated estimators such as the OLS estimator.\n\n\n6.1.5 Estimators as a Sequences of Random Variables\nOur concepts above readily apply to general scalar-valued (univariate) or vector-valued (\\(K\\)-dimensional) estimators, say \\(\\hat\\theta_n\\in\\mathbb{R}^K\\), that are computed from i.i.d. random samples.\n\n(Weak) Consistency: We say that an estimator \\(\\hat\\theta_n\\) is (weakly) consistent for \\(\\theta\\) if\n\\[\\hat\\theta_n\\to_{p}\\theta\\quad\\text{as}\\quad n\\to\\infty\\]\nAsymptotic Bias: The asymptotic bias of an estimator \\(\\hat\\theta_n\\) of some true parameter \\(\\theta\\) is defined as:\n\\[\\text{ABias}(\\hat\\theta_n)=\\lim_{n\\to\\infty}E(\\hat\\theta_n)-\\theta\\]\nIf \\(\\text{ABias}(\\hat\\theta_n)=0\\), then \\(\\hat\\theta\\) is called an asymptotically unbiased.\nAsymptotic Normality: A consistent estimator \\(\\hat\\theta_n\\) is asymptotically normal distributed if\n\\[\\sqrt{n}(\\hat\\theta_n-\\theta)\\to_{d} \\mathcal{N}(0,\\Sigma)\\quad\\text{as}\\quad n\\to\\infty\\]\nwhere \\(\\lim_{n\\to\\infty}Var(\\sqrt{n}(\\hat\\theta_n-\\theta))=\\lim_{n\\to\\infty}Var(\\sqrt{n}\\hat\\theta_n)=\\Sigma\\) as called the asymptotic variance of \\(\\sqrt{n}(\\hat\\theta_n-\\theta)\\).\n\\(\\sqrt{n}\\)-consistent: Consistent estimators \\(\\hat{\\theta}_n\\to_{p}\\theta\\) are called *\\(\\sqrt{n*\\)-consistent} if\n\\[\\sqrt{n}(\\hat\\theta_n-\\theta)\\to_{d} z \\quad\\text{as}\\quad n\\to\\infty\\]\nIf additionally the random vector \\(z\\) is normal distributed, then \\(\\hat\\theta_n\\) is often called consistent and asymptotically normal."
  },
  {
    "objectID": "06-Asymptotics.html#asymptotics-under-the-classic-regression-model",
    "href": "06-Asymptotics.html#asymptotics-under-the-classic-regression-model",
    "title": "6  Large Sample Inference",
    "section": "6.2 Asymptotics under the Classic Regression Model",
    "text": "6.2 Asymptotics under the Classic Regression Model\nGiven the above introduced machinery on asymptotic concepts and results, we can now proof that the OLS estimators \\(\\hat\\beta\\) and \\(s_{UB}^2\\) applied to the classic regression model (defined by Assumptions 1-4 in Chapter 4 are both consistent, and that \\(\\hat\\beta\\) is asymptotically normal distributed as \\(n\\to\\infty\\). That is, we can drop the unrealistic normality and spherical errors assumption (Assumption 4\\(^\\ast\\)), but still use the usual test statistics (\\(t\\)-test, \\(F\\)-test); as long as the sample size \\(n\\) is “large.”\nHowever, before we can formally state the asymptotic properties, we, first, need to adjust our “data generating process”assumption (Assumption 1) such that we can apply Kolmogorov’s strong LLN and Lindeberg-Levy’s CLT. Second, we need to adjust the rank assumption (Assumption 3), such that the full column rank of \\(X\\) is guaranteed for the limiting case as \\(n\\to\\infty\\), too. Assumptions 2 and 4 from Chapter 4 are assumed to hold (and do not need to be changed).\nAssumption 1\\(^\\ast\\): Data Generating Process (for Asymptotics) Assumption 1 of Chapter 4 applies, but additionally we assume that \\((\\varepsilon_i, X_i)\\in\\mathbb{R}^{K+1}\\) (or equivalently \\((Y_i,X_i)\\in\\mathbb{R}^{K+1}\\)) is jointly i.i.d. for all \\(i=1,\\dots,n\\), with existing and finite second moments for \\(X_i\\) and fourth moments for \\(\\varepsilon_i\\).\nNote 1: The fourth moment of \\(\\varepsilon_i\\) is actually only needed for Theorem 6.7; for the rest two moments are sufficient.\nNote 2: The above adjustment of Assumption 1 is far less restrictive than assuming that the error-terms \\(\\varepsilon_i\\) are i.i.d. normally distributed and independent from \\(X_i\\) (as it’s necessary for small sample inference in Chapter 5).\nAssumption 3\\(^\\ast\\): Rank Condition (for Asymptotics) The \\((K\\times K)\\) matrix\n\\[\\Sigma_{X'X}:=E(S_{X'X})=E(n^{-1}X'X)=E(X_iX_i')\\]\n\n\n\nhas full rank \\(K\\). I.e., \\(\\Sigma_{X'X}\\) is nonsingular and invertible. \n\n\n\n\nTheorem 6.4 (Consistency of \\(S_{X'X}^{-1}\\)) Under Assumption 1\\(^\\ast\\) and 3\\(^\\ast\\) we have that\n\\[\\left(\\frac{1}{n}X'X\\right)^{-1}=S_{X'X}^{-1}\\quad\\to_{p}\\quad\\Sigma_{X'X}^{-1}\\quad\\text{as}\\quad n\\to\\infty\\]\n\nProof is done in the lecture.\n\nTheorem 6.5 (Consistency of \\(\\hat\\beta\\)) Under Assumption 1\\(^\\ast\\), 2 and 3\\(^\\ast\\) we have that\n\\[\\hat\\beta_n\\to_{p}\\beta\\quad\\text{as}\\quad n\\to\\infty\\]\n\nProof is done in the lecture.\nFurthermore, we can show that the appropriately scaled (by \\(\\sqrt{n}\\)) sampling error \\(\\hat\\beta-\\beta\\) of the OLS estimator is asymptotically normal distributed.\n\nTheorem 6.6 (Sampling error limiting normality (the classic case)) For simplicity, we consider here the special case of spherical errors (\\(Var(\\varepsilon|X)=\\sigma^2I_n\\)). Under Assumption 1\\(^\\ast\\), 2 and 3\\(^\\ast\\) we then have that\n\\[\\sqrt{n}(\\hat\\beta_n-\\beta)\\to_{d} \\mathcal{N}\\left(0,\\sigma^2 \\Sigma^{-1}_{X'X}\\right)\\quad\\text{as}\\quad n\\to\\infty\\]\n\nProof is done in the lecture.\nIn principle, we can derive the usual test statistics from the latter result. Though, as long as we do not know (we usually don’t) \\(\\sigma^2\\) and \\(\\Sigma_{X'X}\\) we need to plug-in the (consistent!) estimators \\(S_{X'X}^{-1}\\) and \\(s_{UB}^2\\), where the consistency of the former estimator is provided by Theorem 6.4 and the consistency of \\(s_{UB}^2\\) is provided by the following result.\n\nTheorem 6.7 (Consistency of \\(s^2_{UB}\\)) \n\\[s_{UB}^2\\to_{p}\\sigma^2\\quad\\text{as}\\quad n\\to\\infty\\]\n\nProof is skipped, but a detailed proof can be found here: https://www.statlect.com/fundamentals-of-statistics/OLS-estimator-properties\n\n6.2.1 The Case of Heteroscedasticity\nTheorem 6.6 can also be stated and proofed for conditionally heteroscedastic error terms. In this case one gets\n\\[\n\\sqrt{n}(\\hat\\beta_n-\\beta)\\to_{d} \\mathcal{N}\\left(0,\\Sigma_{X'X}^{-1}E(\\varepsilon^2_iX_iX_i')\\Sigma_{X'X}^{-1}\\right)\\quad\\text{as}\\quad n\\to\\infty\n\\tag{6.1}\\]\nwhere \\(\\Sigma_{X'X}^{-1}E(\\varepsilon_i^2X_iX_i')\\Sigma_{X'X}^{-1}\\) (i.e., the asymptotic variance of \\(\\sqrt{n}(\\hat\\beta_n-\\beta)\\)) is usually unknown and needs to be estimated from the data by\n\\[\nS_{X'X}^{-1}\\widehat{E}(\\varepsilon^2_iX_iX_i')S^{-1}_{X'X}\\to_{p} \\Sigma_{X'X}^{-1}E(\\varepsilon^2_iX_iX_i')\\Sigma_{X'X}^{-1}\\quad\\text{as}\\quad n\\to\\infty,\n\\]\nwhere \\(\\widehat{E}(\\varepsilon^2_iX_iX_i')\\) denotes some consistent estimator of \\(E(\\varepsilon^2X_iX_i')\\) such as one of the following choices:\n\nHC0: \\(\\widehat{E}(\\varepsilon^2_iX_iX_i')=\\frac{1}{n}\\sum_{i=1}^n\\hat\\varepsilon_i^2X_iX_i'\\)\nHC1: \\(\\widehat{E}(\\varepsilon^2_iX_iX_i')=\\frac{1}{n}\\sum_{i=1}^n\\frac{n}{n-K}\\hat\\varepsilon_i^2X_iX_i'\\)\nHC2: \\(\\widehat{E}(\\varepsilon^2_iX_iX_i')=\\frac{1}{n}\\sum_{i=1}^n\\frac{\\hat{\\varepsilon}_{i}^{2}}{1-h_{i}}X_iX_i'\\)\nHC3: \\(\\widehat{E}(\\varepsilon^2_iX_iX_i')=\\frac{1}{n}\\sum_{i=1}^n\\frac{\\hat{\\varepsilon}_{i}^{2}}{\\left(1-h_{i}\\right)^{2}}X_iX_i'\\text{\\quad($\\leftarrow$ Most often used)}\\)\nHC4: \\(\\widehat{E}(\\varepsilon^2_iX_iX_i')=\\frac{1}{n}\\sum_{i=1}^n\\frac{\\hat{\\varepsilon}_{i}^{2}}{\\left(1-h_{i}\\right)^{\\delta_{i}}}X_iX_i'\\)\n\n\n\n\n\n\n\n\n\nNote: In order to show that any of the above versions (HC0-4) of \\(\\widehat{E}(\\varepsilon^2_iX_iX_i')\\) is a consistent estimator of \\(E(\\varepsilon^2_iX_iX_i')\\) we actually need to assume that the explanatory variables in \\(X\\) have finite fourth moments (see Chapter 2.5 of Hayashi (2000)). So, for this, we would need to make our Assumption 1\\(^\\ast\\) more restrictive (so far, only two moments are assumed for \\(X\\)).\n\n\n\n6.2.2 Hypothesis Testing and Confidence Intervals\nFrom our asymptotic results under the classic regression model (Assumptions 1\\(^\\ast\\), 2, 3\\(^\\ast\\), and 4) we get the following results important for testing statistical hypothesis.\n\n6.2.2.1 Robust Hypothesis Testing: Multiple Parameters\nLet us reconsider the following system of \\(q\\)-many null hypotheses: \\[\\begin{align*}\nH_0: \\underset{(q\\times K)}{R}\\underset{(K\\times 1)}{\\beta} - \\underset{(q\\times 1)}{r} = \\underset{(q\\times 1)}{0},\n\\end{align*}\\] where the \\((q \\times K)\\) matrix \\(R\\) and the \\(q\\)-vector \\(r=(r_{1},\\dots,r_{q})'\\) are chosen by the statistician to specify her/his null hypothesis about the unknown true parameter vector \\(\\beta\\). To make sure that there are no redundant equations, it is required that \\(\\operatorname{rank}(R)=q\\).\nBy contrast to the multiple parameter tests for small samples (see Section 5.1), we can work here with a heterosedasticity robust test statistic which is applicable for heteroscedastic error terms:\n\\[\nW=n(R\\hat\\beta_n -r)'[R\\,S_{X'X}^{-1}\\widehat{E}(\\varepsilon^2_iX_iX_i')S^{-1}_{X'X}\\,R']^{-1}(R\\hat\\beta_n-r)\\overset{H_0}{\\to}_d\\chi^2(q)\n\\tag{6.2}\\]\nas \\(n\\to\\infty\\). The price to pay is that the distribution of the test statistic under the null hypothesis is only valid asymptotically for large \\(n\\). That is, the critical values taken from the asymptotic distribution will be useful only for “large”samples sizes. In case of homoscedastic error terms, one can substitute \\(S_{X'X}^{-1}\\widehat{E}(\\varepsilon^2_iX_iX_i')S^{-1}_{X'X}\\) by \\(s_{UB}^2S_{X'X}^{-1}\\).\nFinite-sample correction: In order to improve the finite-sample performance of this test, one usually uses the \\(F_{q,n-K}\\) distribution with \\(q\\) and \\(n-K\\) degrees of freedoms instead of the \\(\\chi^2(q)\\) distribution. Asymptotically (\\(n\\to\\infty\\)), \\(F_{q,n-K}\\) is equivalent to \\(\\chi^2(q)\\). However, for finite sample sizes \\(n\\) (i.e., the practically relevant case) \\(F_{q,n-K}\\) leads to larger critical values which helps to account for the estimation errors in \\(S_{X'X}^{-1}\\widehat{E}(\\varepsilon^2_iX_iX_i')S^{-1}_{X'X}\\) (or in \\(s_{UB}^2S_{X'X}^{-1}\\)) which are otherwise neglected by the pure asymptotic perspective.\n\n\n6.2.2.2 Robust Hypothesis Testing: Single Parameters\nLet us reconsider the case of hypotheses about only one parameter \\(\\beta_k\\), with \\(k=1,\\dots,K\\) \\[\\begin{equation*}\n\\begin{array}{ll}\nH_0: & \\beta_k=r\\\\\nH_A: & \\beta_k\\ne r\\\\\n\\end{array}\n\\end{equation*}\\] We can selecting the \\(k\\)th diagonal element of the test-statistic in Equation 6.2 and taking the square root yields\n\\[\nt=\\frac{\\sqrt{n}\\left(\\hat{\\beta}_k-r\\right)}{\\sqrt{\\left[S_{X'X}^{-1}\\widehat{E}(\\varepsilon^2_iX_iX_i')S^{-1}_{X'X}\\right]_{kk}}}\\overset{H_0}{\\to}_d\\mathcal{N}(0,1).\n\\]\nThis \\(t\\) test statistic allows for heteroscedastic error terms. In case of homoscedastic error terms, one can substitute \\([S_{X'X}^{-1}\\widehat{E}(\\varepsilon^2_iX_iX_i')S^{-1}_{X'X}]_{kk}\\) by \\(s_{UB}^2[S_{X'X}^{-1}]_{kk}\\).\nFinite-sample correction: In order to improve the finite-sample performance of this \\(t\\) test, one usually uses the \\(t_{(n-K)}\\) distribution with \\(n-K\\) degrees of freedoms instead of the \\(\\mathcal{N}(0,1)\\) distribution. Asymptotically (\\(n\\to\\infty\\)), \\(t_{(n-K)}\\) is equivalent to \\(\\mathcal{N}(0,1)\\). However, for finite sample sizes \\(n\\) (i.e., the practically relevant case) \\(t_{n-K}\\) leads to larger critical values which helps to account for the estimation errors in \\([S_{X'X}^{-1}\\widehat{E}(\\varepsilon^2_iX_iX_i')S^{-1}_{X'X}]_{kk}\\) (or in \\(s_{UB}^2[S_{X'X}^{-1}]_{kk}\\)) which are otherwise neglected by the pure asymptotic perspective.\n\n\n6.2.2.3 Robust Confidence Intervals\nFollowing the derivations in Chapter Section 5.4, but using the expression for the robust standard errors, we get the following heteroscedasticity robust (random) \\((1-\\alpha)\\cdot 100\\%\\) confidence interval\n\\[\n\\operatorname{CI}_{1-\\alpha}=\n\\left[\\hat\\beta_k\\pm t_{1-\\alpha/2,n-K}\\sqrt{n^{-1}[S_{X'X}^{-1}\\widehat{E}(\\varepsilon^2_iX_iX_i')S^{-1}_{X'X}]_{kk}}\\right].\n\\]\nHere, the coverage probability is an asymptotic coverage probability with \\(P(\\beta_k\\in\\operatorname{CI}_{1-\\alpha})\\to 1-\\alpha\\) as \\(n\\to\\infty\\)."
  },
  {
    "objectID": "06-Asymptotics.html#practice-large-sample-inference",
    "href": "06-Asymptotics.html#practice-large-sample-inference",
    "title": "6  Large Sample Inference",
    "section": "6.3 Practice: Large Sample Inference",
    "text": "6.3 Practice: Large Sample Inference\nLet’s apply the above asymptotic inference methods using R. As in Chapter Section 5.5 we, first, program a function myDataGenerator() which allows us to generate data from the following model, i.e., from the following fully specified data generating process: \\[\\begin{align*}\nY_i &=\\beta_1+\\beta_2X_{i2}+\\beta_3X_{i3}+\\varepsilon_i,\\qquad i=1,\\dots,n\\\\\n\\beta &=(\\beta_1,\\beta_2,\\beta_3)'=(2,3,4)'\\\\\nX_{i2}&\\sim U[-4,4]\\\\\nX_{i3}&\\sim U[-5,5]\\\\\n\\varepsilon_i|X_i&\\sim U[-0.5 |X_{i2}|, 0.5 |X_{i2}|],\n\\end{align*}\\] where \\((Y_i,X_i)\\) is assumed i.i.d. across \\(i=1,\\dots,n\\) with \\(X_{i2}\\) and \\(X_{i3}\\) being independent of each other. Note that, by contrast to Chapter Section 5.5, the error terms are conditionally heteroscedastic (\\(Var(\\varepsilon_i|X_i)=\\frac{1}{12}X_{i2}^2\\)) and not Gaussian.\nAs a side note: The unconditional variance follows by the law of total variance and is given by \\[\\begin{align*}\nVar(\\varepsilon_i)\n&=E(Var(\\varepsilon_i|X_i))+Var(E(\\varepsilon_i|X_i))\\\\\n&=E\\left(\\frac{1}{12}X_{i2}^2\\right)+0\\\\\n&=\\frac{1}{12}\\left(\\frac{1}{12}(4-(-4))^2\\right)=\\frac{4}{9}.\n\\end{align*}\\]\nMoreover, by contrast to Section 5.5, we here do not need to sample new realizations of \\(Y_i\\) conditionally on a given data matrix \\(X\\) since the asymptotically (for large \\(n\\)) the distribution of \\(\\hat\\beta\\) does not depend on a random realization of \\(X\\). (Therefore, the large sample normality result in Equation 6.1 does not need a conditioning on \\(X\\).) Consequently, the option to condition on \\(X\\) is removed in the following R-function myDataGenerator().\n\n## Function to generate artificial data\nmyDataGenerator <- function(n, beta){\n  ##\n  X   <- cbind(rep(1, n), \n                 runif(n, -4, 4), \n                 runif(n, -5, 5))\n  ##\n  eps  <- runif(n, - 0.5 * abs(X[,2]), + 0.5 * abs(X[,2]))\n  Y    <- X %*% beta + eps\n  data <- data.frame(\"Y\"=Y, \"X_1\"=X[,1], \"X_2\"=X[,2], \"X_3\"=X[,3])\n  ##\n  return(data)\n}\n\n\n6.3.1 Normally Distributed \\(\\hat\\beta\\) for \\(n\\to\\infty\\)\nThe above data generating process fulfills our regulatory assumptions Assumption 1\\(^*\\), 2, 3\\(^*\\), and 4. So, by theory, the estimators \\(\\hat\\beta_k\\) should be normal distributed for large sample sizes \\(n\\) – unconditionally on \\(X\\) and even for heteroscedastic error terms.\n\\[\n\\sqrt{n}\\left(\\hat\\beta_k-\\beta_k\\right)\\to_d\\mathcal{N}\\left(0,\\left[\\Sigma_{X'X}^{-1}E(\\varepsilon^2_iX_iX_i')\\Sigma_{X'X}^{-1}\\right]_{kk}\\right)\n\\]\nOr:\n\\[\n\\hat\\beta_k\\to_d\\mathcal{N}\\left(\\beta_k, \\;n^{-1}\\;\\left[\\Sigma_{X'X}^{-1}E(\\varepsilon^2_iX_iX_i')\\Sigma_{X'X}^{-1}\\right]_{kk}\\right)\n\\]\nMathematically, the latter is a bit sloppy since the right hand side of \\(\\to_d\\) depends on \\(n\\), i.e., is not the stable limit object for \\(n\\to\\infty\\). However, this sloppiness is nevertheless instructive since it gives us the approximative distribution for given largish sample sizes like \\(n=100\\).\n\n\n\nFor our above specified data generating process, we have\n\nFrom the assumed distributions of \\(X_{i2}\\) and \\(X_{i3}\\) we have that:\n\n\\[\n\\Sigma_{X'X}=E(S_{X'X})=E(X_iX_i')\n=\\left(\\begin{matrix}1&0&0\\\\0&E(X_{i2}^2)&0\\\\0&0&E(X_{i3}^2)\\end{matrix}\\right)\n=\\left(\\begin{matrix}1&0&0\\\\0&\\frac{16}{3}&0\\\\0&0&\\frac{25}{3}\\end{matrix}\\right)\n\\]\nThe above result follows from observing that \\(E(X^2)=Var(X)\\) if \\(X\\) has mean zero, and that the variance of uniform \\(U[a,b]\\) distributed random variables is given by \\(\\frac{1}{12}(b-a)^2\\).\n\nMoreover, \\(E(\\varepsilon^2_iX_iX_i')=E(X_iX_i'E(\\varepsilon^2_i|X_i))=E\\left(X_iX_i'\\left(\\frac{1}{12}X_{i2}^2\\right)\\right)\\) such that \\[\\begin{align*}\nE(\\varepsilon^2_iX_iX_i')\n&=\\left(\\begin{matrix}E\\left(\\frac{1}{12}X_{i2}^2\\right)&0&0\\\\\n                 0&E\\left(X_{i2}^2\\cdot\\frac{1}{12}X_{i2}^2\\right)&0\\\\0&0&E\\left(X_{i3}^2\\cdot\\frac{1}{12}X_{i2}^2\\right)\n    \\end{matrix}\\right)\\\\\n&=\\left(\\begin{matrix}\\frac{1}{12}E\\left(X_{i2}^2\\right)&0&0\\\\\n     0&\\frac{1}{12}E\\left(X_{i2}^4\\right)&0\\\\0&0&\\frac{1}{12}E\\left(X_{i2}^2\\right)\\,E\\left(X_{i3}^2\\right)\n\\end{matrix}\\right)\\\\      \n&=\\left(\\begin{matrix}\\frac{1}{12}\\frac{16}{3}&0&0\\\\\n                    0&\\frac{1}{12}\\frac{256}{5}&0\\\\\n                    0&0&\\frac{1}{12}\\frac{16}{3}\\frac{25}{3}\\end{matrix}\\right)\n=\\left(\\begin{matrix}\\frac{4}{9}&0&0\\\\0&\\frac{64}{15}&0\\\\0&0&\\frac{100}{27}\\end{matrix}\\right)\n\\end{align*}\\] The above result follow from observing that for \\(X\\sim U[a,b]\\) one has \\(E(X^k)=\\frac{b^{k+1}-a^{k+1}}{(k+1)(b-a)}\\), \\(k=1,2,\\dots\\); see, for instance, Wikipedia.\n\nSo, for instance, for \\(\\hat{\\beta}_2\\) we have the following theoretical large sample distribution:\n\\[\n\\hat\\beta_2\\to_d\\mathcal{N}\\left(\\beta_2, \\;n^{-1}\\;\\left[\\left(\\begin{matrix}1&0&0\\\\0&\\frac{16}{3}&0\\\\0&0&\\frac{25}{3}\\end{matrix}\\right)^{-1}\\left(\\begin{matrix}\\frac{4}{9}&0&0\\\\0&\\frac{64}{15}&0\\\\0&0&\\frac{100}{27}\\end{matrix}\\right)\\left(\\begin{matrix}1&0&0\\\\0&\\frac{16}{3}&0\\\\0&0&\\frac{25}{3}\\end{matrix}\\right)^{-1}\\right]_{22}\\right)\n\\]\nLet’s use a Monte Carlo simulation to check how well the theoretical large sample (\\(n\\to\\infty\\)) distribution of \\(\\hat\\beta_2\\) works as an approximative distribution for a practical largish sample size of \\(n=100\\).\n\nset.seed(123)\nn           <- 100      # a largish sample size\nbeta_true   <- c(2,3,4) # true data vector\n\n## Mean and variance of the true asymptotic \n## normal distribution of beta_hat_2:\n# true mean\nbeta_true_2     <- beta_true[2] \n# true variance\nvar_true_beta_2 <- (solve(diag(c(1, 16/3, 25/3)))    %*% \n                          diag(c(4/9, 64/15, 100/27))%*% \n                    solve(diag(c(1, 16/3, 25/3))))[2,2]/n\n\n## Let's generate 5000 realizations from beta_hat_2, and check \n## whether their distribution is close to the true normal \n## distribution.\n## (We don't condition on X since the theoretical limit \n## distribution is unconditional on X)\nrep        <- 5000 # MC replications\nbeta_hat_2 <- rep(NA, times=rep)\n##\nfor(r in 1:rep){\n    MC_data <- myDataGenerator(n    = n, \n                               beta = beta_true)\n    lm_obj        <- lm(Y ~ X_2 + X_3, data = MC_data)\n    beta_hat_2[r] <- coef(lm_obj)[2]\n}\n\n## Compare:\n## True beta_2 versus average of beta_hat_2 estimates\nc(beta_true_2, round(mean(beta_hat_2), 4))\n\n[1] 3.0000 2.9998\n\n\nGood! As expected, the average of the 5000 simulated realizations of \\(\\hat\\beta_2\\) is basically equal to the theoretical true mean \\(E(\\hat\\beta_2)=\\beta_2=3\\).\n\n## True variance of beta_hat_2 versus \n## empirical variance of beta_hat_2 estimates\nc(round(var_true_beta_2, 5), round(var(beta_hat_2), 5))\n\n[1] 0.00150 0.00147\n\n\nGreat! The variance of the 5000 simulated realizations of \\(\\hat\\beta_2\\) is basically equal to the theoretical true variance \\(Var(\\hat\\beta_2)=0.0015\\).\n\n## True normal distribution of beta_hat_2 versus \n## empirical density of beta_hat_2 estimates\nlibrary(\"scales\")\ncurve(expr = dnorm(x, mean = beta_true_2, \n                   sd=sqrt(var_true_beta_2)), \n      xlab=\"\",ylab=\"\", col=gray(.2), lwd=3, lty=1, \nxlim=range(beta_hat_2),ylim=c(0,14.1),main=paste0(\"n=\",n))\nlines(density(beta_hat_2, bw = bw.SJ(beta_hat_2)), \n      col=alpha(\"blue\",.5), lwd=3)\nlegend(\"topleft\", lty=c(1,1), lwd=c(3,3), \n     col=c(gray(.2), alpha(\"blue\",.5)), bty=\"n\", legend= \nc(expression(\n  \"Theoretical (Asymptotic) Gaussian Density of\"~hat(beta)[2]), \n  expression(\n  \"Empirical Density Estimation based on MC realizations from\"~\n  hat(beta)[2])))\n\n\n\n\n\n\n\n\nGreat! The nonparametric density estimation (estimated via density()) computed from the 5000 simulated realizations of \\(\\hat\\beta_2\\) is indicating that \\(\\hat\\beta_2\\) is really normally distributed as described by our theoretical results in Theorem 6.6 (homoscedastic case) and in Equation Equation 6.1 (heteroscedastic case).\nHowever, is the asymptotic distribution of \\(\\hat\\beta_2\\) also usable for (very) small samples like \\(n=5\\)? Let’s check that:\n\nset.seed(123)\nn           <- 5       # a small sample size\nbeta_true   <- c(2,3,4) # true data vector\n\n## Mean and variance of the true asymptotic \n## normal distribution of beta_hat_2:\n# true mean\nbeta_true_2     <- beta_true[2] \n# true variance\nvar_true_beta_2 <- (solve(diag(c(1, 16/3, 25/3)))%*% \n                          diag(c(4/9, 64/15, 100/27))%*% \n                    solve(diag(c(1, 16/3, 25/3))))[2,2]/n\n\n## Let's generate 5000 realizations from beta_hat_2, and check \n## whether their distribution is close to the true normal \n## distribution.\n## (We don't condition on X since the theoretical limit \n## distribution is unconditional on X)\nrep        <- 5000 # MC replications\nbeta_hat_2 <- rep(NA, times=rep)\n##\nfor(r in 1:rep){\n    MC_data <- myDataGenerator(n    = n, \n                               beta = beta_true)\n    lm_obj        <- lm(Y ~ X_2 + X_3, data = MC_data)\n    beta_hat_2[r] <- coef(lm_obj)[2]\n}\n\n## Compare:\n## True beta_2 versus average of beta_hat_2 estimates\nc(beta_true_2, round(mean(beta_hat_2), 4))\n\n[1] 3.0000 2.9963\n\n\nOK, at least on average the 5000 simulated realizations of \\(\\hat\\beta_2\\) are basically equal to the true mean \\(E(\\hat\\beta_2)=\\beta_2=3\\).\n\n## True variance of beta_hat_2 versus \n## empirical variance of beta_hat_2 estimates\nc(round(var_true_beta_2, 4), round(var(beta_hat_2), 4))\n\n[1] 0.0300 0.0562\n\n\nOuch! The theoretical large sample variance \\(Var(\\hat\\beta_2)=0.03\\) is about 50% smaller than the actual (small sample) variance of \\(\\hat\\beta_2\\) approximated by the empirical variance of the 5000 simulated realizations of \\(\\hat\\beta_2\\). That is, we cannot simply use a large sample result in small samples.\n\n## True normal distribution of beta_hat_2 versus \n## empirical density of beta_hat_2 estimates\nlibrary(\"scales\")\ncurve(expr = dnorm(x, mean = beta_true_2, \n                   sd=sqrt(var_true_beta_2)), \n      xlab=\"\",ylab=\"\", col=gray(.2), lwd=3, lty=1, \nxlim=c(2,4), ylim=c(0,3),main=paste0(\"n=\",n))\nlines(density(beta_hat_2, bw = bw.SJ(beta_hat_2)), \n      col=alpha(\"blue\",.5), lwd=3)\nlegend(\"topleft\", lty=c(1,1), lwd=c(3,3), \n     col=c(gray(.2), alpha(\"blue\",.5)), bty=\"n\", legend= \nc(expression(\n  \"Theoretical (Asymptotic) Gaussian Density of\"~hat(beta)[2]), \n  expression(\n  \"Empirical Density Estimation based on MC realizations from\"~\n  hat(beta)[2])))\n\n\n\n\n\n\n\n\nNot good. The actual distribution has substantially fatter tails. That is, if we would use the quantiles of the asymptotic distribution, we would falsely reject the null-hypothesis too often (probability of type I errors would be larger than the significance level).\n\n\n\n6.3.2 Testing Multiple and Single Parameters\nIn the following, we do inference about multiple parameters. We test the (false) null hypothesis \\[\\begin{align*}\nH_0:\\;&\\beta_2=3\\quad\\text{and}\\quad\\beta_3=5\\\\\n\\text{versus}\\quad H_A:\\;&\\beta_2\\neq 3\\quad\\text{and/or}\\quad\\beta_3\\neq 5.\n\\end{align*}\\] Or equivalently \\[\\begin{align*}\nH_0:\\;&R\\beta -r = 0 \\\\\nH_A:\\;&R\\beta -r \\neq 0,\n\\end{align*}\\] where\n\\[\nR=\\left(\n\\begin{matrix}\n0&1&0\\\\\n0&0&1\\\\\n\\end{matrix}\\right)\\quad\\text{ and }\\quad\nr=\\left(\\begin{matrix}3\\\\5\\\\\\end{matrix}\\right).\n\\]\nThe following R code can be used to test this hypothesis. Note that we use HC3 robust variance estimation sandwich::vcovHC(lm_obj, type=\"HC3\") to take into account that the error terms are heteroscedastic.\n\nsuppressMessages(library(\"car\")) # for linearHyothesis()\n# ?linearHypothesis\nlibrary(\"sandwich\")\n\n## Generate data\nMC_data <- myDataGenerator(n    = 100, \n                           beta = beta_true)\n\n## Estimate the linear regression model parameters\nlm_obj <- lm(Y ~ X_2 + X_3, data = MC_data)\n\nvcovHC3_mat <- sandwich::vcovHC(lm_obj, type=\"HC3\")\n\n## Option 1:\ncar::linearHypothesis(model = lm_obj, \n                      hypothesis.matrix = c(\"X_2=3\", \"X_3=5\"), \n                      vcov=vcovHC3_mat)\n\nLinear hypothesis test\n\nHypothesis:\nX_2 = 3\nX_3 = 5\n\nModel 1: restricted model\nModel 2: Y ~ X_2 + X_3\n\nNote: Coefficient covariance matrix supplied.\n\n  Res.Df Df      F    Pr(>F)    \n1     99                        \n2     97  2 1150.4 < 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n## Option 2:\nR <- rbind(c(0,1,0),\n           c(0,0,1))\ncar::linearHypothesis(model = lm_obj, \n                      hypothesis.matrix = R, \n                      rhs = c(3,5),\n                      vcov=vcovHC3_mat)\n\nLinear hypothesis test\n\nHypothesis:\nX_2 = 3\nX_3 = 5\n\nModel 1: restricted model\nModel 2: Y ~ X_2 + X_3\n\nNote: Coefficient covariance matrix supplied.\n\n  Res.Df Df      F    Pr(>F)    \n1     99                        \n2     97  2 1150.4 < 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nThe \\(p\\)-value is very small and allows us to reject the (false) null-hypothesis at any of the usual significance levels.\nNext, we do inference about a single parameter. We test \\[\\begin{align*}\nH_0:&\\beta_3=5\\\\\n\\text{versus}\\quad H_A:&\\beta_3\\neq 5.\n\\end{align*}\\]\n\n# Load libraries\nlibrary(\"lmtest\")   # for coeftest()\n\nLoading required package: zoo\n\n\n\nAttaching package: 'zoo'\n\n\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n\nlibrary(\"sandwich\") # for vcovHC()\n\n## Generate data\nn <- 100\nMC_data <- myDataGenerator(n    = n, \n                           beta = beta_true)\n\n## Estimate the linear regression model parameters\nlm_obj <- lm(Y ~ X_2 + X_3, data = MC_data)\n\n## Robust t test\n\n## Robust standard error for \\hat{\\beta}_3:\nSE_rob <- sqrt(vcovHC(lm_obj, type = \"HC3\")[3,3])\n## hypothetical (H0) value of \\beta_3:\nbeta_3_H0 <- 5\n## estimate for beta_3:\nbeta_3_hat <- coef(lm_obj)[3]\n## robust t-test statistic\nt_test_stat <- (beta_3_hat - beta_3_H0)/SE_rob\n## p-value\nK <- length(coef(lm_obj))\n##\np_value <- 2 * min(   pt(q = t_test_stat, df = n - K), \n                   1- pt(q = t_test_stat, df = n - K))\np_value\n\n[1] 4.330845e-65\n\n\nAgain, the \\(p\\)-value is very small and allows us to reject the (false) null-hypothesis at any of the usual significance levels."
  },
  {
    "objectID": "07-Instrumental-Variables.html",
    "href": "07-Instrumental-Variables.html",
    "title": "7  Instrumental Variables Regression",
    "section": "",
    "text": "The current version of this chapter is basically completly taken from the free online book: www.econometrics-with-r.org (Hanck et al. 2021)\nRegression models may suffer from problems like omitted variables, measurement errors and simultaneous causality. If so, the error term \\(\\eps_i\\) is correlated with the regressor, \\(X_{ik}\\) say, and the corresponding coefficient of interest, \\(\\beta_k\\), is estimated . If one is lucky, one can add, for instance, the omitted variables to the regression to mitigate the risk of biased estimations (). However, if omitted variables cannot be measured or are not available for other reasons, multiple regression cannot solve the problem. The same issue arises if there is . When causality runs from \\(X\\) to \\(Y\\) (e.g. if \\(Y=\\text{Demanded quantity of a good}\\) and \\(X=\\text{Price of this good}\\)), there will be an estimation bias that cannot be corrected for by multiple regression.\nA general technique for obtaining a consistent estimator of the coefficient of interest is instrumental variables (IV) regression. In this chapter we focus on the IV regression tool called two-stage least squares (TSLS). The first sections briefly recap the general mechanics and assumptions of IV regression and show how to perform TSLS estimation using . Next, IV regression is used for estimating the elasticity of the demand for cigarettes — a classical example where multiple regression fails to do the job because of simultaneous causality."
  },
  {
    "objectID": "07-Instrumental-Variables.html#TIVEWASRAASI",
    "href": "07-Instrumental-Variables.html#TIVEWASRAASI",
    "title": "7  Instrumental Variables Regression",
    "section": "7.1 The IV Estimator with a Single Regressor and a Single Instrument",
    "text": "7.1 The IV Estimator with a Single Regressor and a Single Instrument\nConsider the simple regression model \\[\\begin{align}\n  Y_i = \\beta_1 + \\beta_2 X_i + \\eps_i \\ \\ , \\ \\ i=1,\\dots,n, \\label{eq:srm12}\n\\end{align}\\] where the error term \\(\\eps_i\\) is correlated with the regressor \\(X_i\\) (\\(X\\) is the called ). In this case Assumption 2 is violated, that is, strict exogeneity and orthogonality between \\(X_i\\) and \\(\\eps_i\\) do not hold. Therefore, OLS estimation (also maximum likelihood and methods of moments estimation) is inconsistent for the true \\(\\beta_2\\). In the most simple case, IV regression uses a single instrumental variable \\(Z_i\\) to obtain a consistent estimator for \\(\\beta_2\\).\n\\(Z_i\\) must satisfy two conditions to be a valid instrument:\n\n7.1.1 The Two-Stage Least Squares Estimator\nAs can be guessed from its name, TSLS proceeds in two stages. In the first stage, the variation in the endogenous regressor \\(X_i\\) is decomposed into a component that is explained by the (exogenous) instrument \\(Z_i\\) and a problematic component that is correlated with the error \\(\\eps_i\\). The second stage uses the problem-free component of the variation in \\(X_i\\) to estimate \\(\\beta_2\\).\nThe first stage regression model is\n\\[\nX_i = \\pi_0 + \\pi_1 Z_i + \\nu_i,\n\\]\nwhere \\(\\pi_0 + \\pi_1 Z_i\\) is the component of \\(X_i\\) that is explained by \\(Z_i\\) while \\(\\nu_i\\) is the component (an error term) that cannot be explained by \\(Z_i\\) and exhibits correlation with \\(\\eps_i\\).\nUsing the OLS estimates \\(\\widehat{\\pi}_0\\) and \\(\\widehat{\\pi}_1\\) we obtain predicted values \\(\\widehat{X}_i=\\hat\\pi_0+\\hat\\pi_1 Z_i,\\ i=1,\\dots,n\\). If \\(Z_i\\) is a valid instrument, the \\(\\widehat{X}_i\\) are problem-free in the sense that \\(\\widehat{X}_i\\) is in a regression of \\(Y_i\\) on \\(\\widehat{X}_i\\) which is done in the second stage regression. The second stage produces \\(\\widehat{\\beta}_1^{TSLS}\\) and \\(\\widehat{\\beta}_2^{TSLS}\\), the TSLS estimates of \\(\\beta_1\\) and \\(\\beta_2\\).\nFor the case of a single instrument one can show that the TSLS estimator of \\(\\beta_2\\) is \\[\\begin{align}\n\\widehat{\\beta}_2^{TSLS} = \\frac{s_{ZY}}{s_{ZX}} = \\frac{\\frac{1}{n-1}\\sum_{i=1}^n(Y_i - \\overline{Y})(Z_i - \\overline{Z})}{\\frac{1}{n-1}\\sum_{i=1}^n(X_i - \\overline{X})(Z_i - \\overline{Z})}, \\label{eq:simpletsls}\n\\end{align}\\] which is nothing but the ratio of the sample covariance between \\(Z_i\\) and \\(Y_i\\) to the sample covariance between \\(Z_i\\) and \\(X_i\\).\nThe estimator in \\(\\eqref{eq:simpletsls}\\) is a consistent estimator for \\(\\beta_2\\) in \\(\\eqref{eq:srm12}\\) under the assumption that \\(Z_i\\) is a valid instrument. The CLT implies that the distribution of \\(\\widehat{\\beta}_2^{TSLS}\\) can be approximated by a normal distribution if the sample size \\(n\\) is large. This allows us to use \\(t\\)-statistics, \\(F\\)-statistics, confidence intervals, etc.\n\n\n7.1.2 Application: Demand For Cigarettes (1/2)\nThe relation between the demand for and the price of commodities is a simple yet widespread problem in economics. Health economics is concerned with the study of how health-affecting behavior of individuals is influenced by the health-care system and regulation policy. Probably the most prominent example in public policy debates is smoking as it is related to many illnesses and negative externalities.\nIt is plausible that cigarette consumption can be reduced by taxing cigarettes more heavily. The question is by how much taxes must be increased to reach a certain reduction in cigarette consumption. Economists use elasticities to answer this kind of question. Since the price elasticity for the demand of cigarettes is unknown, it must be estimated. A simple OLS regression of log quantity on log price cannot be used to estimate the effect of interest since there is simultaneous causality between demand and supply. Instead, IV regression can be used.\nWe use the data set CigarettesSW which comes with the package AER. It is a panel data set that contains observations on cigarette consumption and several economic indicators for all 48 continental federal states of the U.S. from 1985 to 1995. In the following, however, we consider data for the cross section of states in 1995 only – that is, we transform the panel data to a cross-sectional data set. We start by loading the package, attaching the data set. An overview about summary statistics for each of the variables is returned by summary(CigarettesSW). Use ?CigarettesSW for a detailed description of the variables.\n\n# load the data set and get an overview\nlibrary(\"AER\")\ndata(\"CigarettesSW\")\nsummary(CigarettesSW)\n\n\n\n     state      year         cpi          population           packs       \n AL     : 2   1985:48   Min.   :1.076   Min.   :  478447   Min.   : 49.27  \n AR     : 2   1995:48   1st Qu.:1.076   1st Qu.: 1622606   1st Qu.: 92.45  \n AZ     : 2             Median :1.300   Median : 3697472   Median :110.16  \n CA     : 2             Mean   :1.300   Mean   : 5168866   Mean   :109.18  \n CO     : 2             3rd Qu.:1.524   3rd Qu.: 5901500   3rd Qu.:123.52  \n CT     : 2             Max.   :1.524   Max.   :31493524   Max.   :197.99  \n (Other):84                                                                \n     income               tax            price             taxs       \n Min.   :  6887097   Min.   :18.00   Min.   : 84.97   Min.   : 21.27  \n 1st Qu.: 25520384   1st Qu.:31.00   1st Qu.:102.71   1st Qu.: 34.77  \n Median : 61661644   Median :37.00   Median :137.72   Median : 41.05  \n Mean   : 99878736   Mean   :42.68   Mean   :143.45   Mean   : 48.33  \n 3rd Qu.:127313964   3rd Qu.:50.88   3rd Qu.:176.15   3rd Qu.: 59.48  \n Max.   :771470144   Max.   :99.00   Max.   :240.85   Max.   :112.63  \n                                                                      \n\n\nWe are interested in estimating \\(\\beta_2\\) in \\[\\begin{align}\n  \\log(Q_i^{cigarettes}) = \\beta_1 + \\beta_2 \\log(P_i^{cigarettes}) + \\eps_i, \\label{eq:cigstsls}\n\\end{align}\\] where \\(Q_i^{cigarettes}\\) is the number of cigarette packs per capita sold and \\(P_i^{cigarettes}\\) is the after-tax average real price per pack of cigarettes in state \\(i=1,\\dots,n=48\\).\nThe instrumental variable we are going to use for instrumenting the endogenous regressor \\(\\log(P_i^{cigarettes})\\) is \\(SalesTax\\), the portion of taxes on cigarettes arising from the general sales tax. \\(SalesTax\\) is measured in dollars per pack. The idea is that:\nIn the following, we perform some transformations in order to obtain deflated cross section data for the year 1995. We also compute the sample correlation between the sales tax and price per pack. The sample correlation is a consistent estimator of the population correlation. The estimate of approximately \\(0.614\\) indicates that \\(SalesTax\\) and \\(P_i^{cigarettes}\\) exhibit positive correlation which meets our expectations: higher sales taxes lead to higher prices. However, a correlation analysis like this is not sufficient for checking whether the instrument is relevant. We will later come back to the issue of checking whether an instrument is relevant and exogenous; see Chapter @ref(civ).\n\n# compute real per capita prices\nCigarettesSW$rprice <- with(CigarettesSW, price / cpi)\n\n#  compute the sales tax\nCigarettesSW$salestax <- with(CigarettesSW, (taxs - tax) / cpi)\n\n# check the correlation between sales tax and price\ncor(CigarettesSW$salestax, CigarettesSW$price)\n\n[1] 0.6141228\n\n# generate a subset for the year 1995\nc1995 <- subset(CigarettesSW, year == \"1995\")\n\nThe first stage regression is\n\\[\n\\log(P_i^{cigarettes}) = \\pi_0 + \\pi_1 SalesTax_i + \\nu_i.\n\\]\nWe estimate this model in using lm(). In the second stage we run a regression of \\(\\log(Q_i^{cigarettes})\\) on \\(\\widehat{\\log(P_i^{cigarettes})}\\) to obtain \\(\\widehat{\\beta}_1^{TSLS}\\) and \\(\\widehat{\\beta}_2^{TSLS}\\).\n\n# perform the first stage regression\ncig_s1 <- lm(log(rprice) ~ salestax, data = c1995)\n\ncoeftest(cig_s1, vcov = vcovHC, type = \"HC1\")\n\n\nt test of coefficients:\n\n             Estimate Std. Error  t value  Pr(>|t|)    \n(Intercept) 4.6165463  0.0289177 159.6444 < 2.2e-16 ***\nsalestax    0.0307289  0.0048354   6.3549 8.489e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nThe first stage regression is\n\\[\n\\widehat{\\log(P_i^{cigarettes})} = \\underset{(0.03)}{4.62} + \\underset{(0.005)}{0.031}\\; SalesTax_i\n\\]\nwhich predicts the relation between sales tax price per cigarettes to be positive. How much of the observed variation in \\(\\log(P^{cigarettes})\\) is explained by the instrument \\(SalesTax\\)? This can be answered by looking at the regression’s \\(R^2\\) which states that about \\(47\\%\\) of the variation in after tax prices is explained by the variation of the sales tax across states.\n\n# inspect the R^2 of the first stage regression\nsummary(cig_s1)$r.squared\n\n[1] 0.4709961\n\n\nWe next store \\(\\widehat{\\log(P_i^{cigarettes})}\\), the fitted values obtained by the first stage regression cig_s1, in the variable lcigp_pred.\n\n# store the predicted values\nlcigp_pred <- cig_s1$fitted.values\n\nNext, we run the second stage regression which gives us the TSLS estimates we seek.\n\n# run the stage 2 regression\ncig_s2 <- lm(log(c1995$packs) ~ lcigp_pred)\ncoeftest(cig_s2, vcov = vcovHC, type = \"HC1\")\n\n\nt test of coefficients:\n\n            Estimate Std. Error t value  Pr(>|t|)    \n(Intercept)   9.7199     1.5971  6.0859 2.153e-07 ***\nlcigp_pred   -1.0836     0.3337 -3.2472  0.002178 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nThus estimating the model \\(\\eqref{eq:cigstsls}\\) using TSLS yields \\[\\begin{align}\n  \\widehat{\\log(Q_i^{cigarettes})} = \\underset{(1.60)}{9.72} - \\underset{(0.33)}{1.08} \\widehat{\\log(P_i^{cigarettes})}, \\label{eq:ecigstsls}\n\\end{align}\\]\nThe function ivreg() from the package AER carries out TSLS procedure automatically. It is used similarly as lm(). Instruments can be added to the usual specification of the regression formula using a vertical bar separating the model equation from the instruments. Thus, for the regression at hand the correct formula is log(packs) ~ log(rprice) | salestax.\n\n# perform TSLS using 'ivreg()'\ncig_ivreg <- ivreg(log(packs) ~ log(rprice) | salestax, \n                   data = c1995)\n\ncoeftest(cig_ivreg, vcov = vcovHC, type = \"HC1\")\n\n\nt test of coefficients:\n\n            Estimate Std. Error t value  Pr(>|t|)    \n(Intercept)  9.71988    1.52832  6.3598 8.346e-08 ***\nlog(rprice) -1.08359    0.31892 -3.3977  0.001411 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nWe find that the coefficient estimates coincide for both approaches.\nThe TSLS estimate for \\(\\beta_2\\) in \\(\\eqref{eq:ecigstsls}\\) suggests that an increase in cigarette prices by one percent reduces cigarette consumption by roughly \\(1.08\\) percentage points, which is fairly elastic. However, we should keep in mind that this estimate might not be trustworthy even though we used IV estimation: there still might be a bias due to . Thus a multiple IV regression approach is needed to reduce the risk of omitted variable biases."
  },
  {
    "objectID": "07-Instrumental-Variables.html#TGIVRM",
    "href": "07-Instrumental-Variables.html#TGIVRM",
    "title": "7  Instrumental Variables Regression",
    "section": "7.2 The General IV Regression Model",
    "text": "7.2 The General IV Regression Model\nThe simple IV regression model is easily extended to a multiple regression model which we refer to as the general IV regression model. In this model we distinguish between four types of variables: the dependent variable, included exogenous variables, included endogenous variables and instrumental variables: \\[\\begin{align}\n  Y_i = \\beta_1 + \\beta_2 X_{2i} + \\dots + \\beta_K X_{Ki} + \\beta_{K+1} W_{1i} + \\dots + \\beta_{K+r} W_{ri} + \\eps_i, \\label{eq:givmodel}\n\\end{align}\\] with \\(i=1,\\dots,n\\) is the general instrumental variables regression model where\nThe coefficients are if \\(m>(K-1)\\). If \\(m<(K-1)\\), the coefficients are and when \\(m=(K-1)\\) they are . For estimation of the IV regression model we require exact identification or overidentification.\nEstimating regression models with TSLS using multiple instruments by means of ivreg() is straightforward. There are, however, some subtleties in correctly specifying the regression formula. Assume that you want to estimate the model\n\\[\nY_i = \\beta_1 + \\beta_2 X_{2i} + \\beta_3 X_{3i} + \\beta_4 W_{1i} + \\eps_i\n\\]\nwhere \\(X_{2i}\\) and \\(X_{3i}\\) are endogenous regressors that shall be instrumented by \\(Z_{1i}\\), \\(Z_{2i}\\) and \\(Z_{3i}\\), and where \\(W_{1i}\\) is an exogenous regressor. Say the corresponding data is available in a data.frame with column names y, x2, x3, w1, z1, z2 and z3. It might be tempting to specify the argument formula in your call of ivreg() as y ~ x2 + x3 + w1 | z1 + z2 + z3 which is, however, . As explained in the documentation of ivreg() (see ?ivreg), it is necessary to list all exogenous variables as instruments too, that is joining them by +’s on the right of the vertical bar: y ~ x2 + x3 + w1 | w1 + z1 + z2 + z3, where w1 is “instrumenting itself”.\nSimilarly to the simple IV regression model, the general IV model \\(\\eqref{eq:givmodel}\\) can be estimated using the two-stage least squares estimator:\nIn the general IV regression model, the instrument relevance and instrument exogeneity assumptions are equivalent to the case of the simple regression model with a single endogenous regressor and only one instrument. That is, for \\(Z_{1i},\\dots,Z_{mi}\\) to be a set of valid instruments, the following two conditions must be fulfilled:\nOne can show that if the IV regression assumptions hold, the TSLS estimator in \\(\\eqref{eq:givmodel}\\) is consistent and normally distributed when the sample size \\(n\\) is large. That is, if we have valid instruments, we obtain valid statistical inference using \\(t\\)-tests, \\(F\\)-tests and confidence intervals for the model coefficients.\n\n7.2.1 Application: Demand for Cigarettes (2/2)\nThe estimated elasticity of the demand for cigarettes in \\(\\eqref{eq:srm12}\\) is \\(1.08\\). Although \\(\\eqref{eq:srm12}\\) was estimated using IV regression it is plausible that this IV estimate is biased. The TSLS estimator is inconsistent for the true \\(\\beta_2\\) if the instrument (here: the real sales tax per pack) is invalid, i.e., if the instrument correlates with the error term. This is likely to be the case here since there are economic factors, like state income, which impact the demand for cigarettes and correlate with the sales tax. States with high personal income tend to generate tax revenues by income taxes and less by sales taxes. Consequently, state income should be included in the regression model. \\[\\begin{align}\n  \\log(Q_i^{cigarettes}) = \\beta_1 + \\beta_2 \\log(P_i^{cigarettes}) + \\beta_3 \\log(income_i) + \\eps_i \\label{eq:mcigstsls1}\n\\end{align}\\]\nBefore estimating \\(\\eqref{eq:mcigstsls1}\\) using ivreg() we define \\(income\\) as real per capita income rincome and append it to the data set CigarettesSW.\n\n# add real income to the dataset (cpi: consumer price index)\nCigarettesSW$rincome <- with(CigarettesSW, \n                             income / population / cpi)\n\nc1995 <- subset(CigarettesSW, year == \"1995\")\n\n\n# estimate the model\ncig_ivreg2 <- ivreg(log(packs) ~ log(rprice) + \n                                 log(rincome) | log(rincome) + \n                    salestax, data = c1995)\n\ncoeftest(cig_ivreg2, vcov = vcovHC, type = \"HC1\")\n\n\nt test of coefficients:\n\n             Estimate Std. Error t value  Pr(>|t|)    \n(Intercept)   9.43066    1.25939  7.4883 1.935e-09 ***\nlog(rprice)  -1.14338    0.37230 -3.0711  0.003611 ** \nlog(rincome)  0.21452    0.31175  0.6881  0.494917    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nWe obtain \\[\\begin{align}\n  \\widehat{\\log(Q_i^{cigarettes})} = \\underset{(1.26)}{9.42} - \\underset{(0.37)}{1.14} \\log(P_i^{cigarettes}) + \\underset{(0.31)}{0.21} \\log(income_i). \\label{eq:emcigstsls2}\n\\end{align}\\]\nIn the following we add the cigarette-specific taxes (\\(cigtax_i\\)) as a further instrumental variable and estimate again using TSLS.\n\n# add cigtax to the data set\nCigarettesSW$cigtax <- with(CigarettesSW, tax/cpi)\n\nc1995 <- subset(CigarettesSW, year == \"1995\")\n\n\n# estimate the model\ncig_ivreg3 <- ivreg(log(packs) ~ log(rprice) + log(rincome) | \n                    log(rincome) + salestax + cigtax, \n                    data = c1995)\n\ncoeftest(cig_ivreg3, vcov = vcovHC, type = \"HC1\")\n\n\nt test of coefficients:\n\n             Estimate Std. Error t value  Pr(>|t|)    \n(Intercept)   9.89496    0.95922 10.3157 1.947e-13 ***\nlog(rprice)  -1.27742    0.24961 -5.1177 6.211e-06 ***\nlog(rincome)  0.28040    0.25389  1.1044    0.2753    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nUsing the two instruments \\(salestax_i\\) and \\(cigtax_i\\) we have \\(m=2\\) for one endogenous regressor – so the coefficient on the endogenous regressor \\(\\log(P_i^{cigarettes})\\) is overidentified. The TSLS estimate of \\(\\eqref{eq:mcigstsls1}\\) is\n\\[\\begin{align}\n\\widehat{\\log(Q_i^{cigarettes})} = \\underset{(0.96)}{9.89} - \\underset{(0.25)}{1.28} \\log(P_i^{cigarettes}) + \\underset{(0.25)}{0.28} \\log(income_i). \\label{eq:emcigstsls3}\n\\end{align}\\]\nShould we trust the estimates presented in \\(\\eqref{eq:emcigstsls2}\\) or rather rely on \\(\\eqref{eq:emcigstsls3}\\)? The estimates obtained using both instruments are more precise since in \\(\\eqref{eq:emcigstsls3}\\) all standard errors reported are smaller than in \\(\\eqref{eq:emcigstsls2}\\). In fact, the standard error for the estimate of the demand elasticity is only two thirds of the standard error when the sales tax is the only instrument used. This is due to more information being used in estimation \\(\\eqref{eq:emcigstsls3}\\). If the instruments are valid, \\(\\eqref{eq:emcigstsls3}\\) can be considered more reliable.\nHowever, without insights regarding the validity of the instruments it is not sensible to make such a statement. This stresses why checking instrument validity is essential. Chapter @ref(civ) briefly discusses guidelines in checking instrument validity and presents approaches that allow to test for instrument relevance and exogeneity under certain conditions. These are then used in an application to the demand for cigarettes in Chapter @ref(attdfc)."
  },
  {
    "objectID": "07-Instrumental-Variables.html#civ",
    "href": "07-Instrumental-Variables.html#civ",
    "title": "7  Instrumental Variables Regression",
    "section": "7.3 Checking Instrument Validity",
    "text": "7.3 Checking Instrument Validity\n\n7.3.1 Instrument Relevance\nInstruments that explain little variation in the endogenous regressor \\(X_i\\) are called weak instruments. Weak instruments provide little information about the variation in \\(X_i\\) that is exploited by IV regression to estimate the effect of interest: the estimate of the coefficient on the endogenous regressor is estimated inaccurately. Moreover, weak instruments cause the distribution of the estimator to deviate considerably from a normal distribution even in large samples such that the usual methods for obtaining inference about the true coefficient on \\(X_i\\) may produce wrong results.\nConsider the case of a single endogenous regressor \\(X_i\\) and \\(m\\) instruments \\(Z_{1i},\\dots,Z_{mi}\\). If the coefficients on all instruments in the population first-stage regression of a TSLS estimation are zero, the instruments do not explain any of the variation in the \\(X_i\\) which clearly violates assumption that instruments must be relevant. Although the latter case is unlikely to be encountered in practice, we should ask ourselves to what extent the assumption of instrument relevance should be fulfilled. While this is hard to answer for general IV regression, in the case of a endogenous regressor \\(X_i\\) one may use : Compute the \\(F\\)-statistic which corresponds to the hypothesis that the coefficients on \\(Z_{1i},\\dots,Z_{mi}\\) are all zero in the first-stage regression. If the \\(F\\)-statistic is less than \\(10\\), the instruments are such that the TSLS estimate of the coefficient on \\(X_i\\) is probably biased and no valid statistical inference about its true value can be made.\nThis rule of thumb is easily implemented in . Run the first-stage regression using lm() and subsequently compute the heteroskedasticity-robust \\(F\\)-statistic by means of linearHypothesis(). This is part of the application to the demand for cigarettes discussed in Chapter @ref(attdfc).\n\nIf Instruments are Weak\nThere are two ways to proceed if instruments are weak:\n\nDiscard the weak instruments and/or find stronger instruments. While the former is only an option if the unknown coefficients remain identified when the weak instruments are discarded, the latter can be very difficult and even may require a redesign of the whole study.\nStick with the weak instruments but use methods that improve upon TSLS in this scenario, for example limited information maximum likelihood estimation. (Out of the scope of this course.)\nUse tests that allow for inferences robust to weak instruments: \n\n\n\n\n\n7.3.2 Instrument Validity\nIf there is correlation between an instrument and the error term, IV regression is not consistent. The overidentifying restrictions test (also called the \\(J\\)-test) is an approach to test the hypothesis that instruments are exogenous. For the \\(J\\)-test to be applicable there need to be more instruments than endogenous regressors.\n\nTake \\(\\hat{\\eps}_i^{TSLS},\\ i = 1,\\dots,n\\), the residuals of the TSLS estimation of the general IV regression model \\(\\eqref{eq:givmodel}\\). Run the OLS regression \\[\\begin{align}\n\\hat{\\eps}_i^{TSLS} =& \\delta_0 + \\delta_1 Z_{1i} + \\dots + \\delta_m Z_{mi} + \\delta_{m+1} W_{1i} + \\dots + \\delta_{m+r} W_{ri} + e_i \\label{eq:jstatreg}\n\\end{align}\\] and test the joint hypothesis\n\\[\nH_0: \\delta_1 = \\dots \\delta_{m} = 0\n\\]\nwhich states that all instruments are exogenous. This can be done using the corresponding \\(F\\)-statistic by computing\n\\[\nJ = m  F.\n\\]\nThis test is the overidentifying restrictions test and the statistic is called the \\(J\\)-statistic with\n\\[\nJ \\overset{H_0}{\\to}_d \\chi^2_{m-(K-1)}\\quad\\text{as}\\quad n\\to\\infty\n\\]\nunder the . The degrees of freedom \\(m-(K-1)\\) state the degree of overidentification since this is the number of instruments \\(m\\) minus the number of endogenous regressors \\(K-1\\).\nIt is important to note that the \\(J\\)-statistic is only \\(\\chi^2_{m-(K-1)}\\) distributed when the error term \\(\\eps_i\\) in the regression @ref(eq:jstatreg) is homoskedastic. A discussion of the heteroskedasticity-robust \\(J\\)-statistic is beyond the scope of this chapter. The application in the next section shows how to apply the \\(J\\)-test using linearHypothesis()."
  },
  {
    "objectID": "07-Instrumental-Variables.html#attdfc",
    "href": "07-Instrumental-Variables.html#attdfc",
    "title": "7  Instrumental Variables Regression",
    "section": "7.4 Application to the Demand for Cigarettes",
    "text": "7.4 Application to the Demand for Cigarettes\nAre the general sales tax and the cigarette-specific tax valid instruments? If not, TSLS is not helpful to estimate the demand elasticity for cigarettes discussed in Chapter @ref(TGIVRM). As discussed in Chapter @ref(TIVEWASRAASI), both variables are likely to be relevant but whether they are exogenous is a different question.\nOne can argue that cigarette-specific taxes could be endogenous because there might be state specific historical factors like economic importance of the tobacco farming and cigarette production industry that lobby for low cigarette specific taxes. Since it is plausible that tobacco growing states have higher rates of smoking than others, this would lead to endogeneity of cigarette specific taxes. If we had data on the size on the tobacco and cigarette industry, we could solve this potential issue by including the information in the regression. Unfortunately, this is not the case.\nHowever, since the role of the tobacco and cigarette industry is a factor that can be assumed to differ across states but not over time we may exploit the panel structure of CigarettesSW. Alternatively, a (non-panel) regression using data on changes between two time periods eliminates such state specific and time invariant effects. Next, we consider such changes in variables between 1985 and 1995. That is, we are interested in estimating the long-run elasticity of the demand for cigarettes.\nThe model to be estimated by TSLS using the general sales tax and the cigarette-specific sales tax as instruments hence is \\[\\begin{align}\n\\begin{split}\n  \\log(Q_{i,1995}^{cigarettes}) - \\log(Q_{i,1985}^{cigarettes}) =\n  & \\, \\beta_1 + \\beta_2 \\left[\\log(P_{i,1995}^{cigarettes}) - \\log(P_{i,1985}^{cigarettes}) \\right] \\\\\n  &+ \\beta_3 \\left[\\log(income_{i,1995}) - \\log(income_{i,1985})\\right] + \\eps_i. \\end{split}(\\#eq:diffivreg)\n\\end{align}\\]\nWe first create differences from 1985 to 1995 for the dependent variable, the regressors and both instruments.\n\n# subset data for year 1985\nc1985 <- subset(CigarettesSW, year == \"1985\")\n\n# define differences in variables\npacksdiff <- log(c1995$packs) - log(c1985$packs)\n\npricediff <- log(c1995$price/c1995$cpi) - log(c1985$price/c1985$cpi)\n\nincomediff <- log(c1995$income/c1995$population/c1995$cpi) -\nlog(c1985$income/c1985$population/c1985$cpi)\n\nsalestaxdiff <- (c1995$taxs - c1995$tax)/c1995$cpi - (c1985$taxs - c1985$tax)/c1985$cpi\n\ncigtaxdiff <- c1995$tax/c1995$cpi - c1985$tax/c1985$cpi\n\nWe now perform three different IV estimations of @ref(eq:diffivreg) using ivreg():\n\nTSLS using only the difference in the sales taxes between 1985 and 1995 as the instrument.\nTSLS using only the difference in the cigarette-specific sales taxes 1985 and 1995 as the instrument.\nTSLS using both the difference in the sales taxes 1985 and 1995 and the difference in the cigarette-specific sales taxes 1985 and 1995 as instruments.\n\n\n# estimate the three models\ncig_ivreg_diff1 <- ivreg(packsdiff ~ pricediff + \n                           incomediff | incomediff + \n                         salestaxdiff)\n\ncig_ivreg_diff2 <- ivreg(packsdiff ~ pricediff + \n                           incomediff | incomediff + \n                         cigtaxdiff)\n\ncig_ivreg_diff3 <- ivreg(packsdiff ~ pricediff + \n                           incomediff | incomediff + \n                         salestaxdiff + cigtaxdiff)\n\nAs usual we use coeftest() in conjunction with vcovHC() to obtain robust coefficient summaries for all models.\n\n# robust coefficient summary for 1.\ncoeftest(cig_ivreg_diff1, vcov = vcovHC, type = \"HC1\")\n\n\nt test of coefficients:\n\n             Estimate Std. Error t value  Pr(>|t|)    \n(Intercept) -0.117962   0.068217 -1.7292   0.09062 .  \npricediff   -0.938014   0.207502 -4.5205 4.454e-05 ***\nincomediff   0.525970   0.339494  1.5493   0.12832    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n# robust coefficient summary for 2.\ncoeftest(cig_ivreg_diff2, vcov = vcovHC, type = \"HC1\")\n\n\nt test of coefficients:\n\n             Estimate Std. Error t value  Pr(>|t|)    \n(Intercept) -0.017049   0.067217 -0.2536    0.8009    \npricediff   -1.342515   0.228661 -5.8712 4.848e-07 ***\nincomediff   0.428146   0.298718  1.4333    0.1587    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n# robust coefficient summary for 3.\ncoeftest(cig_ivreg_diff3, vcov = vcovHC, type = \"HC1\")\n\n\nt test of coefficients:\n\n             Estimate Std. Error t value  Pr(>|t|)    \n(Intercept) -0.052003   0.062488 -0.8322    0.4097    \npricediff   -1.202403   0.196943 -6.1053 2.178e-07 ***\nincomediff   0.462030   0.309341  1.4936    0.1423    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nWe proceed by generating a tabulated summary of the estimation results using stargazer().\n\nlibrary(stargazer)\n# gather robust standard errors in a list\nrob_se <- list(sqrt(diag(vcovHC(cig_ivreg_diff1, type = \"HC1\"))),\n               sqrt(diag(vcovHC(cig_ivreg_diff2, type = \"HC1\"))),\n               sqrt(diag(vcovHC(cig_ivreg_diff3, type = \"HC1\"))))\n\n# generate table\nstargazer(cig_ivreg_diff1, cig_ivreg_diff2, cig_ivreg_diff3,\n  header = FALSE, \n  type = \"latex\",\n  omit.table.layout = \"n\",\n  digits = 3, \n  column.labels = c(\"IV: salestax\", \"IV: cigtax\", \n                    \"IVs: salestax, cigtax\"),\n  dep.var.labels.include = FALSE,\n  dep.var.caption = \n\"Dependent Variable: 1985-1995 Difference in Log per Pack Price\",\n  se = rob_se)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTable @ref(tab:tslseotlteotdfcupd) reports negative estimates of the coefficient on pricediff that are quite different in magnitude. Which one should we trust? This hinges on the validity of the instruments used. To assess this we compute \\(F\\)-statistics for the first-stage regressions of all three models to check instrument relevance.\n\n# first-stage regressions\nmod_relevance1 <- lm(pricediff ~ salestaxdiff + incomediff)\nmod_relevance2 <- lm(pricediff ~ cigtaxdiff   + incomediff)\nmod_relevance3 <- lm(pricediff ~ incomediff   + salestaxdiff + \n                                                cigtaxdiff)\n\n\n# check instrument relevance for model (1)\nlinearHypothesis(mod_relevance1, \n                 \"salestaxdiff = 0\", \n                 vcov = vcovHC, type = \"HC1\")\n\nLinear hypothesis test\n\nHypothesis:\nsalestaxdiff = 0\n\nModel 1: restricted model\nModel 2: pricediff ~ salestaxdiff + incomediff\n\nNote: Coefficient covariance matrix supplied.\n\n  Res.Df Df      F    Pr(>F)    \n1     46                        \n2     45  1 28.445 3.009e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n# check instrument relevance for model (2)\nlinearHypothesis(mod_relevance2, \n                 \"cigtaxdiff = 0\", \n                 vcov = vcovHC, type = \"HC1\")\n\nLinear hypothesis test\n\nHypothesis:\ncigtaxdiff = 0\n\nModel 1: restricted model\nModel 2: pricediff ~ cigtaxdiff + incomediff\n\nNote: Coefficient covariance matrix supplied.\n\n  Res.Df Df      F   Pr(>F)    \n1     46                       \n2     45  1 98.034 7.09e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n# check instrument relevance for model (3)\nlinearHypothesis(mod_relevance3, \n                 c(\"salestaxdiff = 0\", \"cigtaxdiff = 0\"), \n                 vcov = vcovHC, type = \"HC1\")\n\nLinear hypothesis test\n\nHypothesis:\nsalestaxdiff = 0\ncigtaxdiff = 0\n\nModel 1: restricted model\nModel 2: pricediff ~ incomediff + salestaxdiff + cigtaxdiff\n\nNote: Coefficient covariance matrix supplied.\n\n  Res.Df Df      F    Pr(>F)    \n1     46                        \n2     44  2 76.916 4.339e-15 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nAll \\(F\\)-statistics are larger than \\(10\\); so, the rule of thumb for detecting weak instruments would suggest that the instruments are not weak.\nNext, we also conduct the overidentifying restrictions test for model three which is the only model where the coefficient on the difference in log prices is overidentified (\\(m=2\\), \\((K-1)=1\\)) such that the \\(J\\)-statistic can be computed. To do this we take the residuals stored in cig_ivreg_diff3 and regress them on both instruments and the presumably exogenous regressor incomediff. We again use linearHypothesis() to test whether the coefficients on both instruments are zero which is necessary for the exogeneity assumption to be fulfilled. Note that with test = \"Chisq\" we obtain a chi-squared distributed test statistic instead of an \\(F\\)-statistic.\n\n# compute the J-statistic\ncig_iv_OR <- lm(residuals(cig_ivreg_diff3) ~ incomediff + \n                                 salestaxdiff + cigtaxdiff)\n\ncig_OR_test <- linearHypothesis(cig_iv_OR, \n                               c(\"salestaxdiff = 0\", \n                                 \"cigtaxdiff = 0\"), \n                               test = \"Chisq\")\ncig_OR_test\n\nLinear hypothesis test\n\nHypothesis:\nsalestaxdiff = 0\ncigtaxdiff = 0\n\nModel 1: restricted model\nModel 2: residuals(cig_ivreg_diff3) ~ incomediff + salestaxdiff + cigtaxdiff\n\n  Res.Df     RSS Df Sum of Sq Chisq Pr(>Chisq)  \n1     46 0.37472                                \n2     44 0.33695  2  0.037769 4.932    0.08492 .\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCaution: In this case the \\(p\\)-value reported by linearHypothesis() is wrong because the degrees of freedom are set to \\(2\\). This differs from the degree of overidentification (\\(m-(K-1)=2-(2-1)=1\\)) so the \\(J\\)-statistic is \\(\\chi^2_1\\) distributed instead of following a \\(\\chi^2_2\\) distribution as assumed defaultly by linearHypothesis(). We may compute the correct \\(p\\)-value using pchisq().\n\n# compute correct p-value for J-statistic\npchisq(cig_OR_test[2, 5], df = 1, lower.tail = FALSE)\n\n[1] 0.02636406\n\n\nSince this value is smaller than \\(0.05\\) we reject the hypothesis that both instruments are exogenous at the level of \\(5\\%\\). This means one of the following:\n\nThe sales tax is an invalid instrument for the per-pack price.\nThe cigarettes-specific sales tax is an invalid instrument for the per-pack price.\nBoth instruments are invalid.\n\nOne can argue that the assumption of instrument exogeneity is more likely to hold for the general sales tax such that the IV estimate of the long-run elasticity of demand for cigarettes we consider the most trustworthy is \\(-0.94\\), the TSLS estimate obtained using the general sales tax as the only instrument.\nThe interpretation of this estimate is that over a 10-year period, an increase in the average price per package by one percent is expected to decrease consumption by about \\(0.94\\) percentage points. This suggests that, in the long run, price increases can reduce cigarette consumption considerably.\n\n\n\n\nHanck, Christoph, Martin Arnold, Alexander Gerber, and Martin Schmelzer. 2021. “Introduction to Econometrics with R.” www.econometrics-with-r.org."
  },
  {
    "objectID": "05-Small-Sample-Inference.html#real-data-practice",
    "href": "05-Small-Sample-Inference.html#real-data-practice",
    "title": "5  Small Sample Inference",
    "section": "5.6 Real Data Practice",
    "text": "5.6 Real Data Practice\n\n## The AER package contains a lot of datasets \nsuppressPackageStartupMessages(library(AER))\n\n## Attach the DoctorVisits data to make it usable\ndata(\"DoctorVisits\")\n\n## Make the data artifically a small data set \nn            <- 25 # small sample size\nDoctorVisits <- DoctorVisits[1:n, ]\n\nlm_obj <- lm(visits ~ gender + age + income, data = DoctorVisits)\n\nThe above R codes estimate the following regression model \\[\nY_i = \\beta_1 + \\beta_{gender} X_{gender,i}\n              + \\beta_{age} X_{age,i}\n              + \\beta_{income} X_{income,i} + \\varepsilon_i,\n\\] where \\(i=1,\\dots,n=5190\\) and\n\n\\(X_{gender,i}=1\\) if the \\(i\\)th subject is a woman and \\(X_{gender,i}=0\\) if the \\(i\\)th subject is a man\n\\(X_{age,i}\\) is the age of subject \\(i\\) measured in years divided by \\(100\\)\n\\(X_{income,i}\\) is the annual income of subject \\(i\\) in tens of thousands of dollars\n\nThe following R codes produces the classic regression output table (simular tables are produced by all statistical/econometric software packages):\n\nlm_obj_summary <- summary(lm_obj)\nlm_obj_summary\n\n\nCall:\nlm(formula = visits ~ gender + age + income, data = DoctorVisits)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.26994 -0.15860 -0.09158 -0.06684  0.90842 \n\nCoefficients: (1 not defined because of singularities)\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept)   1.04727    0.20037   5.227 3.05e-05 ***\ngenderfemale -0.06702    0.13685  -0.490    0.629    \nage                NA         NA      NA       NA    \nincome        0.24742    0.40989   0.604    0.552    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.3416 on 22 degrees of freedom\nMultiple R-squared:  0.02785,   Adjusted R-squared:  -0.06052 \nF-statistic: 0.3152 on 2 and 22 DF,  p-value: 0.7329\n\n\nThe above regression output table contains the following information:\n\nEstimate: The column “Estimate” containes the estimates \\[\n\\hat\\beta_{j}\\quad j\\in\\{1,gender, age, income\\}\n\\] You can extract them using coef(lm_obj).\nStd. Error: The column “Std. Error” containes the estimates \\[\n\\widehat{\\operatorname{SE}}(\\hat\\beta_{j}|X)\\quad j\\in\\{1,gender, age, income\\}\n\\]\n\nYou can extract the total \\((K\\times K)=(4\\times 4)\\) variance-covariance matrix estimate \\(\\widehat{Var}(\\hat\\beta|X)\\) using vcov(lm_obj).\nThe diagonal of vcov(lm_obj) contains the variance estimates \\(\\widehat{Var}(\\hat\\beta_j|X)\\), \\(j\\in\\{1,gender, age, income\\}\\). * The square root of the diagonal gives the estimated standard errors; i.e. sqrt(diag(vcov(lm_obj))).\n\nt value: The column “t value” contains the observed \\(t\\) test statistics \\[\nt_{obs,j}=\\frac{\\hat\\beta_{j}}{\\widehat{\\operatorname{SE}}(\\hat\\beta_{j}|X)}\\quad j\\in\\{1,gender, age, income\\}\n\\] You can extract the values using lm_obj_summary$coefficients[,3].\nPr(>|t|): The column “Pr(>|t|)” contains the \\(p\\) values \\[\nP_{H_0}(|t|>t_{obs,j})\\quad j\\in\\{1,gender, age, income\\}\n\\] You can extract the values using lm_obj_summary$coefficients[,4].\nResidual standard error \\(\\sqrt{\\frac{1}{n-K}\\sum_{i=1}^n\\hat\\varepsilon^2_i}=\\) sqrt(sum(resid(lm_obj)^2)/(n-4)) \\(=\\) 0.3495895\nMultiple R-squared: \\(R^2=\\) lm_obj_summary$r.squared \\(=\\) 0.0278524\nAdjusted R-squared: \\(\\bar{R}^2=\\) lm_obj_summary$adj.r.squared \\(=\\) -0.0605247\nF-statistic: This is a standard \\(F\\) test that tests the null hypothesis that all parameters except the intercept are zero; i.e. \\(H_0\\): \\(\\beta_{gender}=\\beta_{age}=\\beta_{income}=0\\) versus \\(H_A\\): At least one parameter is not zero. So, this is equivalent to:\n\n\ncar::linearHypothesis(\n      model = lm_obj, \n      hypothesis.matrix = c(\"genderfemale=0\", \"age=0\", \"income=0\"))  \n\n\nSince \\(X_{gender,i}\\) is a dummy variable,\n\nR Package Stargazer\nA more beautiful and “publication ready” regression output can be produced using the R package stargazer and its function stargazer():\n\n\n\n\n\nstargazer(lm_obj, type=\"html\") # Hint: use type = \"latex\" to produce a latex table\n\n\n\n\n\n\n\n\n\n\nDependent variable:\n\n\n\n\n\n\n\n\n\n\n\n\nvisits\n\n\n\n\n\n\n\n\ngenderfemale\n\n\n-0.067\n\n\n\n\n\n\n(0.137)\n\n\n\n\n\n\n\n\n\n\nage\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nincome\n\n\n0.247\n\n\n\n\n\n\n(0.410)\n\n\n\n\n\n\n\n\n\n\nConstant\n\n\n1.047***\n\n\n\n\n\n\n(0.200)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nObservations\n\n\n25\n\n\n\n\nR2\n\n\n0.028\n\n\n\n\nAdjusted R2\n\n\n-0.061\n\n\n\n\nResidual Std. Error\n\n\n0.342 (df = 22)\n\n\n\n\nF Statistic\n\n\n0.315 (df = 2; 22)\n\n\n\n\n\n\n\n\nNote:\n\n\np<0.1; p<0.05; p<0.01\n\n\n\n\n\n\n\n\n5.6.1 Critical Discussion of the Regression Results\nYou cannot trust the above results due to the following reasons:\n\nThe dependent variable \\(Y_i\\) is a categorial variable taking values unique(DoctorVisits$visits) = 1, 2. 1.1 Thus the error term \\(\\varepsilon_i\\) cannot be normal distributed.\nThe residuals indicate heteroskedastic variances.\n\n\nplot(lm_obj, which = 1)"
  },
  {
    "objectID": "05-Small-Sample-Inference.html#real-data-example",
    "href": "05-Small-Sample-Inference.html#real-data-example",
    "title": "5  Small Sample Inference",
    "section": "5.6 Real Data Example",
    "text": "5.6 Real Data Example\n\n## The AER package contains a lot of datasets \nsuppressPackageStartupMessages(library(AER))\n\n## Attach the DoctorVisits data to make it usable\ndata(\"DoctorVisits\")\n\nlm_obj <- lm(visits ~ gender + age + income, data = DoctorVisits)\n\nThe above R codes estimate the following regression model \\[\nY_i = \\beta_1 + \\beta_{gender} X_{gender,i}\n              + \\beta_{age} X_{age,i}\n              + \\beta_{income} X_{income,i} + \\varepsilon_i,\n\\] where \\(i=1,\\dots,n\\) and\n\n\\(X_{gender,i}=1\\) if the \\(i\\)th subject is a woman and \\(X_{gender,i}=0\\) if the \\(i\\)th subject is a man\n\\(X_{age,i}\\) is the age of subject \\(i\\) measured in years divided by \\(100\\)\n\\(X_{income,i}\\) is the annual income of subject \\(i\\) in tens of thousands of dollars\n\nThe following R codes produces the classic regression output table (simular tables are produced by all statistical/econometric software packages):\n\nlm_obj_summary <- summary(lm_obj)\nlm_obj_summary\n\n\nCall:\nlm(formula = visits ~ gender + age + income, data = DoctorVisits)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-0.5009 -0.3435 -0.2306 -0.1682  8.6174 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept)   0.15371    0.03607   4.262 2.07e-05 ***\ngenderfemale  0.06245    0.02345   2.662  0.00778 ** \nage           0.40235    0.05713   7.043 2.13e-12 ***\nincome       -0.08231    0.03167  -2.599  0.00938 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.7908 on 5186 degrees of freedom\nMultiple R-squared:  0.01885,   Adjusted R-squared:  0.01829 \nF-statistic: 33.22 on 3 and 5186 DF,  p-value: < 2.2e-16\n\n\nThe above regression output table contains the following information:\n\nEstimate: The column “Estimate” containes the estimates \\[\n\\hat\\beta_{j},\\quad j\\in\\{1,gender, age, income\\}\n\\] You can extract them using coef(lm_obj).\nStd. Error: The column “Std. Error” containes the estimates \\[\n\\widehat{\\operatorname{SE}}(\\hat\\beta_{j}|X),\\quad j\\in\\{1,gender, age, income\\}\n\\]\n\nYou can extract the total \\((K\\times K)=(4\\times 4)\\) variance-covariance matrix estimate \\(\\widehat{Var}(\\hat\\beta|X)\\) using vcov(lm_obj).\nThe diagonal diag(vcov(lm_obj)) contains the variance estimates \\(\\widehat{Var}(\\hat\\beta_j|X)\\), \\(j\\in\\{1,gender, age, income\\}\\).\nThe square root of the diagonal sqrt(diag(vcov(lm_obj))) allows you to compute the estimated standard errors shown in the regression table.\n\nt value: The column “t value” contains the observed \\(t\\) test statistics \\[\nt_{obs,j}=\\frac{\\hat\\beta_{j}}{\\widehat{\\operatorname{SE}}(\\hat\\beta_{j}|X)},\\quad j\\in\\{1,gender, age, income\\}\n\\] You can extract the values using lm_obj_summary$coefficients[,3].\nPr(>|t|): The column “Pr(>|t|)” contains the \\(p\\) values \\[\nP_{H_0}(|t|>t_{obs,j}),\\quad j\\in\\{1,gender, age, income\\}\n\\] You can extract the values using lm_obj_summary$coefficients[,4].\nResidual standard error \\(\\sqrt{\\frac{1}{n-K}\\sum_{i=1}^n\\hat\\varepsilon^2_i}=\\) sqrt(sum(resid(lm_obj)^2)/(n-4)) \\(=\\) 0.7908\nMultiple R-squared: \\(R^2=\\) lm_obj_summary$r.squared \\(=\\) 0.01885\nAdjusted R-squared: \\(\\bar{R}^2=\\) lm_obj_summary$adj.r.squared \\(=\\) 0.01829\nF-statistic: This is a standard \\(F\\) test that tests the null hypothesis that all parameters except the intercept are zero; i.e. \\(H_0\\): \\(\\beta_{gender}=\\beta_{age}=\\beta_{income}=0\\) versus \\(H_A\\): At least one parameter is not zero. You can replicate this test result using the following R code:\n\n\ncar::linearHypothesis(\n      model = lm_obj, \n      hypothesis.matrix = c(\"genderfemale=0\", \"age=0\", \"income=0\"))  \n\n\n\n\nR Package Stargazer\nA more beautiful and “publication ready” regression output can be produced using the R package stargazer and its function stargazer():\n\n\n\n\n\n# Hint: use type = \"latex\" to produce a latex table\nstargazer(lm_obj, type=\"html\")\n\n\n\n\n\n\n\n\n\n\nDependent variable:\n\n\n\n\n\n\n\n\n\n\n\n\nvisits\n\n\n\n\n\n\n\n\ngenderfemale\n\n\n0.062***\n\n\n\n\n\n\n(0.023)\n\n\n\n\n\n\n\n\n\n\nage\n\n\n0.402***\n\n\n\n\n\n\n(0.057)\n\n\n\n\n\n\n\n\n\n\nincome\n\n\n-0.082***\n\n\n\n\n\n\n(0.032)\n\n\n\n\n\n\n\n\n\n\nConstant\n\n\n0.154***\n\n\n\n\n\n\n(0.036)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nObservations\n\n\n5,190\n\n\n\n\nR2\n\n\n0.019\n\n\n\n\nAdjusted R2\n\n\n0.018\n\n\n\n\nResidual Std. Error\n\n\n0.791 (df = 5186)\n\n\n\n\nF Statistic\n\n\n33.218*** (df = 3; 5186)\n\n\n\n\n\n\n\n\nNote:\n\n\np<0.1; p<0.05; p<0.01\n\n\n\n\n\n\n\n\n5.6.1 Critical Discussion of the Regression Results\nThe above real data analysis does not fit into the small sample inference framework we introduced in this chapter.\n\nThe dependent variable \\(Y_i\\) visits is a categorial variable taking finitely many discrete values unique(DoctorVisits$visits) = 1, 2, 3, 4, 8, 5, 7, 6, 9, 0. Consequently, the error term \\(\\varepsilon_i\\) cannot be normal distributed.\nThe diagnostic plot (“Residuals versus Fitted”) indicates a possible issue violation of the homoskedasticity assumption. In case of homokedastic variances, the data points \\((\\hat\\varepsilon_i,\\hat{Y}_i)\\), \\(i=1,\\dots,n\\) should roughly show a homogenous scattering across the fitted values \\(\\hat{Y}_i=X\\hat\\beta\\). This seems not to be the case here.\n\n\nplot(lm_obj, which = 1)\n\n\n\n\nLukily, the data set DoctorVisits has a really large sample size of \\(n=\\) 5190 and thus there is a way out of this problem: The large sample inference framework introduced in the next chapter."
  },
  {
    "objectID": "02-Review-Prob_n_Stats.html#basics-in-probability-theory",
    "href": "02-Review-Prob_n_Stats.html#basics-in-probability-theory",
    "title": "2  Review: Probability",
    "section": "2.1 Basics in Probability Theory",
    "text": "2.1 Basics in Probability Theory\nProbability is the mathematical language for quantifying uncertainty. We can apply probability theory to a diverse set of problems, from coin flipping to the analysis of econometric problems. The starting point is to specify the sample space, that is, the set of possible outcomes.\n\n2.1.1 Sample Spaces and (Elementary) Events\nThe sample space \\(\\Omega,\\) is the set of possible outcomes of an experiment. Points \\(\\omega\\) in \\(\\Omega\\) are called sample outcomes or realizations or elementary events. Events are subsets of \\(\\Omega\\).\nExample: If we toss a coin twice then \\(\\Omega=\\{H H, H T, T H, T T\\}.\\) The event that the first toss is heads is \\(A=\\{H H, H T\\}.\\)\nExample: Let \\(\\omega\\) be the outcome of a measurement of some physical quantity, for example, temperature. Then \\(\\Omega=\\mathbb{R}=(-\\infty, \\infty).\\) The event that the measurement is larger than 10 but less than or equal to 23 is \\(A=(10,23].\\)\nExample: If we toss a coin forever then the sample space is the infinite set \\(\\Omega=\\left\\{\\omega=\\left(\\omega_{1}, \\omega_{2}, \\omega_{3}, \\ldots,\\right)|\\omega_{i} \\in\\{H, T\\}\\right\\}\\) Let \\(A\\) be the event that the first head appears on the third toss. Then \\(A=\\left\\{\\left(\\omega_{1}, \\omega_{2}, \\omega_{3}, \\ldots,\\right)| \\omega_{1}=T, \\omega_{2}=T, \\omega_{3}=H, \\omega_{i} \\in\\{H, T\\} \\text { for } i>3\\right\\}.\\)\nGiven an event \\(A,\\) let \\(A^{c}=\\{\\omega \\in \\Omega ; \\omega \\notin A\\}\\) denote the complement of \\(A\\). Informally, \\(A^{c}\\) can be read as “not \\(A\\).” The complement of \\(\\Omega\\) is the empty set \\(\\emptyset\\). The union of events \\(A\\) and \\(B\\) is defined as \\[\nA\\cup B=\\{\\omega \\in \\Omega|\\omega\\in A\\text{ or }\\omega \\in B\\text{ or }\\omega\\in\\text{ both}\\}\n\\] which can be thought of as “\\(A\\) or \\(B\\).” If \\(A_{1}, A_{2}, \\ldots\\) is a sequence of sets then \\[\n\\bigcup_{i=1}^{\\infty} A_{i}=\\left\\{\\omega \\in \\Omega: \\omega \\in A_{i} \\text { for at least one i }\\right\\}.\n\\] The intersection of \\(A\\) and \\(B\\) is defined as \\[\nA \\cap B=\\{\\omega \\in \\Omega ; \\omega \\in A\\text{ and }\\omega \\in B\\}\n\\] which reads as “\\(A\\) and \\(B\\).” Often \\(A \\cap B\\) is also written shortly as \\(AB\\) or as \\(A,B.\\)\nIf \\(A_{1}, A_{2}, \\ldots\\) is a sequence of sets then \\[\n\\bigcap_{i=1}^{\\infty} A_{i}=\\left\\{\\omega \\in \\Omega: \\omega \\in A_{i} \\text { for all i }\\right\\}.\n\\]\nIf every element of \\(A\\) is also contained in \\(B\\) we write \\(A \\subset B\\) or, equivalently, \\(B \\supset A\\). If \\(A\\) is a finite set, let \\(|A|\\) denote the number of elements in \\(A .\\) We say that \\(A_{1}, A_{2}, \\ldots\\) are disjoint or mutually exclusive if \\(A_{i} \\cap A_{j}=\\emptyset\\) whenever \\(i \\neq j\\). For example, \\(A_{1}=[0,1), A_{2}=[1,2), A_{3}=[2,3), \\ldots\\) are disjoint. A partition of \\(\\Omega\\) is a sequence of disjoint sets \\(A_{1}, A_{2}, \\ldots\\) such that \\(\\bigcup_{i=1}^{\\infty} A_{i}=\\Omega\\).\nSummary: Sample space and events\n\\[\n\\begin{array}{ll}\n\\Omega & \\text { sample space } \\\\\n\\omega & \\text { outcome, elementary event, realization}\\\\\nA      & \\text { event (subset of } \\Omega) \\\\\n|A|    & \\text { number of points in } A \\text { (if } A \\text { is finite) }\\\\\nA^{c}  & \\text { complement of } A (\\operatorname{not} A)\\\\\nA \\cup B &\\text{ union }(A\\text{ or }B)\\\\\nA \\cap B &\\text{ intersection }(A \\text { and } B);\\text{ short notations: }AB\\text{ or }A,B\\\\\nA \\subset B &\\text{ set inclusion }(A \\text{ is a subset of or equal to }B)\\\\\n\\emptyset   &\\text{ null event (always false)}\\\\\n\\Omega      &\\text{ true event (always true)}\n\\end{array}\n\\]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2.1.2 Probability\nWe want to assign a real number \\(P(A)\\) to every event \\(A,\\) called the probability of \\(A .\\) We also call \\(P\\) a probability distribution or a probability measure. To qualify as a probability, \\(P\\) has to satisfy three axioms. That is, a function \\(P\\) that assigns a real number \\(P(A)\\in[0,1]\\) to each event \\(A\\) is a probability distribution or a probability measure if it satisfies the following three axioms:\n\nAxiom 1: \\(P(A) \\geq 0\\) for every \\(A\\)\nAxiom 2: \\(P(\\Omega)=1\\)\nAxiom 3: If \\(A_{1}, A_{2}, \\ldots\\) are disjoint then\n\n\\[\nP\\left(\\bigcup_{i=1}^{\\infty} A_{i}\\right)=\\sum_{i=1}^{\\infty} P\\left(A_{i}\\right).\n\\]\nNote: It is not always possible to assign a probability to every event \\(A\\) if the sample space is large. For instance, in the case of \\(\\Omega=\\mathbb{R}\\) strange things can happen. There are pathological sets (e.g. Vitali sets) that simply break down the mathematics since they are non-measurable (i.e. we cannot assign probabilities to them). Therefore, in cases like \\(\\Omega=\\mathbb{R}\\), we assign probabilities to a limited class of sets called a \\(\\sigma\\)-field or \\(\\sigma\\)-algebra. For \\(\\Omega=\\mathbb{R}\\), the canonical \\(\\sigma\\)-algebra is the Borel \\(\\sigma\\)-algebra. The Borel \\(\\sigma\\)-algebra on \\(\\mathbb{R}\\) is generated by the collection of all open subsets of \\(\\mathbb{R}\\). In this course, we use the Borel \\(\\sigma\\)-algebra and fortunately we do not have to bother with it any further. It’s there in the background making things work for us.\nOne can derive many properties of \\(P\\) from the axioms. Here are a few:\n\n\\(P(\\emptyset)=0\\)\n\\(A \\subset B\\Rightarrow P(A) \\leq P(B)\\)\n\\(0 \\leq P(A) \\leq 1\\)\n\\(P\\left(A^{c}\\right)=1-P(A)\\)\n\\(A \\cap B=\\emptyset \\Rightarrow P(A \\cup B)=P(A)+P(B)\\)\n\nA less obvious property is given in the following: For any events \\(A\\) and \\(B\\) we have that,\n\\[\nP(A \\cup B)=P(A)+P(B)-P(A B).\n\\]\nExample: Two consecutive coin tosses. Let \\(H_{1}\\) be the event that heads occurs on toss 1 and let \\(H_{2}\\) be the event that heads occurs on toss 2. If all outcomes are equally likely, that is, \\[\nP\\left(\\left\\{H_{1}, H_{2}\\right\\}\\right)=P\\left(\\left\\{H_{1}, T_{2}\\right\\}\\right)=P\\left(\\left\\{T_{1}, H_{2}\\right\\}\\right)=P\\left(\\left\\{T_{1}, T_{2}\\right\\}\\right)=1 / 4,\n\\] then \\[\nP\\left(H_{1} \\cup H_{2}\\right)=P\\left(H_{1}\\right)+P\\left(H_{2}\\right)-P\\left(H_{1} H_{2}\\right)=\\frac{1}{2}+\\frac{1}{2}-\\frac{1}{4}=\\frac{3}{4}.\n\\]\n\nProbabilities as frequencies\nOne can interpret \\(P(A)\\) in terms of frequencies. That is, \\(P(A)\\) is the (infinitely) long run proportion of times that \\(A\\) is true in repetitions. For example, if we say that the probability of heads is \\(1 / 2\\), i.e \\(P(H)=1/2\\) we mean that if we flip the coin many times then the proportion of times we get heads tends to \\(1 / 2\\) as the number of tosses increases. An infinitely long, unpredictable sequence of tosses whose limiting proportion tends to a constant is an idealization, much like the idea of a straight line in geometry.\nThe following R codes approximates the probability \\(P(H)=1/2\\) using 5, 50 and 5,000 many (pseudo) random coin flips:\n\nset.seed(869)\n## 1 (fair) coin-flip:\nresults <- sample(x = c(\"H\", \"T\"), size = 5, replace = TRUE)\n## Relative frequency of \"H\" in 5 coin-flips\nlength(results[results==\"H\"])/5\n\n[1] 0.2\n\n## 10 (fair) coin-flips:\nresults <- sample(x = c(\"H\", \"T\"), size = 50, replace = TRUE)\n## Relative frequency of \"H\" in 50 coin-flips\nlength(results[results==\"H\"])/50\n\n[1] 0.52\n\n## 100000 (fair) coin-flips:\nresults <- sample(x = c(\"H\", \"T\"), size = 5000, replace = TRUE)\n## Relative frequency of \"H\" in 5000 coin-flips\nlength(results[results==\"H\"])/5000\n\n[1] 0.5024\n\n\n\n\n\n2.1.3 Independent Events\nIf we flip a fair coin twice, then the probability of two heads is \\(\\frac{1}{2} \\times \\frac{1}{2}\\). We multiply the probabilities because we regard the two tosses as independent. Two events \\(A\\) and \\(B\\) are called independent if\n\\[\nP(A B)=P(A) P(B).\n\\]\nOr more generally, a whole set of events \\(\\{A_i|i\\in I\\}\\) is independent if\n\\[\nP\\left(\\bigcap_{i \\in J} A_{i}\\right)=\\prod_{i \\in J}P\\left(A_{i}\\right)\n\\] for every finite subset \\(J\\) of \\(I\\), where \\(I\\) denotes the not necessarily finite index set (e.g. \\(I=\\{1,2,\\dots\\}\\)).\nIndependence can arise in two distinct ways. Sometimes, we explicitly assume that two events are independent. For example, in tossing a coin twice, we usually assume the tosses are independent which reflects the fact that the coin has no memory of the first toss.\nIn other instances, we derive independence by verifying that the definition of independence \\(P(A B)=P(A)P(B)\\) holds. For example, in tossing a fair die , let \\(A=\\{2,4,6\\}\\) be the event of observing an even number and let \\(B=\\{1,2,3,4\\}\\) be the event of observing no \\(5\\) and no \\(6\\). Then, \\(A \\cap B=\\{2,4\\}\\) is the event of observing either a \\(2\\) or a \\(4\\). Are the events \\(A\\) and \\(B\\) independent?\n\\[\nP(A B)=\\frac{2}{6}=P(A)P(B)=\\frac{1}{2}\\cdot \\frac{2}{3}\n\\] and so \\(A\\) and \\(B\\) are independent. In this case, we didn’t assume that \\(A\\) and \\(B\\) are independent it just turned out that they were.\nCautionary Note: Suppose that \\(A\\) and \\(B\\) are disjoint events, i.e. \\(AB=\\emptyset,\\) each with positive probability \\(P(A)>0\\) and \\(P(B)>0.\\) Can they be independent? No! This follows since\n\\[\nP(A B)=P(\\emptyset)=0\\neq P(A)P(B)>0.\n\\] Except in this special case, there is no way to judge (in-)dependence by looking at the sets in a Venn diagram.\nSummary: Independent Events\n\n\\(A\\) and \\(B\\) are independent if \\(P(A B)=P(A) P(B)\\).\nIndependence is sometimes assumed and sometimes derived.\nDisjoint events with strictly positive probabilities are not independent.\n\n\n\n2.1.4 Conditional Probability\nIf \\(P(B)>0\\) then the conditional probability of \\(A\\) given \\(B\\) is \\[\nP(A \\mid B)=\\frac{P(A B)}{P(B)}.\n\\] Think of \\(P(A \\mid B)\\) as the fraction of times \\(A\\) occurs among those in which \\(B\\) occurs. Here are some facts about conditional probabilities:\n\nThe rules of probability apply to events on the left of the bar “\\(\\mid\\)”. That is, for any fixed \\(B\\) such that \\(P(B)>0,\\) \\(P(\\cdot \\mid B)\\) is a probability, i.e., it satisfies the three axioms of probability:\n\n\\(P(A \\mid B) \\geq 0\\)\n\\(P(\\Omega \\mid B)=1\\)\nIf \\(A_{1}, A_{2}, \\ldots\\) are disjoint then \\(P\\left(\\bigcup_{i=1}^{\\infty} A_{i} \\mid B\\right)=\\sum_{i=1}^{\\infty} P\\left(A_{i} \\mid B\\right).\\)\n\nBut it’s generally not true that \\(P(A \\mid B \\cup C)=P(A \\mid B)+P(A \\mid C).\\)\n\nIn general it is also not the case that \\(P(A \\mid B)=P(B \\mid A)\\). People get this confused all the time. For example, the probability of spots given you have measles is 1 but the probability that you have measles given that you have spots is not \\(1 .\\) In this case, the difference between \\(P(A \\mid B)\\) and \\(P(B \\mid A)\\) is obvious but there are cases where it is less obvious. This mistake is made often enough in legal cases that it is sometimes called the “prosecutor’s fallacy”.\nExample: A medical test for a disease \\(D\\) has outcomes \\(+\\) and \\(-.\\) The probabilities are:\n\\[\n\\begin{array}{c|cc|c}\n& D & D^{c} \\\\\n\\hline\n+ & .0081 & .0900 &  .0981\\\\\n- & .0009 & .9010 &  .9019\\\\\n\\hline\n  & .0090 & .9910 &  1\n\\end{array}\n\\] From the definition of conditional probability, we have:\n\nSensitivity of the test: \\[P(+\\mid D)=P(+\\cap D) / P(D)=0.0081 /(0.0081+0.0009)=0.9\\]\nSpecificity of the test: \\[P(-\\mid D^{c})=P(-\\cap D^{c}) / P(D^{c})=0.9010/(0.9010+0.0900)\\approx 0.9\\]\n\nApparently, the test is fairly accurate. Sick people yield a positive test result 90 percent of the time and healthy people yield a negative test result about 90 percent of the time. Suppose you go for a test and get a positive result. What is the probability you have the disease? Most people answer \\(0.90=90\\%\\). The correct answer is \\(P(D \\mid+)=P(+\\cap D) / P(+)=0.0081 /(0.0081+0.0900)=0.08.\\) The lesson here is that you need to compute the answer numerically. Don’t trust your intuition.\n\nIndependence via Conditional Probabilities\nIf \\(A\\) and \\(B\\) are independent events then \\[\nP(A \\mid B)=\\frac{P(A B)}{P(B)}=\\frac{P(A) P(B)}{P(B)}=P(A)\n\\] So another interpretation of independence is that knowing \\(B\\) doesn’t change the probability of \\(A\\).\nFrom the definition of conditional probability we can write \\[\nP(A B)=P(A \\mid B) P(B)\n\\] and also \\[\nP(A B)=P(B \\mid A) P(A).\n\\] Often, these formulas give us a convenient way to compute \\(P(A B)\\) when \\(A\\) and \\(B\\) are not independent.\nExample: Draw two cards from a deck, without replacement. Let \\(A\\) be the event that the first draw is Ace of Clubs and let \\(B\\) be the event that the second draw is Queen of Diamonds. Then \\(P(A, B)=P(A) P(B \\mid A)=(1 / 52) \\times(1 / 51)\\)\nSummary: Conditional Probability\n\nIf \\(P(B)>0\\) then \\(P(A \\mid B)=P(A B)/P(B)\\)\n\\(P(\\cdot \\mid B)\\) satisfies the axioms of probability, for fixed \\(B\\). In general, \\(P(A \\mid \\cdot)\\) does not satisfy the axioms of probability, for fixed \\(A\\).\nIn general, \\(P(A \\mid B) \\neq P(B \\mid A)\\).\n\\(A\\) and \\(B\\) are independent if and only if \\(P(A \\mid B)=P(A)\\)."
  },
  {
    "objectID": "04-MultipleReg.html#practice-checking-model-assumptions",
    "href": "04-MultipleReg.html#practice-checking-model-assumptions",
    "title": "4  Multiple Linear Regression",
    "section": "4.5 Practice: Checking Model Assumptions",
    "text": "4.5 Practice: Checking Model Assumptions\nSince we need that\n\\[\nE(\\varepsilon_i|X_i) = 0\n\\] for all values of \\(X_i\\), we need to find a way to check this in a compact manner. This is typically done using diagnostic plots.\n\nBase RTidyverse R\n\n\n\ncar_data <- read.csv(file = \"https://cdn.rawgit.com/lidom/Teaching_Repo/bc692b56/autodata.csv\")\n\nmy_car_df <- data.frame(\n    \"MPG\"   = car_data$MPG.city,\n    \"HP\"    = car_data$Horsepower,\n    \"HP_sq\" = car_data$Horsepower^2\n)\n\nlm_obj_1 <- lm(MPG ~ HP, data = my_car_df)\nlm_obj_2 <- lm(MPG ~ HP + HP_sq, data = my_car_df)\n\npar(mfrow=c(2,2))\nplot(y=my_car_df$MPG, x=my_car_df$HP, \n     main = \"Simple Linear Regression\",\n     xlab = \"Horse Power\", \n     ylab = \"Miles per Gallon\")\nabline(lm_obj_1)\nplot(lm_obj_1, which=1, \n       main = \"Simple Linear Regression\")\nplot(y=my_car_df$MPG, x=my_car_df$HP,\n     main = \"Polynomial Regression (Degree: 2)\",\n     xlab = \"Horse Power\", \n     ylab = \"Miles per Gallon\")\nX_seq <- seq(from = min(my_car_df$HP), \n             to   = max(my_car_df$HP), len = 25)\nlines(y = predict(lm_obj_2, \n                  newdata=data.frame(\"HP\"    = X_seq, \n                                     \"HP_sq\" = X_seq^2)), \n      x = X_seq)\nplot(lm_obj_2, which=1, \n       main = \"Polynomial Regression (Degree: 2)\")\n\n\n\n\n\n\n\n## install.packages(\"tidyverse\")\n## install.packages(\"ggfortify\")\n## install.packages(\"gridExtra\")\nsuppressPackageStartupMessages(library(\"tidyverse\"))\nsuppressPackageStartupMessages(library(\"gridExtra\"))# arrange multiple ggplots\nlibrary(\"ggfortify\") # tidy diagnostic plots\n\ncar_data <- readr::read_csv(\n  file = \"https://cdn.rawgit.com/lidom/Teaching_Repo/bc692b56/autodata.csv\",\n  show_col_types = FALSE)\n\n\nmy_car_df <- car_data |> \n dplyr::mutate(\n  \"MPG\"   = MPG.city, \n  \"HP\"    = Horsepower, \n  \"HP_sq\" = Horsepower^2\n)\n\nlm_obj_1 <- lm(MPG ~ HP, data = my_car_df)\nlm_obj_2 <- lm(MPG ~ HP + HP_sq, data = my_car_df)\n\n\nlibrary(ggfortify)\n\n\n\nmy_car_df |>\nggplot(aes(x=HP, y=MPG)) + \n    geom_point(alpha=0.8, size=3)+\n    stat_smooth(method='lm', formula = y~x) +\n    theme_classic() + \n    labs(x = \"Horse Power\", y = \"Miles per Gallon\", \n         title = \"Simple Linear Regression\")\n\n\n\n##\nautoplot(lm_obj_1, which = 1)\n\n\n\n#plot(lm_obj_1, which=1, \n#       main = \"Simple Linear Regression\")\n##\n# my_car_df |>\n# ggplot(aes(x=HP, y=MPG)) + \n#     geom_point(alpha=0.8, size=3)+\n#     stat_smooth(method='lm', formula = y~poly(x, 2, raw = TRUE)) +\n#     theme_classic() + \n#     labs(x = \"Horse Power\", y = \"Miles per Gallon\", \n#          title = \"Polynomial Regression\", \n#          subtitle = \"Polynomial Degree: 2\")\n# ##\n# plot(lm_obj_2, which=1, \n#        main = \"Polynomial Regression (Degree: 2)\")         \n# ##\n# grid.arrange(p1, p2)"
  },
  {
    "objectID": "04-MultipleReg.html#practice-non-linearity-of-the-regression-line",
    "href": "04-MultipleReg.html#practice-non-linearity-of-the-regression-line",
    "title": "4  Multiple Linear Regression",
    "section": "4.5 Practice: (Non-)Linearity of the Regression Line",
    "text": "4.5 Practice: (Non-)Linearity of the Regression Line\nDiagnostic plots\n\nBase RTidyverse R\n\n\n\ncar_data <- read.csv(file = \"https://cdn.rawgit.com/lidom/Teaching_Repo/bc692b56/autodata.csv\")\n\nmy_car_df <- data.frame(\n    \"MPG\"   = car_data$MPG.city,\n    \"HP\"    = car_data$Horsepower,\n    \"HP_sq\" = car_data$Horsepower^2\n)\n\nlm_obj_1 <- lm(MPG ~ HP, data = my_car_df)\nlm_obj_2 <- lm(MPG ~ HP + HP_sq, data = my_car_df)\n\npar(mfrow=c(2,2))\nplot(y=my_car_df$MPG, x=my_car_df$HP, \n     main = \"Simple Linear Regression\",\n     xlab = \"Horse Power\", \n     ylab = \"Miles per Gallon\")\nabline(lm_obj_1)\nplot(lm_obj_1, which=1, \n       main = \"Simple Linear Regression\")\nplot(y=my_car_df$MPG, x=my_car_df$HP,\n     main = \"Polynomial Regression (Degree: 2)\",\n     xlab = \"Horse Power\", \n     ylab = \"Miles per Gallon\")\nX_seq <- seq(from = min(my_car_df$HP), \n             to   = max(my_car_df$HP), len = 25)\nlines(y = predict(lm_obj_2, \n                  newdata=data.frame(\"HP\"    = X_seq, \n                                     \"HP_sq\" = X_seq^2)), \n      x = X_seq)\nplot(lm_obj_2, which=1, \n       main = \"Polynomial Regression (Degree: 2)\")\n\n\n\n\n\n\n\n## install.packages(\"tidyverse\")\n## install.packages(\"ggfortify\")\n## install.packages(\"ggfortify\")\nsuppressPackageStartupMessages(library(\"tidyverse\"))\nlibrary(\"ggfortify\") # tidy diagnostic plots\n\ncar_data <- readr::read_csv(\n  file = \"https://cdn.rawgit.com/lidom/Teaching_Repo/bc692b56/autodata.csv\",\n  show_col_types = FALSE)\n\n\nmy_car_df <- car_data |> \n dplyr::mutate(\n  \"MPG\"   = MPG.city, \n  \"HP\"    = Horsepower, \n  \"HP_sq\" = Horsepower^2\n)\n\n## Simple Linear Regression\n\nlm_obj_1 <- lm(MPG ~ HP, data = my_car_df)\n\n## Plot: Simple Linear Regression\nmy_car_df |>\nggplot(aes(x=HP, y=MPG)) + \n    geom_point(alpha=0.8, size=3)+\n    stat_smooth(method='lm', formula = y~x) +\n    theme_classic() + \n    labs(x = \"Horse Power\", y = \"Miles per Gallon\", \n         title = \"Simple Linear Regression\")\n\n\n\n## Diagnostic Plot: Simple Linear Regression \nautoplot(lm_obj_1, which = 1)\n\n\n\n## Polynomial Regression\n\nlm_obj_2 <- lm(MPG ~ HP + HP_sq, data = my_car_df)\n\n## Plot: Polynomial Regression\nmy_car_df |>\nggplot(aes(x=HP, y=MPG)) + \n    geom_point(alpha=0.8, size=3)+\n    stat_smooth(method='lm', formula = y~poly(x, 2, raw = TRUE)) +\n    theme_classic() + \n    labs(x = \"Horse Power\", y = \"Miles per Gallon\", \n         title = \"Polynomial Regression\", \n         subtitle = \"Polynomial Degree: 2\")\n\n\n\n## Diagnostic Plot: Polynomial Regression\nautoplot(lm_obj_2, which = 1)"
  }
]